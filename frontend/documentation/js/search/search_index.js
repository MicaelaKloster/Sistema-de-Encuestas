var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.585,1,1.185]],["body/components/AppComponent.html",[0,0.768,1,1.72,2,1.308,3,0.267,4,0.237,5,1.817,6,1.033,7,1.033,8,0.237,9,2.067,10,1.033,11,2.672,12,3.179,13,2.563,14,2.591,15,2.375,16,1.412,17,1.527,18,4.335,19,4.335,20,3.638,21,3.638,22,1.527,23,3.643,24,1.655,25,3.643,26,0.209,27,0.441,28,4.335,29,1.24,30,3.513,31,4.335,32,1.798,33,4.79,34,4.79,35,4.79,36,4.79,37,4.79,38,3.643,39,4.79,40,2.836,41,2.721,42,3.643,43,2.463,44,2.515,45,0.03,46,2.018,47,2.463,48,2.463,49,2.463,50,2.463,51,3.643,52,0.906,53,2.463,54,1.216,55,1.443,56,0.47,57,0.76,58,2.067,59,2.154,60,2.463,61,1.681,62,1.681,63,2.463,64,2.672,65,4.492,66,1.565,67,3.502,68,2.463,69,0.841,70,0.705,71,0.475,72,4.335,73,1.327,74,2.067,75,2.463,76,1.456,77,1.806,78,2.463,79,1.033,80,1.308,81,2.463,82,2.463,83,0.4,84,2.463,85,2.832,86,2.463,87,1.064,88,1.557,89,1.806,90,1.507,91,3.643,92,2.067,93,1.922,94,1.064,95,2.008,96,0.983,97,2.463,98,2.463,99,2.463,100,5.112,101,3.057,102,2.463,103,2.463,104,1.612,105,1.612,106,0.966,107,2.463,108,2.463,109,0.267,110,0.516,111,1.806,112,2.067,113,3.643,114,2.463,115,2.463,116,2.067,117,1.806,118,2.463,119,2.463,120,2.463,121,2.463,122,2.463,123,4.79,124,2.463,125,1.709,126,4.492,127,1.314,128,4.29,129,5.112,130,5.112,131,1.314,132,2.067,133,1.527,134,2.067,135,3.057,136,2.463,137,1.412,138,0.906,139,2.463,140,0.763,141,2.463,142,2.463,143,1.806,144,1.612,145,2.463,146,2.463,147,2.463,148,2.463,149,2.463,150,0.76,151,2.067,152,2.463,153,2.58,154,2.463,155,3.643,156,3.057,157,3.643,158,3.643,159,3.643,160,2.154,161,3.643,162,3.643,163,3.643,164,3.643,165,3.643,166,3.643,167,3.643,168,3.643,169,3.643,170,3.643,171,3.643,172,3.643,173,3.643,174,3.643,175,1.033,176,1.527,177,1.033,178,2.008,179,1.033,180,1.033,181,0.884,182,1.033,183,0.884,184,1.527,185,0.884,186,1.527,187,0.955,188,1.527,189,0.884,190,0.267,191,1.033,192,0.955,193,0.955,194,1.033,195,0.955,196,0.884,197,1.033,198,0.884,199,0.4,200,1.033,201,0.884,202,1.033,203,0.955,204,1.033,205,0.016,206,0.016]],["title/components/BannerComponent.html",[0,0.585,181,1.185]],["body/components/BannerComponent.html",[0,0.919,1,1.228,2,1.649,3,0.371,4,0.33,5,1.434,6,1.434,7,1.434,8,0.33,10,1.434,14,2.713,15,2.509,17,1.926,22,1.926,24,2.086,45,0.03,55,1.529,66,1.462,67,3.897,69,0.767,71,0.66,73,1.842,80,1.228,90,1.218,93,1.991,95,1.926,96,0.745,106,1.679,109,0.371,110,0.716,133,1.434,137,1.326,138,0.814,140,0.716,175,1.434,176,1.926,177,1.434,178,2.324,179,1.434,180,1.434,181,1.991,182,1.434,183,1.228,184,1.926,185,1.228,186,1.926,187,1.326,188,1.926,189,1.228,190,0.371,191,1.434,192,1.326,193,1.326,194,1.434,195,1.326,196,1.228,197,1.434,198,1.228,199,0.555,200,1.434,201,1.228,202,1.434,203,1.326,204,1.434,205,0.02,206,0.02,207,2.87,208,4.593,209,2.793,210,3.804,211,4.593,212,4.593,213,1.842,214,3.855,215,5.544,216,3.855,217,3.369,218,4.593,219,4.593,220,4.593,221,4.593,222,1.845,223,4.593,224,4.593,225,5.544,226,5.544,227,5.544,228,4.593,229,4.593,230,4.593,231,5.544,232,4.593,233,4.593,234,4.593,235,3.855,236,2.518,237,4.593,238,3.855,239,4.593,240,4.593,241,4.593,242,3.855,243,1.418,244,4.593,245,4.593,246,4.593,247,4.593,248,4.593,249,4.593,250,4.593,251,4.593,252,4.593,253,4.593,254,3.855,255,3.855,256,4.593]],["title/components/CreacionEncuestaComponent.html",[0,0.585,183,1.185]],["body/components/CreacionEncuestaComponent.html",[0,0.397,1,0.341,2,0.6,3,0.334,4,0.091,5,0.398,6,0.398,7,0.398,8,0.091,10,0.398,12,2.487,13,2.005,14,1.967,15,1.819,17,0.7,22,0.7,24,0.759,26,0.398,27,0.202,29,1.404,30,2.487,32,0.825,40,1.465,41,2.569,44,2.074,45,0.03,52,0.545,54,1.518,55,1.218,56,0.463,57,0.949,59,2.525,61,1.656,62,1.717,64,1.225,66,1.556,67,0.621,69,0.74,70,0.271,71,0.183,73,0.511,76,0.561,80,0.341,83,0.664,85,2.525,87,1.152,89,0.696,90,1.546,93,1.104,94,1.416,95,0.7,96,0.87,104,0.621,105,1.093,106,0.594,109,0.103,110,0.199,112,0.796,117,0.696,125,0.293,126,1.879,127,0.833,128,0.796,131,1.048,132,2.846,133,1.535,134,0.796,135,0.796,137,0.368,138,1.048,140,0.35,143,2.487,144,1.093,150,1.57,151,0.796,153,2.096,156,2.263,160,1.818,175,0.398,176,0.7,177,0.398,178,1.131,179,0.398,180,0.398,181,0.341,182,0.398,183,0.968,184,0.7,185,0.341,186,0.938,187,1.192,188,0.7,189,0.968,190,0.663,191,0.398,192,0.368,193,0.868,194,0.398,195,0.368,196,0.968,197,0.398,198,0.968,199,0.271,200,0.398,201,0.341,202,0.398,203,0.368,204,0.398,205,0.007,206,0.007,209,1.206,210,1.642,213,0.511,214,1.402,235,1.402,236,1.396,242,1.402,243,0.832,254,2.263,255,2.263,257,4.78,258,4.78,259,0.796,260,1.642,261,2.239,262,2.239,263,1.642,264,1.642,265,2.239,266,1.671,267,1.671,268,3.075,269,2.239,270,2.239,271,2.005,272,1.642,273,2.239,274,2.239,275,2.239,276,2.697,277,2.697,278,1.402,279,2.697,280,2.697,281,1.671,282,2.263,283,1.671,284,1.671,285,2.697,286,1.671,287,2.697,288,1.225,289,1.326,290,1.685,291,2.846,292,1.671,293,0.949,294,0.949,295,1.671,296,1.331,297,0.949,298,0.949,299,0.949,300,1.671,301,0.929,302,0.949,303,0.949,304,1.671,305,0.949,306,1.671,307,0.949,308,0.949,309,1.671,310,1.453,311,0.949,312,0.77,313,0.949,314,1.402,315,0.949,316,3.267,317,0.949,318,0.949,319,1.402,320,0.949,321,1.765,322,0.949,323,1.465,324,3.003,325,0.949,326,1.093,327,0.949,328,0.949,329,1.671,330,0.949,331,0.949,332,0.949,333,0.949,334,0.949,335,0.949,336,0.949,337,0.949,338,0.696,339,0.696,340,3.072,341,2.685,342,0.696,343,0.621,344,0.796,345,0.696,346,0.621,347,0.796,348,0.796,349,0.621,350,0.621,351,0.621,352,0.561,353,0.696,354,0.796,355,0.988,356,0.696,357,0.696,358,0.949,359,2.855,360,0.696,361,0.949,362,0.796,363,1.978,364,1.225,365,3.132,366,0.949,367,0.949,368,0.796,369,3.892,370,0.696,371,2.255,372,2.255,373,2.263,374,2.58,375,3.661,376,0.949,377,1.94,378,1.765,379,1.671,380,2.263,381,3.072,382,0.696,383,0.796,384,0.796,385,0.696,386,2.42,387,1.225,388,0.949,389,3.716,390,2.58,391,0.949,392,0.949,393,1.174,394,3.391,395,0.949,396,1.642,397,0.949,398,0.621,399,0.949,400,0.949,401,0.949,402,0.696,403,0.949,404,0.949,405,3.007,406,0.949,407,1.402,408,0.949,409,0.696,410,0.949,411,0.796,412,0.949,413,0.949,414,0.949,415,1.671,416,0.949,417,1.671,418,0.949,419,0.949,420,3.211,421,0.949,422,0.949,423,0.949,424,0.949,425,0.949,426,0.949,427,0.949,428,1.402,429,1.314,430,1.323,431,1.402,432,1.671,433,1.671,434,1.671,435,1.671,436,0.949,437,1.671,438,3.07,439,3.328,440,1.671,441,3.07,442,0.949,443,3.938,444,1.402,445,2.263,446,0.949,447,0.949,448,3.441,449,2.487,450,1.671,451,0.949,452,0.949,453,1.402,454,2.239,455,1.404,456,1.402,457,0.949,458,1.642,459,1.671,460,0.949,461,0.949,462,0.949,463,0.949,464,1.419,465,2.697,466,0.696,467,0.561,468,0.949,469,1.402,470,0.949,471,1.671,472,0.949,473,3.661,474,3.267,475,2.263,476,0.949,477,0.949,478,0.949,479,0.949,480,0.949,481,0.949,482,1.671,483,0.796,484,1.671,485,0.949,486,2.239,487,0.949,488,0.949,489,1.402,490,0.796,491,0.949,492,0.949,493,0.949,494,0.949,495,1.642,496,1.765,497,1.402,498,3.072,499,2.697,500,1.642,501,1.671,502,1.402,503,0.868,504,1.671,505,1.402,506,1.402,507,1.402,508,1.13,509,1.402,510,1.402,511,2.263,512,0.949,513,0.949,514,1.402,515,2.263,516,1.402,517,1.402,518,1.402,519,1.402,520,1.402,521,0.949,522,1.465,523,1.671,524,1.879,525,0.696,526,0.949,527,0.949,528,0.949,529,0.796,530,0.796,531,2.239,532,0.949,533,0.949,534,0.949,535,0.949,536,0.949,537,3.075,538,1.671,539,0.949,540,1.402,541,0.949,542,1.671,543,0.796,544,1.671,545,0.949,546,1.671,547,0.949,548,0.949,549,0.949,550,0.949,551,2.239,552,1.422,553,1.879,554,1.671,555,0.949,556,0.796,557,0.796,558,0.796,559,0.949,560,0.949,561,0.949,562,0.949,563,0.949,564,1.671,565,0.949,566,0.949,567,2.487,568,0.949,569,0.398,570,0.949,571,4.094,572,0.949,573,0.949,574,1.879,575,0.949,576,1.671,577,0.949,578,0.796,579,0.621,580,2.697,581,0.949,582,0.949,583,0.949,584,0.949,585,0.949,586,0.796,587,0.949,588,0.949,589,0.949,590,0.949,591,0.796,592,0.796,593,0.949,594,1.671,595,0.949,596,2.239,597,0.949,598,1.671,599,0.398,600,1.671,601,2.697,602,0.949,603,0.949,604,0.949,605,0.696,606,0.949,607,0.949,608,0.949,609,0.796,610,0.949,611,0.949,612,1.671,613,1.671,614,0.949,615,0.949,616,1.671,617,0.949,618,0.949,619,1.671,620,0.7,621,1.671,622,0.949,623,1.331,624,0.443,625,2.697,626,0.796,627,2.697,628,0.368,629,2.697,630,0.949,631,0.949,632,0.949,633,0.949,634,1.671,635,0.949,636,0.949,637,0.949,638,0.949,639,0.949,640,1.671,641,0.949,642,0.949,643,0.949,644,0.949,645,0.949,646,0.949,647,0.949,648,0.949,649,0.949,650,0.949,651,0.949,652,0.949,653,0.949,654,1.879,655,1.671,656,2.239,657,0.949,658,0.949,659,0.949,660,0.949,661,0.949,662,0.949,663,0.621,664,0.949,665,0.949,666,0.949,667,0.949,668,0.949,669,0.949,670,0.648,671,0.949,672,1.671,673,0.949,674,0.398,675,3.075,676,0.949,677,0.949,678,0.949,679,1.671,680,0.949,681,0.949,682,3.661,683,0.949,684,0.949,685,0.796,686,2.697,687,0.949,688,0.949,689,0.949,690,1.671,691,0.949,692,0.949,693,0.796,694,0.949,695,0.949,696,0.949,697,0.949,698,0.949,699,0.796,700,0.949,701,0.949,702,1.671,703,0.696,704,0.949,705,0.949,706,0.949,707,0.949,708,0.949,709,0.949,710,1.671,711,1.671,712,1.093,713,1.671,714,1.671,715,1.671,716,1.671,717,1.671,718,1.671,719,1.225,720,2.697,721,3.267,722,3.585,723,2.697,724,1.218,725,1.978,726,2.697,727,1.671,728,1.671,729,1.402,730,1.225,731,1.671,732,1.402,733,1.671,734,1.671,735,1.671,736,1.225,737,0.41,738,0.988]],["title/interfaces/CreateEncuestaDTO.html",[355,1.951,739,0.172]],["body/interfaces/CreateEncuestaDTO.html",[3,0.461,4,0.41,8,0.41,26,0.36,27,0.64,45,0.03,52,1.118,56,0.653,57,1.948,66,1.412,69,0.782,83,0.689,90,1.401,93,1.526,94,1.297,96,0.689,109,0.461,138,0.936,150,1.311,153,2.288,160,3.125,205,0.023,206,0.023,236,1.93,289,1.642,290,1.526,291,5.052,355,3.125,357,3.116,389,3.566,390,3.566,393,1.126,407,4.829,430,2.512,530,4.436,567,3.876,591,5.052,592,5.052,730,4.219,739,0.222,740,1.126,741,2.78,742,3.566,743,4.436,744,3.876,745,3.939,746,3.566,747,3.116,748,3.125,749,2.288,750,3.566,751,3.566,752,1.526,753,4.248,754,3.116,755,4.248,756,4.248,757,4.248,758,3.566,759,4.248,760,5.285,761,5.285,762,2.78,763,4.248]],["title/interfaces/CreatePreguntaDTO.html",[739,0.172,745,2.16]],["body/interfaces/CreatePreguntaDTO.html",[3,0.512,4,0.455,8,0.455,26,0.4,27,0.682,45,0.029,56,0.512,66,1.158,69,0.833,90,1.251,93,1.694,96,0.914,109,0.512,127,1.158,150,1.456,153,2.541,190,0.611,205,0.025,206,0.025,236,2.143,296,2.781,370,3.46,430,2.789,737,1.565,739,0.246,740,1.251,741,3.087,743,4.728,744,4.132,745,3.686,746,3.959,747,3.46,749,2.541,750,3.959,751,3.959,752,1.694,754,3.46,764,3.959,765,4.083,766,3.46,767,4.717,768,4.717]],["title/interfaces/Encuesta.html",[138,0.585,739,0.172]],["body/interfaces/Encuesta.html",[3,0.356,4,0.317,8,0.317,16,1.273,26,0.278,27,0.541,29,1.279,45,0.03,46,1.093,52,1.152,56,0.619,57,1.379,69,0.806,70,0.94,71,0.634,79,1.377,83,0.533,87,1.097,88,1.179,94,1.339,96,0.824,106,0.871,109,0.674,110,0.688,125,1.014,127,0.806,131,1.4,138,0.966,140,0.688,190,0.592,199,0.925,205,0.02,206,0.02,222,1.093,243,1.014,289,1.512,290,2.048,301,1.469,312,1.153,393,0.871,429,1.179,455,1.632,464,1.273,503,1.733,508,1.014,552,1.377,569,1.377,599,1.874,620,1.377,624,1.625,628,1.273,670,1.273,674,1.874,724,1.179,737,1.339,739,0.314,740,0.871,752,1.179,769,1.273,770,2.286,771,1.488,772,1.874,773,2.03,774,1.377,775,2.391,776,2.03,777,1.273,778,1.492,779,1.492,780,1.97,781,0.871,782,1.093,783,1.093,784,1.093,785,1.733,786,1.691,787,2.03,788,1.273,789,1.492,790,1.379,791,1.273,792,1.379,793,1.273,794,1.874,795,1.377,796,1.179,797,1.377,798,1.492,799,1.492,800,1.492,801,1.492,802,1.492,803,1.492,804,1.492,805,1.492,806,1.492,807,1.492,808,1.492,809,1.377,810,1.273,811,1.492,812,2.03,813,1.492,814,2.307,815,1.492,816,1.492,817,1.377,818,1.377,819,1.492,820,1.492,821,1.492,822,1.377,823,1.492,824,1.377,825,1.273,826,1.492,827,1.492,828,1.492,829,1.492,830,1.093,831,1.492,832,2.03,833,1.492,834,1.492,835,1.492,836,1.492]],["title/interfaces/EncuestaDTO.html",[739,0.172,748,1.951]],["body/interfaces/EncuestaDTO.html",[3,0.488,4,0.434,8,0.434,26,0.381,27,0.663,45,0.03,52,1.134,56,0.666,66,1.449,69,0.666,83,0.888,90,1.629,92,3.778,96,0.73,109,0.488,111,3.301,137,1.745,138,1.115,150,1.389,205,0.024,206,0.024,289,1.669,290,2.26,296,3.032,301,1.34,467,2.661,586,3.778,624,1.629,626,5.155,739,0.235,740,1.193,747,3.301,748,3.238,749,2.424,754,3.301,762,2.945,837,3.778,838,3.778,839,3.778,840,3.778,841,2.945]],["title/interfaces/EncuestaResponse.html",[739,0.172,793,1.28]],["body/interfaces/EncuestaResponse.html",[3,0.364,4,0.323,8,0.323,16,1.299,26,0.284,27,0.549,29,1.296,45,0.03,46,1.115,52,1.143,56,0.557,69,0.813,70,0.959,71,0.646,79,1.405,83,0.544,87,1.112,88,1.203,94,1.35,96,0.833,106,0.889,109,0.677,110,0.702,125,1.034,127,0.823,131,1.41,138,1.018,140,0.702,190,0.492,199,0.932,205,0.02,206,0.02,222,1.115,243,1.034,289,1.201,290,1.627,301,1.455,312,1.165,393,0.889,429,1.203,455,1.644,464,1.299,503,2.227,508,1.034,552,1.405,569,1.405,599,1.899,620,1.405,624,1.523,628,1.299,670,1.299,674,1.899,724,1.203,737,1.35,739,0.316,740,0.889,752,1.203,769,1.299,770,1.405,771,1.508,772,1.899,773,2.058,774,1.405,775,2.408,776,2.058,777,1.299,778,1.522,779,1.522,780,1.99,781,0.889,782,1.115,783,1.115,784,1.115,785,1.757,786,1.708,787,2.058,788,1.299,789,1.522,790,1.398,791,1.299,792,1.398,793,1.757,794,2.408,795,1.405,796,1.203,797,1.405,798,1.522,799,1.522,800,1.522,801,1.522,802,1.522,803,1.522,804,1.522,805,1.522,806,1.522,807,1.522,808,1.522,809,1.405,810,1.299,811,1.522,812,2.058,813,1.522,814,2.331,815,1.522,816,1.522,817,1.405,818,1.405,819,1.522,820,1.522,821,1.522,822,1.405,823,1.522,824,1.405,825,1.299,826,1.522,827,1.522,828,1.522,829,1.522,830,1.115,831,1.522,832,2.058,833,1.522,834,1.522,835,1.522,836,1.522]],["title/injectables/EncuestasService.html",[271,1.951,771,1.099]],["body/injectables/EncuestasService.html",[3,0.382,4,0.339,8,0.339,15,1.365,16,1.365,26,0.298,27,0.567,29,1.506,32,2.311,41,2.548,44,2.39,45,0.03,46,1.751,52,0.932,54,2.597,55,1.751,56,0.571,57,1.624,61,1.365,62,1.365,66,1.377,69,0.888,70,1.007,71,0.679,83,0.571,85,2.081,87,1.15,90,1.487,93,1.264,94,1.15,96,0.974,106,0.933,109,0.382,110,0.737,125,1.624,131,1.292,138,1.035,150,1.802,153,2.522,160,2.081,205,0.021,206,0.021,243,1.086,271,2.768,282,3.93,301,1.325,312,1.363,355,3.316,356,2.582,357,2.582,371,2.582,378,2.303,393,1.242,402,2.582,430,2.081,567,3.434,605,2.582,624,1.395,670,2.264,703,3.434,732,2.954,748,2.081,762,3.064,771,1.559,772,2.448,774,1.476,775,2.448,777,1.365,795,1.476,797,1.963,825,1.365,842,2.582,843,2.954,844,4.683,845,5.262,846,3.52,847,4.707,848,3.52,849,4.683,850,3.52,851,4.683,852,3.52,853,4.707,854,3.52,855,3.859,856,3.52,857,3.52,858,3.52,859,3.52,860,2.582,861,3.52,862,3.52,863,3.52,864,2.954,865,4.683,866,5.262,867,3.52,868,3.52,869,3.52,870,3.52,871,4.683,872,2.954,873,3.52,874,3.52,875,3.52,876,3.52,877,3.52,878,3.52,879,3.52]],["title/components/GestionOpcionDialogComponent.html",[0,0.585,185,1.185]],["body/components/GestionOpcionDialogComponent.html",[0,0.803,1,0.955,2,1.383,3,0.288,4,0.256,5,1.114,6,1.114,7,1.114,8,0.256,10,1.114,13,3.25,14,2.604,15,2.409,17,1.615,22,1.615,24,1.75,26,0.225,27,0.466,29,1.296,32,1.901,40,2.964,41,2.73,44,1.75,45,0.03,52,0.471,55,1.282,56,0.418,59,2.277,61,1.031,62,1.031,66,1.35,69,0.859,70,0.761,71,0.513,76,1.572,80,0.955,83,0.625,87,0.946,88,1.383,90,1.458,93,0.955,94,1.453,95,1.615,96,0.92,109,0.288,110,0.557,125,1.189,127,0.653,131,0.946,133,1.114,137,1.031,140,0.557,143,1.95,150,1.398,175,1.114,176,1.615,177,1.114,178,2.082,179,1.114,180,1.114,181,0.955,182,1.114,183,0.955,184,1.615,185,1.784,186,2.435,187,2.571,188,1.615,189,0.955,190,0.418,191,1.114,192,1.031,193,1.031,194,1.114,195,1.031,196,0.955,197,1.114,198,1.784,199,0.975,200,1.114,201,0.955,202,1.114,203,1.031,204,1.114,205,0.017,206,0.017,209,2.44,213,1.432,236,1.207,260,3.322,263,3.322,264,3.322,272,3.322,288,2.825,321,3.25,323,1.739,326,2.52,338,1.95,339,1.95,341,3.643,342,1.95,343,1.739,345,1.95,346,3.984,352,1.572,353,1.95,359,4.032,360,1.95,363,1.95,364,1.95,365,3.867,374,3.233,377,1.207,382,1.95,385,1.95,386,2.277,387,1.95,393,0.705,396,1.95,398,1.739,405,1.572,409,1.95,429,2.036,438,1.739,439,1.739,441,1.739,448,1.95,449,1.95,455,0.761,458,3.867,466,1.95,496,1.739,500,1.95,508,0.82,522,1.739,525,1.95,529,2.231,579,1.739,703,1.95,719,3.322,738,1.572,830,0.885,860,1.95,880,4.466,881,1.95,882,3.233,883,3.802,884,3.233,885,3.233,886,4.425,887,4.614,888,3.233,889,3.233,890,3.852,891,2.231,892,3.852,893,3.852,894,2.231,895,2.658,896,2.658,897,2.231,898,2.658,899,3.233,900,2.231,901,3.233,902,2.231,903,2.576,904,2.231,905,2.231,906,2.231,907,2.231,908,2.231,909,2.231,910,2.658,911,2.658,912,2.231,913,2.231,914,2.231,915,2.658,916,2.658,917,2.231,918,2.231,919,2.231,920,2.231,921,3.233,922,3.233]],["title/components/GestionPreguntaDialogComponent.html",[0,0.585,189,1.185]],["body/components/GestionPreguntaDialogComponent.html",[0,0.572,1,0.558,2,0.913,3,0.169,4,0.15,5,0.652,6,0.652,7,0.652,8,0.15,10,0.652,12,3.239,13,2.611,14,2.345,15,2.136,17,1.066,22,1.066,24,1.155,26,0.395,27,0.308,29,1.264,32,1.255,40,2.112,41,2.786,44,2.409,45,0.03,52,0.661,54,2.03,55,1.552,56,0.546,57,1.27,59,2.976,61,1.595,62,1.595,66,1.461,69,0.848,70,0.445,71,0.491,76,0.919,80,0.558,83,0.252,85,1.503,87,0.792,88,0.913,90,1.29,93,0.558,94,1.373,95,1.066,96,0.878,104,1.017,105,1.017,106,0.856,109,0.169,110,0.326,117,1.865,127,1.01,131,1.084,133,0.652,137,0.603,140,0.326,144,1.017,150,1.363,160,0.919,175,0.652,176,1.066,177,0.652,178,1.563,179,0.652,180,0.652,181,0.558,182,0.652,183,0.558,184,1.066,185,1.339,186,2.11,187,1.807,188,1.066,189,1.339,190,0.724,191,0.652,192,0.603,193,0.986,194,0.652,195,0.603,196,1.339,197,0.652,198,1.339,199,0.907,200,0.652,201,0.558,202,0.652,203,0.603,204,0.652,205,0.011,206,0.011,209,1.738,213,0.837,217,1.14,236,0.706,243,0.785,260,2.367,263,2.367,264,2.367,272,2.367,278,3.452,288,1.865,289,0.412,296,2.03,301,1.002,310,2.216,312,1.143,314,2.134,316,2.134,321,2.44,323,2.112,324,1.14,326,1.664,338,1.14,339,1.14,340,3.707,341,3.89,342,1.865,343,1.017,344,1.304,345,1.14,346,4.05,347,1.304,348,1.304,349,1.664,350,1.017,351,1.017,352,0.919,353,1.14,356,1.14,359,3.419,360,1.14,363,1.865,364,1.865,365,3.239,368,1.304,370,1.14,372,1.14,377,0.706,381,2.134,382,1.14,383,1.304,384,1.304,385,1.14,386,2.611,387,1.865,393,0.674,396,2.367,398,1.664,405,1.503,420,2.112,428,1.304,429,1.86,430,1.503,431,1.304,438,1.017,439,1.664,441,1.017,444,1.304,445,2.134,448,1.14,449,1.14,453,1.304,455,0.445,458,2.735,466,1.14,467,0.919,469,1.304,474,2.709,483,2.134,490,1.304,495,1.865,496,1.017,497,1.304,498,1.304,500,1.14,502,1.304,503,0.603,506,2.134,507,1.304,508,1.151,509,1.304,510,1.304,511,2.134,514,1.304,515,2.134,516,1.304,517,1.304,518,1.304,519,1.304,520,1.304,522,1.664,525,1.14,553,1.304,556,1.304,557,1.304,558,1.304,574,1.304,579,1.017,623,0.767,712,1.017,719,2.735,721,2.134,722,2.134,724,0.913,725,2.367,729,2.134,730,1.14,736,1.14,737,1.437,738,1.908,765,1.017,766,1.14,786,0.846,810,0.603,830,0.846,860,1.14,880,4.52,881,1.14,882,2.134,883,2.709,884,2.134,885,2.134,886,2.134,887,3.707,888,2.134,889,2.134,891,1.304,894,2.134,897,1.304,899,2.134,900,1.304,901,2.134,902,1.304,903,2.006,904,1.304,905,1.304,906,1.304,907,1.304,908,1.304,909,2.134,912,1.304,913,1.304,914,1.304,917,1.304,918,1.304,919,1.304,920,1.304,921,2.134,922,2.134,923,3.228,924,3.228,925,3.228,926,3.228,927,4.662,928,3.73,929,2.543,930,2.543,931,2.543,932,1.865,933,3.73,934,3.73,935,3.73,936,2.543,937,2.543,938,1.554,939,1.554,940,2.543,941,1.554,942,2.543,943,1.554,944,1.554,945,2.543,946,1.554,947,2.543,948,1.554,949,2.134,950,1.554,951,1.554,952,1.304,953,1.554,954,1.554,955,1.554,956,1.554,957,1.554,958,2.543,959,1.554,960,2.543,961,1.554,962,1.554,963,1.554,964,1.554,965,1.554,966,1.554,967,1.554,968,1.865,969,1.554,970,1.554,971,1.554,972,1.554,973,1.14,974,1.14,975,1.554,976,1.554,977,1.554,978,1.554,979,1.554,980,2.543,981,1.503,982,1.554,983,1.017,984,1.554,985,2.134,986,1.554,987,1.554,988,1.554,989,1.304,990,1.554,991,2.543,992,1.554,993,1.554,994,1.554,995,1.304,996,1.304,997,1.304,998,1.554,999,1.554,1000,1.017,1001,1.304,1002,1.304,1003,1.554,1004,1.554,1005,1.554,1006,1.554,1007,2.543,1008,2.543,1009,2.543,1010,2.543,1011,2.543,1012,2.543,1013,2.134,1014,2.543,1015,2.543,1016,2.543,1017,2.543]],["title/components/NavbarComponent.html",[0,0.585,80,1.185]],["body/components/NavbarComponent.html",[0,1.011,1,1.499,2,1.877,3,0.453,4,0.402,5,1.75,6,1.75,7,1.75,8,0.402,10,1.75,14,2.786,15,2.577,17,2.192,22,2.192,24,2.375,45,0.03,55,1.74,65,4.388,66,1.283,67,3.421,69,0.844,71,0.805,73,2.249,80,2.148,95,2.192,109,0.453,110,0.875,133,1.75,137,1.619,140,0.875,175,1.75,176,2.192,177,1.75,178,2.508,179,1.75,180,1.75,181,1.499,182,1.75,183,1.499,184,2.192,185,1.499,186,2.192,187,1.619,188,2.192,189,1.499,190,0.453,191,1.75,192,1.619,193,1.619,194,1.75,195,1.619,196,1.499,197,1.75,198,1.499,199,0.677,200,1.75,201,1.499,202,1.75,203,1.619,204,1.75,205,0.023,206,0.023,209,3.074,210,4.186,213,2.249,1018,3.504,1019,5.228,1020,5.228,1021,5.228]],["title/interfaces/OpcionDTO.html",[739,0.172,1022,2.16]],["body/interfaces/OpcionDTO.html",[3,0.522,4,0.464,8,0.464,26,0.408,27,0.69,45,0.029,52,1.076,56,0.619,66,1.491,83,0.78,90,1.511,109,0.522,190,0.522,199,1.04,205,0.025,206,0.025,301,1.379,377,2.185,393,1.276,495,3.529,605,3.529,663,3.148,739,0.251,740,1.276,786,2.09,903,2.589,1022,3.73,1023,4.038,1024,4.038,1025,4.038,1026,4.812]],["title/interfaces/OpcionRespuesta.html",[739,0.172,785,1.28]],["body/interfaces/OpcionRespuesta.html",[3,0.36,4,0.32,8,0.32,16,1.288,26,0.281,27,0.545,29,1.289,45,0.03,46,1.106,52,1.142,56,0.594,69,0.81,70,0.95,71,0.641,79,1.392,83,0.539,87,1.106,88,1.193,94,1.345,96,0.829,106,0.881,109,0.676,110,0.696,125,1.025,127,0.815,131,1.406,138,0.905,140,0.696,190,0.489,199,0.996,205,0.02,206,0.02,222,1.106,243,1.025,289,1.194,290,1.617,301,1.484,312,1.16,393,0.881,429,1.193,455,1.639,464,1.288,503,1.746,508,1.025,552,1.392,569,1.392,599,1.888,620,1.392,624,1.629,628,1.288,670,1.288,674,1.888,724,1.193,737,1.345,739,0.315,740,0.881,752,1.193,769,1.288,770,1.392,771,1.499,772,1.888,773,2.046,774,1.392,775,2.4,776,2.046,777,1.288,778,1.509,779,1.509,780,1.981,781,0.881,782,1.106,783,1.106,784,1.106,785,1.981,786,1.965,787,2.046,788,1.288,789,1.509,790,1.39,791,1.288,792,1.39,793,1.288,794,1.888,795,1.392,796,1.193,797,1.392,798,1.509,799,1.509,800,1.509,801,1.509,802,1.509,803,1.509,804,1.509,805,1.509,806,1.509,807,1.509,808,1.509,809,1.392,810,1.288,811,1.509,812,2.046,813,1.509,814,2.321,815,1.509,816,1.509,817,1.392,818,1.392,819,1.509,820,1.509,821,1.509,822,1.392,823,1.509,824,1.392,825,1.288,826,1.509,827,1.509,828,1.509,829,1.509,830,1.106,831,1.509,832,2.046,833,1.509,834,1.509,835,1.509,836,1.509]],["title/interfaces/Pregunta.html",[190,0.358,739,0.172]],["body/interfaces/Pregunta.html",[3,0.35,4,0.311,8,0.311,16,1.252,26,0.274,27,0.535,29,1.264,45,0.03,46,1.676,52,1.137,56,0.65,57,1.363,69,0.801,70,0.924,71,0.623,79,1.353,83,0.524,87,1.084,88,1.159,94,1.329,96,0.817,106,0.856,109,0.672,110,0.676,125,0.996,127,0.793,131,1.392,138,0.892,140,0.676,190,0.546,199,0.99,205,0.019,206,0.019,222,1.075,243,0.996,289,1.171,290,1.586,301,1.479,312,1.329,393,0.856,429,1.159,455,1.622,464,1.252,503,1.713,508,0.996,552,1.353,569,1.353,599,1.852,620,1.353,624,1.618,628,1.252,670,1.252,674,1.852,724,1.159,737,1.471,739,0.313,740,0.856,752,1.159,769,1.252,770,1.353,771,1.47,772,1.852,773,2.006,774,1.353,775,2.377,776,2.006,777,1.252,778,1.466,779,1.466,780,2.198,781,0.856,782,1.075,783,1.075,784,1.075,785,2.099,786,1.949,787,2.575,788,1.252,789,1.466,790,1.363,791,1.252,792,1.363,793,1.252,794,1.852,795,1.353,796,1.159,797,1.353,798,1.466,799,1.466,800,1.466,801,1.466,802,1.466,803,1.466,804,1.466,805,1.466,806,1.466,807,1.466,808,1.466,809,1.353,810,1.252,811,1.466,812,2.006,813,1.466,814,2.287,815,1.466,816,1.466,817,1.353,818,1.353,819,1.466,820,1.466,821,1.466,822,1.353,823,1.466,824,1.353,825,1.252,826,1.466,827,1.466,828,1.466,829,1.466,830,1.075,831,1.466,832,2.006,833,1.466,834,1.466,835,1.466,836,1.466]],["title/interfaces/PreguntaDTO.html",[296,1.629,739,0.172]],["body/interfaces/PreguntaDTO.html",[3,0.462,4,0.411,8,0.411,26,0.361,27,0.641,45,0.03,52,1.021,56,0.673,57,1.634,66,1.572,69,0.783,83,0.691,90,1.675,93,1.53,105,2.789,109,0.462,127,1.046,138,0.938,150,1.315,190,0.673,199,1.005,205,0.023,206,0.023,296,2.614,301,1.434,310,3.246,312,1.434,350,2.789,351,2.789,467,2.52,623,2.104,624,1.598,737,1.521,739,0.222,740,1.13,749,2.296,752,1.53,766,3.126,781,1.13,786,2.006,830,1.419,838,3.577,839,3.577,840,3.577,903,2.405,1022,3.943,1024,3.577,1025,3.577,1027,3.577,1028,4.262,1029,4.262,1030,4.262]],["title/interfaces/RegistrarRespuestasDTO.html",[739,0.172,792,1.019]],["body/interfaces/RegistrarRespuestasDTO.html",[3,0.488,4,0.433,8,0.433,26,0.381,27,0.662,45,0.03,52,0.796,56,0.488,66,1.571,83,0.887,87,1.103,90,1.191,96,0.887,109,0.594,138,0.796,150,1.387,190,0.594,199,0.887,205,0.024,206,0.024,222,2.13,236,2.041,289,1.451,301,1.242,312,1.242,377,2.041,378,2.94,623,2.218,624,1.191,663,2.94,737,1.343,739,0.285,740,1.191,749,2.42,781,1.191,782,1.496,783,1.496,784,1.496,790,1.894,791,1.742,792,1.688,841,2.94,903,2.041,981,3.487,983,3.58,1000,2.94,1031,3.295,1032,3.771,1033,3.295,1034,3.771,1035,3.771,1036,3.295]],["title/interfaces/RegistrarRespuestasDto.html",[739,0.172,792,1.019]],["body/interfaces/RegistrarRespuestasDto.html",[3,0.367,4,0.326,8,0.326,16,1.311,26,0.287,27,0.552,29,1.304,45,0.03,46,1.125,52,1.129,56,0.495,69,0.816,70,0.967,71,0.652,79,1.417,83,0.548,87,1.119,88,1.214,94,1.355,96,0.836,106,0.896,109,0.678,110,0.708,125,1.043,127,0.83,131,1.414,138,0.914,140,0.708,190,0.495,199,0.934,205,0.02,206,0.02,222,1.837,243,1.043,289,1.209,290,1.637,301,1.457,312,1.17,393,0.896,429,1.214,455,1.649,464,1.311,503,1.767,508,1.043,552,1.417,569,1.417,599,1.911,620,1.417,624,1.528,628,1.311,670,1.311,674,1.911,724,1.214,737,1.355,739,0.316,740,0.896,752,1.214,769,1.311,770,1.417,771,1.517,772,1.911,773,2.07,774,1.417,775,2.415,776,2.07,777,1.311,778,1.536,779,1.536,780,1.999,781,0.896,782,1.125,783,1.125,784,1.125,785,1.767,786,1.716,787,2.07,788,1.311,789,1.536,790,1.703,791,1.311,792,1.591,793,1.311,794,1.911,795,1.417,796,1.214,797,1.417,798,1.536,799,1.536,800,1.536,801,1.536,802,1.536,803,1.536,804,1.536,805,1.536,806,1.536,807,1.536,808,1.536,809,1.417,810,1.311,811,1.536,812,2.07,813,1.536,814,2.342,815,1.536,816,1.536,817,1.417,818,1.417,819,1.536,820,1.536,821,1.536,822,1.417,823,1.536,824,1.417,825,1.311,826,1.536,827,1.536,828,1.536,829,1.536,830,1.125,831,1.536,832,2.07,833,1.536,834,1.536,835,1.536,836,1.536]],["title/interfaces/RespuestaPreguntaDTO.html",[739,0.172,790,1.019]],["body/interfaces/RespuestaPreguntaDTO.html",[3,0.459,4,0.408,8,0.408,26,0.358,27,0.638,45,0.03,52,1.017,56,0.652,57,1.855,66,1.548,83,0.855,87,1.038,90,1.121,96,0.855,109,0.572,138,0.749,150,1.305,190,0.572,199,1.003,205,0.023,206,0.023,222,1.911,236,1.92,289,1.397,301,1.431,312,1.403,377,1.92,378,2.766,623,2.087,624,1.121,663,2.766,737,1.518,739,0.275,740,1.121,749,2.277,781,1.522,782,1.911,783,1.911,784,1.911,790,1.772,791,2.33,792,1.305,841,2.766,903,1.92,981,3.394,983,3.448,1000,2.766,1031,3.101,1032,3.548,1033,3.101,1034,3.548,1035,3.548,1036,3.101]],["title/interfaces/RespuestaPreguntaDto.html",[739,0.172,790,1.019]],["body/interfaces/RespuestaPreguntaDto.html",[3,0.356,4,0.316,8,0.316,16,1.27,26,0.278,27,0.54,29,1.277,45,0.03,46,1.091,52,1.139,56,0.618,57,1.681,69,0.806,70,0.938,71,0.632,79,1.373,83,0.531,87,1.095,88,1.176,94,1.337,96,0.823,106,0.869,109,0.674,110,0.686,125,1.011,127,0.804,131,1.399,138,0.899,140,0.686,190,0.484,199,0.993,205,0.02,206,0.02,222,1.091,243,1.011,289,1.183,290,1.602,301,1.482,312,1.335,393,0.869,429,1.176,455,1.631,464,1.27,503,1.73,508,1.011,552,1.373,569,1.373,599,1.87,620,1.373,624,1.511,628,1.27,670,1.27,674,1.87,724,1.176,737,1.477,739,0.314,740,0.869,752,1.176,769,1.27,770,1.373,771,1.485,772,1.87,773,2.027,774,1.373,775,2.389,776,2.027,777,1.27,778,1.488,779,1.488,780,2.21,781,0.869,782,1.091,783,1.091,784,1.091,785,1.73,786,1.689,787,2.027,788,1.27,789,1.488,790,1.566,791,2.112,792,1.377,793,1.27,794,1.87,795,1.373,796,1.176,797,1.373,798,1.488,799,1.488,800,1.488,801,1.488,802,1.488,803,1.488,804,1.488,805,1.488,806,1.488,807,1.488,808,1.488,809,1.373,810,1.27,811,1.488,812,2.027,813,1.488,814,2.305,815,1.488,816,1.488,817,1.373,818,1.373,819,1.488,820,1.488,821,1.488,822,1.373,823,1.488,824,1.373,825,1.27,826,1.488,827,1.488,828,1.488,829,1.488,830,1.091,831,1.488,832,2.027,833,1.488,834,1.488,835,1.488,836,1.488]],["title/interfaces/RespuestaUsuario.html",[739,0.172,788,1.28]],["body/interfaces/RespuestaUsuario.html",[3,0.36,4,0.32,8,0.32,16,1.288,26,0.281,27,0.545,29,1.289,45,0.03,46,1.106,52,1.142,56,0.594,69,0.81,70,0.95,71,0.641,79,1.392,83,0.539,87,1.106,88,1.193,94,1.345,96,0.829,106,0.881,109,0.676,110,0.696,125,1.025,127,0.815,131,1.406,138,0.905,140,0.696,190,0.489,199,0.996,205,0.02,206,0.02,222,1.106,243,1.025,289,1.194,290,1.617,301,1.484,312,1.16,393,0.881,429,1.193,455,1.639,464,1.288,503,1.746,508,1.025,552,1.392,569,1.392,599,1.888,620,1.392,624,1.518,628,1.288,670,1.288,674,1.888,724,1.193,737,1.482,739,0.315,740,0.881,752,1.193,769,1.288,770,1.392,771,1.499,772,1.888,773,2.046,774,1.392,775,2.4,776,2.046,777,1.288,778,1.509,779,1.509,780,1.981,781,0.881,782,1.106,783,1.106,784,1.106,785,1.746,786,1.701,787,2.046,788,1.746,789,2.488,790,1.39,791,1.288,792,1.39,793,1.288,794,1.888,795,1.392,796,1.193,797,1.392,798,1.509,799,1.509,800,1.509,801,1.509,802,1.509,803,1.509,804,1.509,805,1.509,806,1.509,807,1.509,808,1.509,809,1.392,810,1.288,811,1.509,812,2.046,813,1.509,814,2.321,815,1.509,816,1.509,817,1.392,818,1.392,819,1.509,820,1.509,821,1.509,822,1.392,823,1.509,824,1.392,825,1.288,826,1.509,827,1.509,828,1.509,829,1.509,830,1.106,831,1.509,832,2.046,833,1.509,834,1.509,835,1.509,836,1.509]],["title/injectables/RespuestasService.html",[771,1.099,796,1.185]],["body/injectables/RespuestasService.html",[3,0.325,4,0.288,8,0.288,16,1.16,26,0.254,27,0.507,29,1.636,32,2.068,41,2.597,44,2.506,45,0.03,46,0.996,52,1.157,54,2.723,55,1.836,56,0.62,57,1.703,61,1.16,62,1.16,69,0.775,70,0.856,71,0.577,79,1.254,83,0.485,87,1.029,88,1.074,94,1.286,96,0.784,106,0.793,109,0.661,110,0.627,125,0.923,127,0.734,131,1.354,138,0.857,140,0.627,190,0.455,199,0.895,205,0.018,206,0.018,222,0.996,243,0.923,289,1.111,290,1.505,301,1.477,312,1.098,393,0.793,429,1.074,455,1.636,464,1.16,503,1.625,508,0.923,552,1.254,569,1.254,599,1.757,620,1.254,624,1.557,628,2.032,670,1.875,674,1.757,724,1.074,737,1.286,739,0.306,752,1.074,769,1.16,770,1.254,771,1.395,772,2.197,773,2.38,774,1.254,775,2.552,776,1.903,777,1.16,778,1.359,779,1.359,780,1.875,781,0.793,782,0.996,783,0.996,784,0.996,785,1.625,786,1.61,787,1.903,788,1.16,789,1.359,790,1.293,791,1.16,792,1.617,793,1.16,794,1.757,795,1.254,796,1.505,797,1.757,798,1.903,799,2.197,800,1.359,801,1.359,802,1.359,803,1.359,804,1.359,805,1.359,806,1.359,807,1.359,808,1.359,809,1.254,810,1.16,811,1.903,812,2.38,813,1.359,814,2.197,815,1.903,816,1.359,817,1.254,818,1.254,819,1.903,820,1.359,821,1.359,822,1.254,823,1.903,824,1.254,825,1.16,826,1.359,827,1.359,828,1.359,829,1.359,830,0.996,831,1.359,832,1.903,833,1.359,834,1.359,835,1.359,836,1.359,842,2.194,855,2.194,1037,4.19,1038,4.19,1039,4.19,1040,4.19,1041,4.19,1042,2.992,1043,2.992,1044,2.992,1045,2.992,1046,2.992,1047,2.992]],["title/components/SeccionComponent.html",[0,0.585,196,1.185]],["body/components/SeccionComponent.html",[0,0.959,1,1.339,2,1.746,3,0.405,4,0.359,5,1.563,6,1.563,7,1.563,8,0.359,10,1.563,14,2.746,15,2.54,17,1.563,22,2.039,24,2.209,26,0.316,27,0.589,41,2.702,45,0.03,55,1.619,61,2.307,62,2.307,69,0.551,71,0.719,80,1.339,95,2.039,109,0.405,110,0.781,131,1.194,133,1.563,137,1.445,140,0.781,175,1.563,176,2.039,177,1.563,178,2.405,179,1.563,180,1.563,181,1.339,182,1.563,183,1.339,184,2.039,185,1.339,186,2.039,187,1.445,188,2.039,189,1.339,190,0.405,191,1.563,192,1.445,193,1.445,194,1.563,195,1.445,196,2.06,197,1.563,198,1.339,199,0.605,200,1.563,201,1.339,202,1.563,203,1.445,204,1.563,205,0.021,206,0.021,323,2.439,409,2.734,1048,3.129,1049,4.863,1050,4.863,1051,4.863,1052,5.412,1053,5.412,1054,5.412,1055,5.412,1056,4.543,1057,5.736,1058,3.728,1059,4.863,1060,3.728,1061,4.863,1062,3.728,1063,3.728,1064,5.412,1065,4.082,1066,4.814,1067,4.863,1068,4.082,1069,4.863,1070,4.814,1071,4.082,1072,4.863,1073,4.863,1074,4.863,1075,3.728]],["title/components/TextoErrorComponent.html",[0,0.585,198,1.185]],["body/components/TextoErrorComponent.html",[0,1.021,1,1.53,2,1.902,3,0.462,4,0.411,5,1.787,6,1.787,7,1.787,8,0.411,10,1.787,14,2.793,15,2.583,17,1.787,22,2.22,24,2.405,45,0.029,55,1.763,69,0.63,71,0.822,80,1.53,95,2.22,109,0.462,110,0.893,133,1.787,137,1.652,140,0.893,175,1.787,176,2.22,177,1.787,178,2.526,179,1.787,180,1.787,181,1.53,182,1.787,183,1.53,184,2.22,185,1.53,186,2.22,187,1.652,188,2.22,189,1.53,190,0.462,191,1.787,192,1.652,193,1.652,194,1.787,195,1.652,196,1.53,197,1.787,198,2.164,199,1.039,200,1.787,201,1.53,202,1.787,203,1.652,204,1.787,205,0.023,206,0.023,352,2.52,455,1.515,1076,3.577,1077,3.577,1078,5.296,1079,5.296]],["title/components/VisualizarResultadosComponent.html",[0,0.585,201,1.185]],["body/components/VisualizarResultadosComponent.html",[0,0.404,1,0.349,2,0.613,3,0.248,4,0.094,5,0.715,6,0.407,7,0.407,8,0.094,10,0.407,11,1.252,13,2.034,14,1.985,15,1.836,17,0.715,20,1.915,21,1.915,22,0.715,26,0.082,27,0.207,29,1.416,30,2.012,32,0.842,41,2.452,44,1.79,45,0.03,46,1.04,52,0.404,54,1.126,55,1.04,56,0.428,57,0.704,58,1.915,59,1.622,61,1.836,62,1.836,64,1.252,66,1.386,69,0.682,70,0.278,71,0.188,73,0.524,74,0.816,76,0.575,77,0.713,80,0.349,83,0.158,85,2.034,87,0.419,89,0.713,90,0.984,93,0.613,94,1.017,95,0.715,96,0.803,101,1.432,104,0.636,106,0.258,109,0.105,110,0.204,111,0.713,125,0.964,127,0.239,131,1.017,133,0.407,137,0.377,138,0.698,140,1.276,144,2.927,150,0.704,153,0.524,175,0.956,176,0.715,177,0.407,178,1.15,179,0.407,180,0.407,181,0.349,182,0.407,183,0.349,184,0.715,185,0.349,186,0.715,187,1.734,188,0.715,189,0.349,190,0.613,191,0.407,192,0.377,193,0.377,194,0.407,195,0.377,196,0.349,197,0.407,198,0.349,199,0.277,200,0.407,201,0.985,202,1.652,203,0.377,204,0.407,205,0.008,206,0.008,209,1.229,213,0.524,222,1.755,238,1.432,243,0.527,271,1.622,289,0.605,301,1.015,310,1.853,312,0.387,319,1.432,324,0.713,326,1.117,350,0.636,351,0.636,354,0.816,362,0.816,371,2.291,372,1.252,373,0.816,377,1.036,393,0.912,402,1.252,405,1.622,420,3.999,438,2.044,439,2.044,441,2.044,443,1.915,455,1.603,456,1.432,464,0.662,475,1.432,489,0.816,496,0.636,505,2.887,508,1.216,543,3.307,578,0.816,579,1.493,609,0.816,623,1.698,624,0.258,628,0.885,654,2.303,685,0.816,693,0.816,699,0.816,712,0.636,724,0.613,725,1.673,736,0.713,737,0.845,738,1.846,758,1.432,762,1.117,770,0.715,781,0.605,786,0.324,794,0.956,796,0.985,809,0.715,810,0.662,817,1.15,818,1.555,822,0.407,824,0.715,847,0.816,855,1.673,872,0.816,903,0.441,974,3.629,981,1.009,983,1.117,985,2.303,989,0.816,1013,2.303,1033,1.252,1056,0.816,1065,1.915,1066,3.476,1068,3.113,1070,4.703,1071,0.816,1080,0.972,1081,4.579,1082,0.816,1083,1.707,1084,2.282,1085,1.707,1086,2.282,1087,2.282,1088,1.707,1089,2.282,1090,1.707,1091,3.123,1092,2.282,1093,2.282,1094,2.282,1095,2.744,1096,2.744,1097,2.744,1098,1.707,1099,2.744,1100,1.707,1101,1.707,1102,3.123,1103,0.972,1104,0.972,1105,0.972,1106,1.707,1107,0.972,1108,3.441,1109,1.707,1110,0.972,1111,2.282,1112,1.707,1113,1.707,1114,1.707,1115,1.707,1116,5.508,1117,2.744,1118,3.123,1119,0.972,1120,3.441,1121,0.972,1122,0.972,1123,0.972,1124,0.972,1125,0.972,1126,0.972,1127,0.972,1128,0.972,1129,0.972,1130,0.972,1131,1.707,1132,0.972,1133,0.972,1134,1.707,1135,0.972,1136,0.972,1137,0.972,1138,0.972,1139,0.972,1140,0.972,1141,1.707,1142,0.972,1143,0.972,1144,0.713,1145,0.972,1146,0.972,1147,0.972,1148,0.972,1149,2.744,1150,0.972,1151,1.707,1152,0.972,1153,0.972,1154,0.972,1155,2.282,1156,2.744,1157,0.972,1158,2.282,1159,2.282,1160,1.707,1161,0.972,1162,0.972,1163,1.707,1164,0.972,1165,0.972,1166,0.972,1167,3.441,1168,0.972,1169,1.707,1170,0.972,1171,0.972,1172,1.707,1173,0.972,1174,2.744,1175,0.972,1176,1.707,1177,0.972,1178,2.744,1179,2.282,1180,1.707,1181,0.972,1182,4.473,1183,3.441,1184,0.972,1185,0.972,1186,0.972,1187,0.972,1188,0.972,1189,0.972,1190,0.972,1191,0.972,1192,0.972,1193,5.125,1194,0.972,1195,0.972,1196,2.282,1197,0.972,1198,0.972,1199,1.707,1200,0.972,1201,0.972,1202,0.972,1203,0.972,1204,0.972,1205,0.972,1206,0.972,1207,0.972,1208,0.972,1209,0.972,1210,0.972,1211,0.972,1212,0.972,1213,0.972,1214,0.972,1215,0.972,1216,0.972,1217,1.707,1218,1.707,1219,1.707,1220,1.707,1221,1.707,1222,1.707,1223,1.707,1224,1.707,1225,0.972,1226,4.318,1227,4.142,1228,0.972,1229,5.041,1230,3.71,1231,3.71,1232,4.949,1233,2.282,1234,3.441,1235,4.949,1236,2.744,1237,2.744,1238,4.473,1239,3.441,1240,4.612,1241,3.123,1242,3.71,1243,1.707,1244,4.142,1245,0.972,1246,5.339,1247,0.972,1248,5.125,1249,1.707,1250,6.012,1251,5.604,1252,3.941,1253,4.612,1254,2.744,1255,3.941,1256,2.282,1257,4.949,1258,4.473,1259,3.123,1260,1.707,1261,3.941,1262,3.941,1263,1.707,1264,1.707,1265,2.744,1266,2.282,1267,0.972,1268,2.744,1269,0.972,1270,2.282,1271,3.71,1272,2.282,1273,3.441,1274,2.744,1275,1.707,1276,1.707,1277,0.972,1278,1.707,1279,1.707,1280,2.282,1281,2.744,1282,0.972,1283,4.612,1284,1.707,1285,3.123,1286,1.707,1287,1.707,1288,0.972,1289,0.972,1290,0.972,1291,4.318,1292,2.744,1293,4.736,1294,0.972,1295,4.068,1296,4.847,1297,3.71,1298,3.123,1299,2.744,1300,2.744,1301,2.744,1302,2.744,1303,0.972,1304,3.123,1305,2.282,1306,2.282,1307,2.282,1308,2.282,1309,0.972,1310,2.282,1311,1.707,1312,1.707,1313,2.744,1314,0.972,1315,0.972,1316,3.123,1317,0.972,1318,0.972,1319,2.282,1320,1.707,1321,0.972,1322,2.282,1323,1.707,1324,2.282,1325,1.707,1326,2.282,1327,0.972,1328,0.972,1329,0.972,1330,0.972,1331,2.744,1332,0.972,1333,0.972,1334,0.972,1335,0.972,1336,0.972,1337,0.972,1338,0.972,1339,1.707,1340,0.972,1341,2.282,1342,0.972,1343,0.972,1344,0.972,1345,1.707,1346,2.282,1347,2.282,1348,5.647,1349,1.707,1350,1.707,1351,1.707,1352,1.707,1353,1.707,1354,1.707,1355,0.972,1356,1.707,1357,1.707,1358,1.707,1359,1.707,1360,1.707,1361,0.972,1362,0.972,1363,0.972,1364,0.972,1365,0.972,1366,0.972,1367,1.707,1368,0.972,1369,1.432,1370,0.972,1371,0.972,1372,0.972,1373,0.972,1374,0.972,1375,0.972]],["title/coverage.html",[1376,3.764]],["body/coverage.html",[0,1.141,1,1.293,8,0.347,9,3.023,45,0.03,56,0.577,80,1.293,138,0.638,181,1.293,183,1.293,185,1.293,187,1.843,189,1.293,190,0.577,192,1.396,195,1.396,196,1.293,198,1.293,201,1.293,205,0.021,206,0.021,207,3.023,257,3.023,258,3.023,259,3.99,271,2.129,296,1.778,346,3.111,349,2.357,352,2.129,355,2.129,386,2.129,420,4.452,739,0.342,741,3.482,742,3.023,745,2.357,748,2.129,764,3.023,765,2.357,769,2.454,771,1.582,780,1.396,785,1.396,788,1.396,790,1.467,792,1.467,793,1.396,796,1.293,837,3.023,843,3.023,880,3.487,881,3.487,932,2.641,968,2.641,1018,3.023,1022,2.357,1023,3.023,1027,3.023,1031,3.487,1048,3.023,1076,3.023,1077,3.023,1081,3.023,1082,3.023,1376,3.023,1377,3.602,1378,3.602,1379,3.602,1380,3.602,1381,3.023,1382,5.322,1383,3.023,1384,6.39,1385,3.602,1386,3.602,1387,3.602,1388,4.754,1389,3.602,1390,3.602,1391,3.602,1392,3.602,1393,4.754,1394,2.641,1395,2.641,1396,6.044,1397,3.023,1398,4.754,1399,5.322,1400,4.754,1401,4.754,1402,4.754,1403,3.903,1404,3.903,1405,4.754,1406,3.023,1407,3.602,1408,3.602]],["title/dependencies.html",[1409,2.322,1410,3.327]],["body/dependencies.html",[45,0.03,71,0.927,73,2.587,77,3.522,205,0.025,206,0.025,343,3.143,777,1.862,973,3.522,1410,4.031,1411,4.803,1412,4.803,1413,6.564,1414,4.803,1415,5.694,1416,4.779,1417,4.803,1418,4.803,1419,5.694,1420,4.803,1421,4.803,1422,4.803,1423,4.803,1424,4.803,1425,4.803,1426,4.803,1427,4.803,1428,4.803,1429,4.803,1430,4.803,1431,4.803]],["title/miscellaneous/enumerations.html",[1432,1.257,1433,3.327]],["body/miscellaneous/enumerations.html",[26,0.418,45,0.029,62,2.534,140,1.211,205,0.025,206,0.025,310,3.114,623,2.853,781,1.533,782,1.924,783,1.924,784,1.924,853,4.852,1394,3.614,1395,4.24,1432,2.238,1433,4.136,1434,4.928,1435,5.781,1436,4.136,1437,4.928]],["title/miscellaneous/functions.html",[1432,1.257,1438,3.327]],["body/miscellaneous/functions.html",[26,0.422,44,2.64,45,0.029,46,1.935,54,2.869,55,1.935,56,0.54,57,1.794,205,0.026,206,0.026,310,3.131,312,1.129,932,4.263,949,4.175,1036,3.648,1403,3.648,1404,4.517,1406,4.879,1432,2.259,1438,4.175,1439,4.879,1440,4.974]],["title/index.html",[26,0.234,1441,2.767,1442,2.767]],["body/index.html",[0,1.01,2,1.494,4,0.401,45,0.023,61,2.023,203,1.613,205,0.023,206,0.023,386,2.46,411,3.493,540,3.493,1295,5.271,1369,3.493,1416,3.493,1443,4.162,1444,5.7,1445,4.162,1446,5.218,1447,5.015,1448,6.155,1449,3.493,1450,4.162,1451,5.218,1452,5.7,1453,6.155,1454,6.28,1455,4.162,1456,5.218,1457,4.162,1458,4.162,1459,4.162,1460,5.218,1461,4.162,1462,4.162,1463,4.162,1464,4.162,1465,4.162,1466,5.218,1467,5.218,1468,4.162,1469,4.162,1470,4.162,1471,5.7,1472,4.162,1473,4.162,1474,4.162,1475,4.162,1476,4.162,1477,4.162,1478,4.162,1479,5.7,1480,4.162,1481,4.162,1482,4.162,1483,4.162,1484,4.162,1485,4.162,1486,4.162,1487,4.162,1488,4.162,1489,4.162,1490,5.218,1491,5.7,1492,4.162,1493,4.162,1494,4.162,1495,4.162,1496,4.162,1497,4.162,1498,5.7,1499,4.162,1500,6.28,1501,4.162,1502,5.218,1503,4.162,1504,4.162,1505,4.162,1506,4.162,1507,4.162,1508,4.162,1509,4.162,1510,4.162,1511,4.162,1512,4.162,1513,4.162,1514,4.162,1515,4.162,1516,4.162,1517,4.162,1518,3.052,1519,4.162,1520,4.162]],["title/modules.html",[1521,3.764]],["body/modules.html",[45,0.027,205,0.027,206,0.027,1521,4.451]],["title/overview.html",[1518,3.289]],["body/overview.html",[2,1.882,45,0.026,205,0.026,206,0.026,712,3.429,740,1.389,842,3.843,1518,3.843,1522,5.24,1523,5.24]],["title/properties.html",[27,0.48,1409,2.322]],["body/properties.html",[27,0.638,45,0.028,205,0.026,206,0.026,1449,4.424,1524,5.271]],["title/miscellaneous/typealiases.html",[1432,1.257,1525,3.964]],["body/miscellaneous/typealiases.html",[26,0.431,45,0.029,56,0.552,205,0.026,206,0.026,741,3.33,744,3.732,765,3.854,769,1.973,780,2.284,781,1.349,782,1.694,783,1.694,784,1.694,1397,4.944,1432,2.311,1526,5.089,1527,5.089,1528,5.089]],["title/miscellaneous/variables.html",[1144,2.907,1432,1.257]],["body/miscellaneous/variables.html",[11,2.727,26,0.315,45,0.03,56,0.622,61,2.096,62,2.096,66,1.546,83,0.787,90,0.986,93,1.743,94,1.192,96,0.603,106,0.986,116,3.12,127,1.192,131,1.327,150,1.147,190,0.527,193,2.222,205,0.021,206,0.021,216,3.12,217,2.727,312,1.384,321,3.537,349,3.176,377,2.205,380,4.074,398,3.176,405,3.195,455,1.547,467,2.87,508,1.498,522,2.433,524,3.12,737,1.407,738,3.388,781,0.986,825,1.441,830,1.237,841,2.433,864,3.12,903,1.689,952,3.12,968,3.56,973,2.727,974,3.964,981,2.198,995,3.12,996,3.12,997,3.12,1000,2.433,1001,3.12,1002,3.12,1144,2.727,1381,3.12,1383,4.074,1394,2.727,1395,3.56,1403,2.727,1404,3.56,1432,1.689,1436,3.12,1439,3.12,1447,4.074,1529,3.718,1530,3.718,1531,3.718,1532,3.718,1533,3.718,1534,3.718,1535,3.718,1536,4.854,1537,3.718,1538,3.718,1539,3.718,1540,3.718,1541,3.718,1542,3.718,1543,3.718,1544,3.718,1545,3.718,1546,3.718,1547,4.854,1548,3.718,1549,3.718,1550,3.718,1551,3.718,1552,3.718,1553,3.718,1554,3.718,1555,3.718,1556,3.718,1557,3.718,1558,3.718,1559,3.718,1560,3.718,1561,3.718,1562,3.718,1563,3.718,1564,3.718,1565,3.718,1566,3.718,1567,3.718,1568,3.718,1569,3.718,1570,3.718]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":420,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1524,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1266,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15",{"_index":1309,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15.0",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1314,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.2rem",{"_index":1373,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3",{"_index":1352,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3rem",{"_index":1315,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3s",{"_index":1301,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.4",{"_index":1354,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.5rem",{"_index":1285,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6",{"_index":1363,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6rem",{"_index":1374,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.7rem",{"_index":1372,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.8rem",{"_index":1316,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.95",{"_index":1256,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.9rem",{"_index":1333,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0/1",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["00f2fe",{"_index":1187,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1",{"_index":324,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["1).padstart(2",{"_index":419,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["1.1rem",{"_index":1273,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.2rem",{"_index":1313,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.3rem",{"_index":1320,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.4",{"_index":1321,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5",{"_index":1328,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5rem",{"_index":1252,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.6",{"_index":1275,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.8rem",{"_index":1270,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["100",{"_index":1178,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["100vh",{"_index":1228,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["10px",{"_index":1263,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["11",{"_index":1522,"title":{},"body":{"overview.html":{}}}],["1200px",{"_index":1277,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["126",{"_index":1350,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["12px",{"_index":1307,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["14",{"_index":1523,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":671,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["15px",{"_index":1259,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["167",{"_index":1359,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["19.0.0",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["19.1.2",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["19.2.0",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["19.2.11",{"_index":1450,"title":{},"body":{"index.html":{}}}],["19.2.16",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["1rem",{"_index":1246,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2",{"_index":712,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1282,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["20",{"_index":1194,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2000",{"_index":565,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["2025",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["20c997",{"_index":1357,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["20px",{"_index":1317,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["234",{"_index":1351,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["250px",{"_index":1375,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["255",{"_index":1255,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["25px",{"_index":1298,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["28a745",{"_index":1356,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2px",{"_index":1306,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2rem",{"_index":1232,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3",{"_index":714,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["3000",{"_index":465,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["300px",{"_index":1370,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["30px",{"_index":1264,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["333",{"_index":1281,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["35px",{"_index":1308,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["38f9d7",{"_index":1189,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3rem",{"_index":1260,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4.4.9",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":687,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["4000",{"_index":449,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["400px",{"_index":1342,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["404",{"_index":700,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["43e97b",{"_index":1188,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["480px",{"_index":1371,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4facfe",{"_index":1186,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4px",{"_index":1326,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["500",{"_index":691,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["5000",{"_index":638,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["500px",{"_index":1267,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["555",{"_index":1290,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["600",{"_index":1291,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["60vh",{"_index":1243,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["666",{"_index":1272,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["667eea",{"_index":1182,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["69",{"_index":1360,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["7.0.0",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1284,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["764ba2",{"_index":1183,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["768px",{"_index":1368,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["8000",{"_index":704,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["8px",{"_index":1297,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["999",{"_index":1343,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["abierta",{"_index":781,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["abiertas",{"_index":1033,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["abre",{"_index":428,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["abrir",{"_index":450,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abriragregaropcion",{"_index":928,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["abrirdialog",{"_index":276,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abrirdialogeditar",{"_index":277,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abstractcontrol",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceder",{"_index":836,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["accept",{"_index":520,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["acceptbuttonprops",{"_index":519,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accessors",{"_index":288,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accion",{"_index":1346,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["acciones",{"_index":1345,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["activar",{"_index":582,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["activatedroute",{"_index":1138,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["actual",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["actualiz",{"_index":477,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualiza",{"_index":468,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizada",{"_index":476,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizar",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["actualizarestadoencuesta",{"_index":844,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id",{"_index":846,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id:number",{"_index":873,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["additional",{"_index":1510,"title":{},"body":{"index.html":{}}}],["adicional",{"_index":569,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["agreg",{"_index":481,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agrega",{"_index":445,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregada",{"_index":480,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregamos",{"_index":604,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregar",{"_index":429,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["agregar/editar",{"_index":366,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregaropcion",{"_index":886,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregaropcion(opcion",{"_index":940,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta",{"_index":278,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta(pregunta",{"_index":295,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ahora",{"_index":618,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["al",{"_index":393,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["alias",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1526,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1238,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["allowed",{"_index":1365,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["almacena",{"_index":367,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["altamirano",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1447,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":774,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["angular/compiler",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":343,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["animaciones",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anteriores",{"_index":643,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["antes",{"_index":498,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["análisis",{"_index":234,"title":{},"body":{"components/BannerComponent.html":{}}}],["anónima",{"_index":218,"title":{},"body":{"components/BannerComponent.html":{}}}],["anónimo",{"_index":232,"title":{},"body":{"components/BannerComponent.html":{}}}],["api/v1/encuestas",{"_index":871,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["aplica",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["app.component.css",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1460,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":1218,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["archivo",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["array",{"_index":1036,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/functions.html":{}}}],["artifacts",{"_index":1483,"title":{},"body":{"index.html":{}}}],["asegurar",{"_index":705,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["asigna",{"_index":1165,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["asíncrona",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aura",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":1278,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["automatically",{"_index":1461,"title":{},"body":{"index.html":{}}}],["available",{"_index":1474,"title":{},"body":{"index.html":{}}}],["aún",{"_index":1013,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["backend",{"_index":567,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{}}}],["background",{"_index":1229,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["backgroundcolor",{"_index":1181,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["banner",{"_index":208,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["banner.component.css",{"_index":212,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.html",{"_index":211,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":181,"title":{"components/BannerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["barra",{"_index":1334,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["basada",{"_index":750,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["between",{"_index":1312,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["blob",{"_index":822,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["body",{"_index":1310,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1257,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bordercolor",{"_index":1191,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["borderwidth",{"_index":1190,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bottom",{"_index":1193,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["botón",{"_index":373,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["box",{"_index":1261,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["browser",{"_index":1416,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1479,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1480,"title":{},"body":{"index.html":{}}}],["button",{"_index":1347,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:disabled",{"_index":1361,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:hover:not(:disabled",{"_index":1353,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["buttonmodule",{"_index":209,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["básicos",{"_index":986,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cada",{"_index":910,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["calcular",{"_index":1175,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambiar",{"_index":1216,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambiarestadoencuesta",{"_index":1095,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambios",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":529,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["campos",{"_index":537,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelada",{"_index":563,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelar",{"_index":516,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cantidad",{"_index":1332,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["capitalize",{"_index":1318,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card",{"_index":1253,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card:hover",{"_index":1303,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cardmodule",{"_index":1086,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["carga",{"_index":372,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargadas",{"_index":1014,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargados",{"_index":1162,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargando",{"_index":1091,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargar",{"_index":985,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargarpreguntaparaeditar",{"_index":929,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarpreguntaparaeditar(pregunta",{"_index":942,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarresultados",{"_index":1096,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["caso",{"_index":681,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["catcherror",{"_index":778,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["catcherror(this.handleerror",{"_index":802,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["center",{"_index":1240,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cerrar",{"_index":458,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cerrardialogseleccion",{"_index":279,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["chart",{"_index":1341,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["chart.js",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["chartmodule",{"_index":1141,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["choose",{"_index":1506,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":466,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ciertas",{"_index":767,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{}}}],["circle",{"_index":513,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["class",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cli",{"_index":1448,"title":{},"body":{"index.html":{}}}],["clic",{"_index":716,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["clip",{"_index":1287,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["closable",{"_index":507,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["closeonescape",{"_index":509,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["code",{"_index":1466,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":670,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["codigoqr",{"_index":592,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["codigorespuesta",{"_index":626,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["codigoresultados",{"_index":628,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["codigotipoenum",{"_index":853,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":1248,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["column",{"_index":1237,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["come",{"_index":1504,"title":{},"body":{"index.html":{}}}],["comienza",{"_index":253,"title":{},"body":{"components/BannerComponent.html":{}}}],["command",{"_index":1498,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["como",{"_index":605,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionDTO.html":{}}}],["comparte",{"_index":250,"title":{},"body":{"components/BannerComponent.html":{}}}],["compile",{"_index":1481,"title":{},"body":{"index.html":{}}}],["completa",{"_index":586,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["complete",{"_index":540,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["componente",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"overview.html":{}}}],["components/navbar/navbar.component",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["computed",{"_index":1064,"title":{},"body":{"components/SeccionComponent.html":{}}}],["con",{"_index":236,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["conectar",{"_index":696,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conectividad",{"_index":550,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conexión",{"_index":551,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["configurar",{"_index":460,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmación",{"_index":474,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmar",{"_index":506,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmarcrearencuesta",{"_index":280,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminaropcion",{"_index":930,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminaropcion(index",{"_index":945,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminarpregunta",{"_index":281,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminarpregunta(index",{"_index":300,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmationservice",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmdialogmodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":580,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.error('detalles",{"_index":833,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["console.error('error",{"_index":824,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["console.log",{"_index":571,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.log('código",{"_index":1151,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('iniciando",{"_index":1153,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('resultados",{"_index":1161,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('visualizarresultadoscomponent",{"_index":1147,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["const",{"_index":405,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["construir",{"_index":653,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["container",{"_index":1226,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contenedor",{"_index":1225,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contenido",{"_index":1276,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["content",{"_index":1242,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contiene",{"_index":841,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["continuar",{"_index":541,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["control",{"_index":398,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["controla",{"_index":363,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controles",{"_index":383,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controlopciones",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlopciones?.value",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo?.value",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copy",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["correctamente",{"_index":489,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["corresponde",{"_index":370,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["corto",{"_index":759,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["coverage",{"_index":1376,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":214,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["crea",{"_index":249,"title":{},"body":{"components/BannerComponent.html":{}}}],["creacion",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["creacionencuestacomponent",{"_index":183,"title":{"components/CreacionEncuestaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["creación",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creación/edición",{"_index":971,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["creada",{"_index":619,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creado",{"_index":649,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creando",{"_index":254,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creandoencuesta",{"_index":268,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["crear",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["crearencuesta",{"_index":282,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta(dto",{"_index":849,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["crearla",{"_index":757,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["create",{"_index":746,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["createencuestadto",{"_index":355,"title":{"interfaces/CreateEncuestaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["createopciondto",{"_index":765,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["createpreguntadto",{"_index":745,"title":{"interfaces/CreatePreguntaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["css",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["csv",{"_index":818,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cuadro",{"_index":497,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cuando",{"_index":977,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cuerpo",{"_index":879,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["cuestión",{"_index":251,"title":{},"body":{"components/BannerComponent.html":{}}}],["currentroute",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":1364,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["código",{"_index":762,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["códigos",{"_index":637,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["danger",{"_index":559,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["data",{"_index":794,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["datasets",{"_index":1109,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["date",{"_index":407,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["date(formdata.fechavencimiento",{"_index":595,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["date(this.fechavencimiento.value",{"_index":617,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datetime",{"_index":410,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datos",{"_index":243,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["day",{"_index":421,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["day}t${hours}:${minutes",{"_index":427,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ddthh:mm",{"_index":414,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["de",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":729,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["debemos",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["debería",{"_index":608,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["decisiones",{"_index":230,"title":{},"body":{"components/BannerComponent.html":{}}}],["decorador",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["deep",{"_index":1296,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["definidas",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["delay",{"_index":662,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dentro",{"_index":1026,"title":{},"body":{"interfaces/OpcionDTO.html":{}}}],["dependencies",{"_index":1410,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["desarrollado",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["descargado",{"_index":1213,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["descargar",{"_index":1199,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["descripcion",{"_index":770,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["desea",{"_index":504,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["deseas",{"_index":735,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["deshabilitada",{"_index":1215,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["design",{"_index":1366,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["detail",{"_index":443,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["detailed",{"_index":1515,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":235,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["detalles",{"_index":673,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["detección",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determina",{"_index":999,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["development",{"_index":1451,"title":{},"body":{"index.html":{}}}],["devolvi",{"_index":636,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["devuelve",{"_index":490,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog",{"_index":882,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["dialog.component",{"_index":347,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.css",{"_index":885,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.html",{"_index":884,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts",{"_index":881,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:103",{"_index":954,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":943,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":951,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:137",{"_index":962,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:142",{"_index":964,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:147",{"_index":966,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":939,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:179",{"_index":944,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:184",{"_index":950,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:192",{"_index":938,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:197",{"_index":941,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:206",{"_index":948,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":946,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":892,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":893,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":896,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":890,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":956,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":937,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":961,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":898,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":955,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":894,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":959,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:64",{"_index":957,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":936,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":895,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:97",{"_index":953,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog/gestion",{"_index":346,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialoggestionopcionvisible",{"_index":924,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialoggestionpreguntavisible",{"_index":269,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dialogmodule",{"_index":263,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialogseleccionpreguntavisible",{"_index":270,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dinámica",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":1236,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["directive",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["directory",{"_index":1485,"title":{},"body":{"index.html":{}}}],["diseña",{"_index":219,"title":{},"body":{"components/BannerComponent.html":{}}}],["display",{"_index":1234,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["disponible",{"_index":732,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{}}}],["disponibles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["dist",{"_index":1484,"title":{},"body":{"index.html":{}}}],["diálogo",{"_index":365,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["document.body.appendchild(link",{"_index":1206,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.body.removechild(link",{"_index":1208,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.createelement('a",{"_index":1202,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["documentation",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["dropdownmodule",{"_index":923,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dto",{"_index":851,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["dynamic",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1166,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["e2e",{"_index":1501,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1503,"title":{},"body":{"index.html":{}}}],["e74c3c",{"_index":1269,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["e9ecef",{"_index":1335,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ease",{"_index":1302,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["edición",{"_index":369,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["edita",{"_index":452,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editando",{"_index":379,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editar",{"_index":381,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["editarla",{"_index":447,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta",{"_index":283,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta(index",{"_index":304,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["efecto",{"_index":908,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["effect",{"_index":899,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eficiente",{"_index":224,"title":{},"body":{"components/BannerComponent.html":{}}}],["ejecutado",{"_index":1148,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ejecutándose",{"_index":698,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["el",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["elimin",{"_index":487,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["elimina",{"_index":483,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminación",{"_index":556,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminada",{"_index":486,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminar",{"_index":553,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion",{"_index":931,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion(index",{"_index":947,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminarpregunta",{"_index":284,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminarpregunta(index",{"_index":306,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["emilia",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["emite",{"_index":917,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["en",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":1279,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["encontrado",{"_index":702,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encontrar",{"_index":457,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta",{"_index":138,"title":{"interfaces/Encuesta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["encuesta'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["encuesta.codigoqr",{"_index":613,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.css",{"_index":267,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.html",{"_index":266,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts",{"_index":259,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta.component.ts:100",{"_index":308,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:113",{"_index":293,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:123",{"_index":294,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:139",{"_index":305,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:171",{"_index":298,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:176",{"_index":297,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:211",{"_index":307,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:225",{"_index":311,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:232",{"_index":299,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:261",{"_index":313,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:300",{"_index":302,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:334",{"_index":303,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:48",{"_index":322,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:51",{"_index":327,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:52",{"_index":331,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:53",{"_index":315,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:54",{"_index":320,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:57",{"_index":318,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:60",{"_index":330,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:63",{"_index":317,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:66",{"_index":328,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:67",{"_index":325,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:70",{"_index":292,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:85",{"_index":333,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:90",{"_index":335,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:95",{"_index":337,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.dto",{"_index":357,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{}}}],["encuesta.dto.ts",{"_index":742,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"coverage.html":{}}}],["encuesta.enlacecorto",{"_index":612,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.fechavencimiento",{"_index":600,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.nombre",{"_index":647,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.preguntas.length",{"_index":650,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta/creacion",{"_index":258,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta=${res.id}&codigo",{"_index":658,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuestadto",{"_index":748,"title":{"interfaces/EncuestaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["encuestaresponse",{"_index":793,"title":{"interfaces/EncuestaResponse.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["encuestas",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["encuestasservice",{"_index":271,"title":{"injectables/EncuestasService.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["end",{"_index":1500,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":701,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["enlace",{"_index":758,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlacecorto",{"_index":591,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["enlaces",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["enlaces'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlaces.component.ts",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["enlaces?id",{"_index":657,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["enum",{"_index":1145,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["enumerations",{"_index":1433,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/codigo",{"_index":857,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["enums/tipos",{"_index":350,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enunciado",{"_index":1028,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["enviamos",{"_index":876,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["enviar",{"_index":570,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["envía",{"_index":566,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err",{"_index":672,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error",{"_index":679,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error.message",{"_index":690,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.message",{"_index":678,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.status",{"_index":675,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.statustext",{"_index":677,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.url",{"_index":680,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["error",{"_index":455,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["error.component",{"_index":353,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["error.component.css",{"_index":1079,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.html",{"_index":1078,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.ts",{"_index":1077,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["error.error",{"_index":832,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error/texto",{"_index":352,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["errordetail",{"_index":682,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores",{"_index":522,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["errores.join",{"_index":539,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.length",{"_index":536,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('debe",{"_index":535,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('el",{"_index":528,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errors",{"_index":575,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errorsummary",{"_index":686,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["es",{"_index":830,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/variables.html":{}}}],["esmultiplechoice",{"_index":932,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(controltipo.value",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esmultiplechoice(tipo",{"_index":949,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(tipo.value",{"_index":1010,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["especificas",{"_index":731,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["específica",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["específico",{"_index":1355,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["específicos",{"_index":523,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["espera",{"_index":584,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["esperada",{"_index":1029,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["est",{"_index":378,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["esta",{"_index":505,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estadistica",{"_index":1330,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estadisticas",{"_index":1329,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estado",{"_index":371,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estadoencuesta",{"_index":1092,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estadísticas",{"_index":238,"title":{},"body":{"components/BannerComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estamos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["estar",{"_index":531,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["este",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["estefanía",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["estilos",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["estos",{"_index":603,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["estructura",{"_index":622,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["están",{"_index":244,"title":{},"body":{"components/BannerComponent.html":{}}}],["etc",{"_index":1030,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["event",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evento",{"_index":905,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["example",{"_index":1454,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":557,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["execute",{"_index":1492,"title":{},"body":{"index.html":{}}}],["existen",{"_index":989,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["existente",{"_index":469,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["existentes",{"_index":436,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["exitosa",{"_index":1211,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exitosamente",{"_index":620,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["export",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportación",{"_index":1210,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportandocsv",{"_index":1093,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportar",{"_index":817,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportarcsv",{"_index":1097,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportarresultadoscsv",{"_index":1037,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["exportarresultadoscsv(idencuesta",{"_index":819,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["extends",{"_index":743,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["f093fb",{"_index":1184,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f5576c",{"_index":1185,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f8f9fa",{"_index":1325,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["false",{"_index":543,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["falso",{"_index":997,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":544,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fecha",{"_index":389,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["fechaseleccionada",{"_index":616,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fechavencimiento",{"_index":291,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["fff",{"_index":1192,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["files",{"_index":1465,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1288,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["filter",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["finalizar",{"_index":374,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["flex",{"_index":1235,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["floatlabel",{"_index":261,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["floatlabelmodule",{"_index":883,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["following",{"_index":1497,"title":{},"body":{"index.html":{}}}],["font",{"_index":1250,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["footer",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":272,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["form.haserror(\"opcionesrequeridas",{"_index":1016,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["form.touched",{"_index":728,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["forma",{"_index":216,"title":{},"body":{"components/BannerComponent.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":340,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formatear",{"_index":408,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol",{"_index":341,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formcontrol(null",{"_index":388,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol(pregunta",{"_index":479,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata",{"_index":589,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.fechavencimiento",{"_index":594,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.nombre",{"_index":593,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.preguntas",{"_index":597,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formgroup",{"_index":321,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":262,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formulario",{"_index":359,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formularon",{"_index":442,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["framework",{"_index":1505,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1443,"title":{},"body":{"index.html":{}}}],["fue",{"_index":564,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["function",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1438,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":1292,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["generado",{"_index":761,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["generar",{"_index":609,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["generate",{"_index":1471,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1445,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["gestionar",{"_index":902,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gestionopciondialogcomponent",{"_index":185,"title":{"components/GestionOpcionDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["gestionpreguntadialogcomponent",{"_index":189,"title":{"components/GestionPreguntaDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["getchartdata",{"_index":1098,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartdata(pregunta",{"_index":1106,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartoptions",{"_index":1099,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getfechaminima",{"_index":285,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getfechavencimiento",{"_index":336,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getnombre",{"_index":334,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getopciones",{"_index":965,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["getporcentajeopcion",{"_index":1100,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getporcentajeopcion(opcion",{"_index":1117,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getpreguntas",{"_index":332,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getter",{"_index":396,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gettexto",{"_index":897,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["getting",{"_index":1441,"title":{"index.html":{}},"body":{}}],["gettipo",{"_index":963,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettipopreguntapresentacion",{"_index":286,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(pregunta.tipo",{"_index":723,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(tipo",{"_index":309,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipospreguntapresentacion",{"_index":933,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettotalrespuestasopcion",{"_index":1101,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gettotalrespuestasopcion(pregunta",{"_index":1120,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gradient(135deg",{"_index":1231,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["grafico",{"_index":1339,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["group",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('opciones",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('tipo",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gráfico",{"_index":1179,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gráficos",{"_index":237,"title":{},"body":{"components/BannerComponent.html":{}}}],["h1",{"_index":1280,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h2",{"_index":1268,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h3",{"_index":1247,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h4",{"_index":1323,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h5",{"_index":1340,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ha",{"_index":648,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["habilita",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["habilitación",{"_index":877,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["habilitada",{"_index":847,"title":{},"body":{"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["habilitar",{"_index":875,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["habilitar/deshabilitar",{"_index":872,"title":{},"body":{"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["hace",{"_index":860,"title":{},"body":{"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["hacer",{"_index":863,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["han",{"_index":1212,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["handleerror",{"_index":1038,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["handleerror(error",{"_index":823,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["hay",{"_index":738,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["haz",{"_index":715,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["header",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["height",{"_index":1227,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["helpbuilding",{"_index":1478,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1337,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["hijos",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["hours",{"_index":423,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["http",{"_index":825,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1459,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":772,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["httperrorresponse",{"_index":773,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["icon",{"_index":510,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["id",{"_index":624,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["id_pregunta",{"_index":791,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["idencuesta",{"_index":855,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["identificador",{"_index":839,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["identifier",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1034,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["idx",{"_index":722,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ignacio",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":1083,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["importados",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["important",{"_index":1348,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["includes",{"_index":1468,"title":{},"body":{"index.html":{}}}],["includes(tipo",{"_index":1003,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["including",{"_index":1514,"title":{},"body":{"index.html":{}}}],["incluyendo",{"_index":644,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incompleta",{"_index":635,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incorporada",{"_index":391,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["indefinidamente",{"_index":733,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicepreguntaeditando",{"_index":273,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["información",{"_index":829,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["information",{"_index":1513,"title":{},"body":{"index.html":{}}}],["ingresa",{"_index":711,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ingresar",{"_index":1017,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["inicializa",{"_index":382,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["iniciando",{"_index":572,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inicio",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(activatedroute",{"_index":1134,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(confirmationservice",{"_index":314,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inject(encuestasservice",{"_index":319,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(httpclient",{"_index":797,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["inject(messageservice",{"_index":326,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(respuestasservice",{"_index":1131,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(router",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["injectable",{"_index":771,"title":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["injectables",{"_index":842,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"overview.html":{}}}],["inmediatamente",{"_index":639,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["input",{"_index":409,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["input('15vw",{"_index":1057,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('40vw",{"_index":1061,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('70vw",{"_index":1059,"title":{},"body":{"components/SeccionComponent.html":{}}}],["inputs",{"_index":888,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inputtextmodule",{"_index":260,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["insights",{"_index":226,"title":{},"body":{"components/BannerComponent.html":{}}}],["instanceof",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["instrucciones",{"_index":710,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["intenta",{"_index":693,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["intentar",{"_index":684,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["interface",{"_index":739,"title":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["interfaces",{"_index":740,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"overview.html":{}}}],["interfaces/create",{"_index":356,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaces/encuesta.dto",{"_index":859,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["interfaces/pregunta.dto",{"_index":348,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaz",{"_index":749,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["interno",{"_index":692,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inválido",{"_index":581,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inyección",{"_index":862,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["inyectados",{"_index":362,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["iscreationpage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["ishomepage",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["ispresentacionenlacespage",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["isresponderencuestapage",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["isresultadospage",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["italic",{"_index":1344,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["item",{"_index":1324,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["items",{"_index":1239,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["jos",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["judith",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":1241,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["karma",{"_index":1493,"title":{},"body":{"index.html":{}}}],["kloster",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["la",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":515,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["labels",{"_index":1108,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["las",{"_index":981,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1071,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["leftmargin",{"_index":1052,"title":{},"body":{"components/SeccionComponent.html":{}}}],["legend",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["life",{"_index":448,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["limpiar",{"_index":641,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["linde",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":1274,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["linear",{"_index":1230,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link",{"_index":1201,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.click",{"_index":1207,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.download",{"_index":1204,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.href",{"_index":1203,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["list",{"_index":1473,"title":{},"body":{"index.html":{}}}],["lista",{"_index":754,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{}}}],["literal",{"_index":952,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1233,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["local",{"_index":411,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["los",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maia",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":1112,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["manera",{"_index":223,"title":{},"body":{"components/BannerComponent.html":{}}}],["mantener",{"_index":827,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["map",{"_index":779,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["map(response",{"_index":803,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["margin",{"_index":1070,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maría",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round((opcion.cantidad_respuestas",{"_index":1177,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["max",{"_index":1068,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maxwidth",{"_index":1053,"title":{},"body":{"components/SeccionComponent.html":{}}}],["media",{"_index":1367,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["mejores",{"_index":229,"title":{},"body":{"components/BannerComponent.html":{}}}],["menos",{"_index":394,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mensaje",{"_index":473,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mensajes",{"_index":907,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["message",{"_index":503,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["messagemodule",{"_index":265,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["messageservice",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadatos",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["micaela",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["mientras",{"_index":585,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["min",{"_index":1065,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["minutes",{"_index":425,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["minutos",{"_index":252,"title":{},"body":{"components/BannerComponent.html":{}}}],["minwidth",{"_index":1054,"title":{},"body":{"components/SeccionComponent.html":{}}}],["miscellaneous",{"_index":1432,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":413,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["model",{"_index":900,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["model(null",{"_index":960,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["model.required",{"_index":904,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["modify",{"_index":1464,"title":{},"body":{"index.html":{}}}],["modo",{"_index":375,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modoedicion",{"_index":274,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modules",{"_index":1521,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":756,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["month",{"_index":417,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["more",{"_index":1512,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["mostrarerroresvalidacion",{"_index":287,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["muestra",{"_index":495,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{}}}],["más",{"_index":694,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["máxima",{"_index":246,"title":{},"body":{"components/BannerComponent.html":{}}}],["método",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["mínima",{"_index":403,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["módulos",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["múltiple",{"_index":1000,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":1472,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["navbar.component.css",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":80,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["navegar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1458,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["navigateto(route",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":453,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["necesario",{"_index":831,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["necesarios",{"_index":634,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["needs",{"_index":1509,"title":{},"body":{"index.html":{}}}],["new",{"_index":386,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1159,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ng",{"_index":1295,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":1102,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["nico",{"_index":840,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["nombre",{"_index":290,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["nombre.invalid",{"_index":717,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombre.touched",{"_index":718,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombrepregunta",{"_index":554,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["none",{"_index":1299,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasabiertas",{"_index":1223,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasopciones",{"_index":1224,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["now",{"_index":406,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["now.getfullyear",{"_index":416,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nueva",{"_index":430,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["nuevamente",{"_index":685,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["null",{"_index":974,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":958,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["number",{"_index":301,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numero",{"_index":786,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numeropregunta",{"_index":789,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["número",{"_index":1024,"title":{},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["o",{"_index":467,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":590,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["obligatoria",{"_index":787,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["observable",{"_index":775,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtener",{"_index":402,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["obtenerencuestaparaparticipacion",{"_index":1039,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerencuestaparaparticipacion(id",{"_index":798,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta",{"_index":1040,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta(codigoresultados",{"_index":815,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenida",{"_index":804,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenido",{"_index":1152,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["obtiene",{"_index":588,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["obtén",{"_index":225,"title":{},"body":{"components/BannerComponent.html":{}}}],["one",{"_index":1507,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":1084,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opacity",{"_index":1362,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["opcion.cantidad_respuestas",{"_index":1174,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion.dto",{"_index":766,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["opcion.dto.ts",{"_index":1397,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["opcion.texto",{"_index":725,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["opcion_multiple_seleccion_multiple",{"_index":783,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcion_multiple_seleccion_simple",{"_index":782,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcional",{"_index":730,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["opciondto",{"_index":1022,"title":{"interfaces/OpcionDTO.html":{}},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["opciones",{"_index":737,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["opciones.touched",{"_index":1015,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value",{"_index":1012,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value.length",{"_index":1011,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opcionesnovacias",{"_index":968,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opcionesrequeridas",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opcionrespuesta",{"_index":785,"title":{"interfaces/OpcionRespuesta.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["opcionseleccionada",{"_index":926,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opción",{"_index":903,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1457,"title":{},"body":{"index.html":{}}}],["operación",{"_index":562,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["optimiza",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1487,"title":{},"body":{"index.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["orden",{"_index":1025,"title":{},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["original",{"_index":599,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["otros",{"_index":828,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["outlined",{"_index":518,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["output",{"_index":901,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["outputs",{"_index":889,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["overflow",{"_index":1336,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["overview",{"_index":1518,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1271,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["package",{"_index":1409,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1116,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["padre",{"_index":918,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["page",{"_index":1520,"title":{},"body":{"index.html":{}}}],["para",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["parte",{"_index":878,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["payload",{"_index":812,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pequeño",{"_index":661,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["performance",{"_index":1488,"title":{},"body":{"index.html":{}}}],["permitida",{"_index":404,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["pero",{"_index":751,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["persiste",{"_index":547,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["personalizadas",{"_index":220,"title":{},"body":{"components/BannerComponent.html":{}}}],["personalizado",{"_index":976,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["peticiones",{"_index":864,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/variables.html":{}}}],["petición",{"_index":866,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["pi",{"_index":511,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["pick",{"_index":744,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":801,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":814,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pipe(filter(event",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1477,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1113,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["poder",{"_index":446,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["por",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["porcentaje",{"_index":1176,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["posible",{"_index":683,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["position",{"_index":1114,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["post",{"_index":867,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["powerful",{"_index":1469,"title":{},"body":{"index.html":{}}}],["preciso",{"_index":233,"title":{},"body":{"components/BannerComponent.html":{}}}],["pregunta",{"_index":190,"title":{"interfaces/Pregunta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pregunta${encuesta.preguntas.length",{"_index":651,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["pregunta.dto",{"_index":747,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{}}}],["pregunta.dto.ts",{"_index":764,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["pregunta.enum",{"_index":351,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.enum.ts",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pregunta.id",{"_index":808,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.numero",{"_index":809,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones",{"_index":724,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.foreach(opcion",{"_index":990,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["pregunta.opciones.length",{"_index":736,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.map((opcion",{"_index":1180,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.reduce((total",{"_index":1173,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.respuestas_abiertas?.length",{"_index":1222,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.texto",{"_index":464,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.tipo",{"_index":810,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta?.texto",{"_index":555,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaaeditar",{"_index":927,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["preguntadto",{"_index":296,"title":{"interfaces/PreguntaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["preguntaeliminada",{"_index":484,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaeliminada.texto",{"_index":488,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas",{"_index":289,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["preguntas.invalid",{"_index":727,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.length",{"_index":726,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.value",{"_index":720,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaseleccionada",{"_index":275,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["presentacion",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["presentacionenlacescomponent",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["presentación",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["preservar",{"_index":826,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["preset",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primeicons",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":973,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["primeng/api",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/button",{"_index":213,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/card",{"_index":1139,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/chart",{"_index":1142,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/confirmdialog",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/dialog",{"_index":345,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/dropdown",{"_index":967,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/floatlabel",{"_index":339,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/inputtext",{"_index":338,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/message",{"_index":358,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["primeng/progressspinner",{"_index":1140,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/themes",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["primeng/toast",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primera",{"_index":256,"title":{},"body":{"components/BannerComponent.html":{}}}],["primero",{"_index":444,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["principal",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["private",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["probar",{"_index":549,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["problema",{"_index":546,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesada",{"_index":598,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesar",{"_index":614,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["proceso",{"_index":587,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["production",{"_index":1486,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":1338,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["progressspinnermodule",{"_index":1087,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["project",{"_index":1444,"title":{},"body":{"index.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"properties.html":{}}}],["propiedad",{"_index":753,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["propiedades",{"_index":768,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{}}}],["protegidos",{"_index":245,"title":{},"body":{"components/BannerComponent.html":{}}}],["proveedor",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":795,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["providehttpclient",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1094,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pudo",{"_index":456,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pueda",{"_index":835,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["puede",{"_index":530,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["puedes",{"_index":1219,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["página",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["qr",{"_index":763,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["qrcode",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["qu",{"_index":376,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["que",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":669,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["question",{"_index":512,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["radius",{"_index":1258,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["reactiveformsmodule",{"_index":264,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reactivo",{"_index":360,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["readonly",{"_index":925,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["real",{"_index":240,"title":{},"body":{"components/BannerComponent.html":{}}}],["reales",{"_index":611,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["realiza",{"_index":865,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["realizar",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recopila",{"_index":221,"title":{},"body":{"components/BannerComponent.html":{}}}],["recopiladas",{"_index":1221,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["redirección",{"_index":655,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirecturl",{"_index":656,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigiendo",{"_index":667,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigir",{"_index":665,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reference",{"_index":1519,"title":{},"body":{"index.html":{}}}],["references",{"_index":1516,"title":{},"body":{"index.html":{}}}],["registrarrespuestas",{"_index":1041,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestas(id",{"_index":811,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["registrarrespuestasdto",{"_index":792,"title":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["reject",{"_index":561,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rejectbuttonprops",{"_index":514,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reload",{"_index":1462,"title":{},"body":{"index.html":{}}}],["representa",{"_index":838,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["requerida",{"_index":395,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requerido",{"_index":719,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["requeridos",{"_index":538,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requiere",{"_index":602,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requieren",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":891,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["res",{"_index":621,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigorespuesta",{"_index":627,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigoresultados",{"_index":629,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.id",{"_index":625,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reservados",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":934,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetea",{"_index":909,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reseteado",{"_index":709,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resetear",{"_index":431,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["resetearopciones",{"_index":935,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetee",{"_index":707,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resources",{"_index":1511,"title":{},"body":{"index.html":{}}}],["responder",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["responderencuestacomponent",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["respondiendo",{"_index":1032,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["response",{"_index":1160,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.data",{"_index":1164,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.id",{"_index":805,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["response.nombre",{"_index":806,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["response.preguntas.map((pregunta",{"_index":807,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["responsetype",{"_index":821,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["responsive",{"_index":1111,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["respuesta",{"_index":623,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["respuesta=${res.codigorespuesta}&codigo",{"_index":659,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["respuestapreguntadto",{"_index":790,"title":{"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestas",{"_index":222,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["respuestasservice",{"_index":796,"title":{"injectables/RespuestasService.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["respuestausuario",{"_index":788,"title":{"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["resultado",{"_index":1293,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resultados.component.css",{"_index":1089,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.html",{"_index":1090,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts",{"_index":1082,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["resultados.component.ts:101",{"_index":1107,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:130",{"_index":1110,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:147",{"_index":1105,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:193",{"_index":1103,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:31",{"_index":1135,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:32",{"_index":1136,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:33",{"_index":1132,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:34",{"_index":1130,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:35",{"_index":1125,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:38",{"_index":1133,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:39",{"_index":1124,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:40",{"_index":1123,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:41",{"_index":1126,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:42",{"_index":1128,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:43",{"_index":1127,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:44",{"_index":1129,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:47",{"_index":1137,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:49",{"_index":1122,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:66",{"_index":1104,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:89",{"_index":1121,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:95",{"_index":1119,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.nombre",{"_index":1217,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados=${res.codigoresultados",{"_index":660,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resultados_encuesta_${this.resultados.id}.csv",{"_index":1205,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["results",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retornar",{"_index":834,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["return",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":545,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rgba(0",{"_index":1265,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(102",{"_index":1349,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(255",{"_index":1254,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(40",{"_index":1358,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["right",{"_index":1073,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rightmargin",{"_index":1055,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rocha",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["roszezuk",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["routermodule",{"_index":210,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1453,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1495,"title":{},"body":{"index.html":{}}}],["running",{"_index":1456,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["rutas",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":777,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["rápido",{"_index":231,"title":{},"body":{"components/BannerComponent.html":{}}}],["s",{"_index":652,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["salida",{"_index":906,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["scaffolding",{"_index":1467,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1475,"title":{},"body":{"index.html":{}}}],["se",{"_index":377,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":578,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion",{"_index":1049,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion.component.css",{"_index":1051,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion.component.html",{"_index":1050,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion/seccion.component",{"_index":344,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seccioncomponent",{"_index":196,"title":{"components/SeccionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["secondary",{"_index":517,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seguridad",{"_index":247,"title":{},"body":{"components/BannerComponent.html":{}}}],["seguro",{"_index":242,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["selecciona",{"_index":734,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["seleccionada",{"_index":368,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seleccionadas",{"_index":1035,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["selección",{"_index":380,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["ser",{"_index":760,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["serveonce",{"_index":1455,"title":{},"body":{"index.html":{}}}],["server",{"_index":1452,"title":{},"body":{"index.html":{}}}],["services/encuestas.service",{"_index":354,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["services/respuestas.service",{"_index":1143,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["servicio",{"_index":703,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["servicios",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["servidor",{"_index":552,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["settimeout",{"_index":666,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["severity",{"_index":439,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["shadow",{"_index":1262,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["shouldshowheaderfooter",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["siempre",{"_index":706,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["signal",{"_index":323,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["signal(false",{"_index":316,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["signal(null",{"_index":329,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["siguiente",{"_index":482,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["simple",{"_index":217,"title":{},"body":{"components/BannerComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["sin",{"_index":699,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sistema",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["size",{"_index":1251,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["solid",{"_index":1327,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["solo",{"_index":752,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["son",{"_index":688,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["space",{"_index":1311,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["speed",{"_index":1489,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1245,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["src/.../app.config.ts",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../codigo",{"_index":1434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":1527,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../opciones",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../respuestas.service.ts",{"_index":1528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tipos",{"_index":1436,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/banner/banner.component.ts",{"_index":207,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/components/creacion",{"_index":257,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["src/app/components/enlaces/presentacion",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["src/app/components/gestion",{"_index":880,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/respuestas/responder",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["src/app/components/resultados/visualizar",{"_index":1081,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts",{"_index":1048,"title":{},"body":{"components/SeccionComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts:10",{"_index":1062,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:11",{"_index":1060,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:12",{"_index":1058,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:13",{"_index":1063,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:15",{"_index":1075,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/texto",{"_index":1076,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["src/app/enums/codigo",{"_index":1437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/tipos",{"_index":1394,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/create",{"_index":741,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/encuesta.dto.ts",{"_index":837,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/opcion.dto.ts",{"_index":1023,"title":{},"body":{"interfaces/OpcionDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/pregunta.dto.ts",{"_index":1027,"title":{},"body":{"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/respuesta.dto.ts",{"_index":1031,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"coverage.html":{}}}],["src/app/services/encuestas.service.ts",{"_index":843,"title":{},"body":{"injectables/EncuestasService.html":{},"coverage.html":{}}}],["src/app/services/encuestas.service.ts:10",{"_index":856,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:13",{"_index":850,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:27",{"_index":854,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:39",{"_index":848,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/respuestas.service.ts",{"_index":769,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/respuestas.service.ts:107",{"_index":1042,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:113",{"_index":1043,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:54",{"_index":1047,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:56",{"_index":1044,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:78",{"_index":1046,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:83",{"_index":1045,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/validators/opciones",{"_index":1403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":1085,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["start",{"_index":1369,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["started",{"_index":1442,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":674,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["statustext",{"_index":676,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["sticky",{"_index":542,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["store",{"_index":1482,"title":{},"body":{"index.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["string(now.getdate()).padstart(2",{"_index":422,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.gethours()).padstart(2",{"_index":424,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getminutes()).padstart(2",{"_index":426,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getmonth",{"_index":418,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["strings",{"_index":606,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["style",{"_index":1056,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["styles",{"_index":1080,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["styleurl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["styleurls",{"_index":1088,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["su",{"_index":568,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["subscribe",{"_index":1158,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["subscribe((event",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":475,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["such",{"_index":1476,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1508,"title":{},"body":{"index.html":{}}}],["summary",{"_index":441,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sus",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["suscribirse",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["súper",{"_index":248,"title":{},"body":{"components/BannerComponent.html":{}}}],["table",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["tarde",{"_index":695,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tarjeta",{"_index":1294,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tema",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["temporal",{"_index":1198,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["temporalmente",{"_index":972,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tendr",{"_index":755,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["tenemos",{"_index":633,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["test",{"_index":1494,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1502,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1499,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1491,"title":{},"body":{"index.html":{}}}],["text",{"_index":1244,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["texto",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["texto.invalid",{"_index":921,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["texto.touched",{"_index":922,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["textoerrorcomponent",{"_index":198,"title":{"components/TextoErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["textual",{"_index":491,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["theme",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.agregaropcion.emit(opcion",{"_index":916,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.agregarpregunta.emit(pregunta",{"_index":998,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargando",{"_index":1156,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cargarpreguntaparaeditar(preguntaaeditar",{"_index":979,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargarresultados",{"_index":1154,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cerrar",{"_index":919,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.codigoresultados",{"_index":1149,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.confirmationservice.close",{"_index":640,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":502,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.creandoencuesta.set(false",{"_index":708,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.creandoencuesta.set(true",{"_index":583,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.crearencuesta",{"_index":521,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.currentroute",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/presentacion",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/responder",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/resultados",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialoggestionopcionvisible.set(true",{"_index":1004,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.dialoggestionpreguntavisible.set(true",{"_index":435,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(false",{"_index":459,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(true",{"_index":451,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.eliminaropcion(index",{"_index":1006,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.eliminarpregunta(index",{"_index":560,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.encuestasservice.actualizarestadoencuesta(this.idencuesta",{"_index":1214,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.error",{"_index":1155,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.estadoencuesta",{"_index":1167,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.exportandocsv",{"_index":1196,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.fechavencimiento.value",{"_index":615,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form",{"_index":385,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.errors",{"_index":576,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('fechavencimiento",{"_index":401,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('nombre",{"_index":399,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('opciones",{"_index":994,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('preguntas",{"_index":397,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('texto",{"_index":914,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('texto')?.value",{"_index":915,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.form.get('tipo",{"_index":993,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.markallastouched",{"_index":525,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.reset",{"_index":913,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.valid",{"_index":500,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value",{"_index":574,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value.fechavencimiento",{"_index":577,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.httpclient.get",{"_index":870,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/${idencuesta}/csv/${codigoresultados",{"_index":820,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/estructura/${token",{"_index":800,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/resultados/${codigoresultados",{"_index":816,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.patch",{"_index":874,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.post('/api/v1/encuestas",{"_index":868,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.post(`/api/v1/respuestas/${id}/${codigo",{"_index":813,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.idencuesta",{"_index":1169,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.indicepreguntaeditando",{"_index":471,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set",{"_index":433,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set(index",{"_index":462,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.ispresentacionenlacespage",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresponderencuestapage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresultadospage",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.leftmargin",{"_index":1072,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.maxwidth",{"_index":1069,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.messageservice.add",{"_index":438,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["this.messageservice.clear",{"_index":645,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.minwidth",{"_index":1067,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.modoedicion",{"_index":470,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(false",{"_index":432,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(true",{"_index":461,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.mostrarerroresvalidacion",{"_index":501,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.errors?.['required",{"_index":527,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.invalid",{"_index":526,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.opciones.clear",{"_index":984,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.push",{"_index":991,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.removeat(index",{"_index":1005,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntaaeditar",{"_index":978,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntas.at(index)?.setvalue(pregunta",{"_index":472,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.at(index)?.value",{"_index":454,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.errors?.['required",{"_index":534,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.invalid",{"_index":533,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.length",{"_index":437,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.push",{"_index":478,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.removeat(index",{"_index":485,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(null",{"_index":434,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(pregunta",{"_index":463,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.reset",{"_index":980,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.resetearopciones",{"_index":982,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.respuestasservice.exportarresultadoscsv(this.resultados.id",{"_index":1197,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.respuestasservice.obtenerresultadosencuesta(this.codigoresultados",{"_index":1157,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados",{"_index":1163,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados.id",{"_index":1195,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados?.habilitada",{"_index":1168,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados?.id",{"_index":1170,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.rightmargin",{"_index":1074,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.route.snapshot.parammap.get('codigoresultados",{"_index":1150,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.router.events",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/presentacion",{"_index":668,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.router.navigate([route",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.texto.setvalue(pregunta.texto",{"_index":987,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.tipo.setvalue(pregunta.tipo",{"_index":988,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible",{"_index":912,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible.set(false",{"_index":920,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["throwerror",{"_index":776,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["tiempo",{"_index":239,"title":{},"body":{"components/BannerComponent.html":{}}}],["tiene",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tieneitems",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tieneitems(array",{"_index":1440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tieneitems(controlopciones.value",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipo",{"_index":312,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tipo.enum",{"_index":858,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["tipo.enum.ts",{"_index":1435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tipo.invalid",{"_index":1007,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.touched",{"_index":1008,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.value",{"_index":1009,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipocodres",{"_index":632,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipocodresp",{"_index":631,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipoid",{"_index":630,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion",{"_index":493,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion.tipo",{"_index":494,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiporespuesta",{"_index":780,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tipos",{"_index":992,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipospreguntapresentacion",{"_index":349,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tipospreguntapresentacion.find",{"_index":492,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiposrespuestaenum",{"_index":310,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tiposrespuestaenum.abierta",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_multiple",{"_index":1001,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_simple",{"_index":1002,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.verdadero_falso",{"_index":995,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":1319,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["toastmodule",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["toasts",{"_index":642,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["toda",{"_index":861,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["todas",{"_index":983,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["todos",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["token",{"_index":799,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["tomar",{"_index":228,"title":{},"body":{"components/BannerComponent.html":{}}}],["tools",{"_index":1470,"title":{},"body":{"index.html":{}}}],["top",{"_index":1322,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["total",{"_index":1172,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["totalmente",{"_index":241,"title":{},"body":{"components/BannerComponent.html":{}}}],["totalrespuestas",{"_index":1118,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["track",{"_index":721,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["traer",{"_index":869,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta",{"_index":845,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta(idencuesta",{"_index":852,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["transform",{"_index":1304,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transition",{"_index":1300,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["translatey",{"_index":1305,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transparent",{"_index":1289,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["triangle",{"_index":558,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["true",{"_index":508,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":255,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["tus",{"_index":215,"title":{},"body":{"components/BannerComponent.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1525,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":601,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["título",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["un",{"_index":496,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["una",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":596,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["unit",{"_index":1490,"title":{},"body":{"index.html":{}}}],["url",{"_index":654,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["usa",{"_index":548,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usando",{"_index":713,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usar",{"_index":1146,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["use",{"_index":1496,"title":{},"body":{"index.html":{}}}],["usepointstyle",{"_index":1115,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["using",{"_index":1446,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":663,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["utilidades",{"_index":361,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["utilizado",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["vacias.validator",{"_index":970,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["vacias.validator.ts",{"_index":1404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vacío",{"_index":532,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vacíos",{"_index":607,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valid",{"_index":573,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valida",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validación",{"_index":524,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":975,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["validadores",{"_index":384,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validar",{"_index":499,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validationerrors",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":342,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators.minlength(1",{"_index":392,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validators.required",{"_index":387,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators/opciones",{"_index":969,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["valiosos",{"_index":227,"title":{},"body":{"components/BannerComponent.html":{}}}],["valores",{"_index":610,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["variable",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1144,"title":{"miscellaneous/variables.html":{}},"body":{"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["vea",{"_index":664,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vecimiento",{"_index":400,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vencimiento",{"_index":390,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["ver",{"_index":1220,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["verdadero",{"_index":996,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["verdadero_falso",{"_index":784,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["verifica",{"_index":697,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["verificar",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["verifique",{"_index":1171,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["version",{"_index":1449,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":911,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["visibilidad",{"_index":364,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["visible",{"_index":887,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["visit",{"_index":1517,"title":{},"body":{"index.html":{}}}],["visualizar",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["visualizarresultadoscomponent",{"_index":201,"title":{"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válido",{"_index":579,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válidos",{"_index":689,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["warn",{"_index":440,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["webkit",{"_index":1286,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["weight",{"_index":1283,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["whenever",{"_index":1463,"title":{},"body":{"index.html":{}}}],["white",{"_index":1249,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["width",{"_index":1066,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1200,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1209,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["wrap",{"_index":1331,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["xito",{"_index":646,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["y",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":415,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["yyyy",{"_index":412,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["zone.js",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            ConfirmDialogModule\n                            ToastModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRoute\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isCreationPage\n                            \n                            \n                                isHomePage\n                            \n                            \n                                isPresentacionEnlacesPage\n                            \n                            \n                                isResponderEncuestaPage\n                            \n                            \n                                isResultadosPage\n                            \n                            \n                                navigateTo\n                            \n                            \n                                shouldShowHeaderFooter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isCreationPage\n                        \n                    \n                \n            \n            \n                \nisCreationPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHomePage\n                        \n                    \n                \n            \n            \n                \nisHomePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPresentacionEnlacesPage\n                        \n                    \n                \n            \n            \n                \nisPresentacionEnlacesPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResponderEncuestaPage\n                        \n                    \n                \n            \n            \n                \nisResponderEncuestaPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResultadosPage\n                        \n                    \n                \n            \n            \n                \nisResultadosPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldShowHeaderFooter\n                        \n                    \n                \n            \n            \n                \nshouldShowHeaderFooter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Sistema de Encuestas'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router, RouterOutlet, NavigationEnd } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n// import { NavbarComponent } from './components/navbar/navbar.component';\n\n// Decorador que define los metadatos del componente principal de la aplicación\n@Component({\n  selector: 'app-root', // Selector utilizado en el HTML para este componente\n  imports: [RouterOutlet, ConfirmDialogModule, ToastModule, CommonModule], // Módulos importados para el template\n  templateUrl: './app.component.html', // Ruta del archivo de template HTML\n  styleUrl: './app.component.css', // Ruta del archivo de estilos CSS\n  providers: [ConfirmationService, MessageService], // Servicios disponibles para el componente y sus hijos\n})\nexport class AppComponent {\n  title = 'Sistema de Encuestas'; // Título de la aplicación\n  currentRoute = ''; // Ruta actual para navegación dinámica\n\n  private router = inject(Router);\n\n  constructor() {\n    // Suscribirse a los cambios de ruta para actualizar la navegación\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentRoute = event.url;\n      });\n  }\n\n  // Método para verificar si estamos en la página de inicio\n  isHomePage(): boolean {\n    return this.currentRoute === '/' || this.currentRoute === '';\n  }\n\n  // Método para verificar si estamos en la página de creación\n  isCreationPage(): boolean {\n    return this.currentRoute === '/creacion';\n  }\n\n  // Método para verificar si estamos en la página de presentación de enlaces\n  isPresentacionEnlacesPage(): boolean {\n    return this.currentRoute.includes('/presentacion-enlaces');\n  }\n\n  // Método para verificar si estamos en la página de responder encuesta\n  isResponderEncuestaPage(): boolean {\n    return this.currentRoute.includes('/responder/');\n  }\n\n  // Método para verificar si estamos en la página de resultados\n  isResultadosPage(): boolean {\n    return this.currentRoute.includes('/resultados/');\n  }\n\n  // Método para verificar si debemos mostrar header y footer\n  shouldShowHeaderFooter(): boolean {\n    return !this.isPresentacionEnlacesPage() &&\n           !this.isResponderEncuestaPage() &&\n           !this.isResultadosPage();\n  }\n\n  // Método para navegar a una ruta específica\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      Sistema de Encuestas\n    \n    \n      \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n      \n    \n  \n\n\n\n\n  \n  \n\n\n\n\n  \n    \n      \n        Sistema de Encuestas\n        &copy; 2025 Todos los derechos reservados\n      \n\n      \n        Desarrollado por:\n        \n          Estefanía Altamirano\n          Micaela Kloster\n          Ignacio José Rocha\n          Maia Judith Roszezuk\n          María Emilia Van de Linde\n        \n      \n    \n  \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Sistema de Encuestas                                                                Crear Encuesta                                                                    Inicio                                                                    Inicio                                                            Crear Encuesta                                                      Sistema de Encuestas        © 2025 Todos los derechos reservados                    Desarrollado por:                  Estefanía Altamirano          Micaela Kloster          Ignacio José Rocha          Maia Judith Roszezuk          María Emilia Van de Linde                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/banner/banner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-banner\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n            \n                styleUrl\n                ./banner.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-banner',\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './banner.component.html',\n  styleUrl: './banner.component.css'\n})\nexport class BannerComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n  \n\n  \n  \n    \n      \n      \n        \n          \n        \n      \n\n      \n      \n        Creá tus encuestas\n        de forma simple y anónima\n      \n\n      \n      \n        Diseña encuestas personalizadas, recopila respuestas de manera eficiente\n        y obtén insights valiosos para tomar mejores decisiones.\n      \n      \n      \n        \n          ⚡\n          Rápido\n        \n        \n          🔒\n          Anónimo\n        \n        \n          🎯\n          Preciso\n        \n      \n      -->\n\n      \n      \n        \n          \n            📊\n            Análisis Detallado\n            Obtén insights valiosos con gráficos y estadísticas en tiempo real\n          \n          \n            🔒\n            Totalmente Seguro\n            Tus datos y respuestas están protegidos con la máxima seguridad\n          \n          \n            ⚡\n            Súper Rápido\n            Crea y comparte encuestas en cuestión de minutos\n          \n        \n        ¡Comienza creando tu primera encuesta!\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                  Creá tus encuestas        de forma simple y anónima                          Diseña encuestas personalizadas, recopila respuestas de manera eficiente        y obtén insights valiosos para tomar mejores decisiones.                                    ⚡          Rápido                          🔒          Anónimo                          🎯          Preciso                    -->                                          📊            Análisis Detallado            Obtén insights valiosos con gráficos y estadísticas en tiempo real                                🔒            Totalmente Seguro            Tus datos y respuestas están protegidos con la máxima seguridad                                ⚡            Súper Rápido            Crea y comparte encuestas en cuestión de minutos                          ¡Comienza creando tu primera encuesta!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreacionEncuestaComponent.html":{"url":"components/CreacionEncuestaComponent.html","title":"component - CreacionEncuestaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreacionEncuestaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-creacion-encuesta\n            \n\n\n            \n                imports\n                \n                            InputTextModule\n                            FloatLabel\n                            FormsModule\n                                SeccionComponent\n                            ButtonModule\n                            DialogModule\n                                GestionPreguntaDialogComponent\n                            ReactiveFormsModule\n                                TextoErrorComponent\n                            RouterModule\n                            MessageModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./creacion-encuesta.component.html\n            \n\n\n\n            \n                styleUrl\n                ./creacion-encuesta.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                creandoEncuesta\n                            \n                            \n                                dialogGestionPreguntaVisible\n                            \n                            \n                                dialogSeleccionPreguntaVisible\n                            \n                            \n                                    Private\n                                encuestasService\n                            \n                            \n                                form\n                            \n                            \n                                indicePreguntaEditando\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                modoEdicion\n                            \n                            \n                                preguntaSeleccionada\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirDialog\n                            \n                            \n                                abrirDialogEditar\n                            \n                            \n                                agregarPregunta\n                            \n                            \n                                cerrarDialogSeleccion\n                            \n                            \n                                confirmarCrearEncuesta\n                            \n                            \n                                confirmarEliminarPregunta\n                            \n                            \n                                crearEncuesta\n                            \n                            \n                                editarPregunta\n                            \n                            \n                                eliminarPregunta\n                            \n                            \n                                getFechaMinima\n                            \n                            \n                                getTipoPreguntaPresentacion\n                            \n                            \n                                    Private\n                                mostrarErroresValidacion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    preguntas\n                                \n                                \n                                    nombre\n                                \n                                \n                                    fechaVencimiento\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialog\n                        \n                    \n                \n            \n            \n                \nabrirDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialogEditar\n                        \n                    \n                \n            \n            \n                \nabrirDialogEditar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n            \n                \nagregarPregunta(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrarDialogSeleccion\n                        \n                    \n                \n            \n            \n                \ncerrarDialogSeleccion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarCrearEncuesta\n                        \n                    \n                \n            \n            \n                \nconfirmarCrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarPregunta\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:300\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editarPregunta\n                        \n                    \n                \n            \n            \n                \neditarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarPregunta\n                        \n                    \n                \n            \n            \n                \neliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFechaMinima\n                        \n                    \n                \n            \n            \n                \ngetFechaMinima()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTipoPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTipoPreguntaPresentacion(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mostrarErroresValidacion\n                        \n                    \n                \n            \n            \n                \n                        \n                    mostrarErroresValidacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creandoEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogSeleccionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EncuestasService\n\n                    \n                \n                \n                    \n                        Default value : inject(EncuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indicePreguntaEditando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(-1)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modoEdicion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        preguntas\n                    \n                \n\n                \n                    \n                        getpreguntas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nombre\n                    \n                \n\n                \n                    \n                        getnombre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fechaVencimiento\n                    \n                \n\n                \n                    \n                        getfechaVencimiento()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:95\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { GestionPreguntaDialogComponent } from '../gestion-pregunta-dialog/gestion-pregunta-dialog.component';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { EncuestasService } from '../../services/encuestas.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CreateEncuestaDTO } from '../../interfaces/create-encuesta.dto';\nimport { MessageModule } from 'primeng/message';\n\n@Component({\n  selector: 'app-creacion-encuesta',\n  imports: [\n    InputTextModule,\n    FloatLabel,\n    FormsModule,\n    SeccionComponent,\n    ButtonModule,\n    DialogModule,\n    GestionPreguntaDialogComponent,\n    ReactiveFormsModule,\n    TextoErrorComponent,\n    RouterModule,\n    MessageModule,\n  ],\n  templateUrl: './creacion-encuesta.component.html',\n  styleUrl: './creacion-encuesta.component.css',\n})\nexport class CreacionEncuestaComponent {\n  // Formulario reactivo principal para la creación de la encuesta\n  form: FormGroup;\n\n  // Servicios y utilidades inyectados\n  private messageService: MessageService = inject(MessageService);\n  private router: Router = inject(Router);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n  private encuestasService: EncuestasService = inject(EncuestasService);\n\n  // Controla la visibilidad del diálogo para agregar/editar preguntas\n  dialogGestionPreguntaVisible = signal(false);\n\n  // Almacena la pregunta seleccionada para edición (si corresponde)\n  preguntaSeleccionada = signal(null);\n\n  // Controla el estado de carga del botón finalizar\n  creandoEncuesta = signal(false);\n\n  // Controla si estamos en modo edición y qué pregunta se está editando\n  modoEdicion = signal(false);\n  indicePreguntaEditando = signal(-1);\n\n  // Controla la visibilidad del diálogo de selección de preguntas para editar\n  dialogSeleccionPreguntaVisible = signal(false);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup({\n      nombre: new FormControl('', Validators.required), // Nombre de la encuesta\n      fechaVencimiento: new FormControl(null), // Fecha de vencimiento incorporada\n      preguntas: new FormArray>(\n        [],\n        [Validators.required, Validators.minLength(1)] // Al menos una pregunta requerida\n      ),\n    });\n  }\n\n  // Getter para el FormArray de preguntas\n  get preguntas(): FormArray> {\n    return this.form.get('preguntas') as FormArray>;\n  }\n\n  // Getter para el control del nombre de la encuesta\n  get nombre(): FormControl {\n    return this.form.get('nombre') as FormControl;\n  }\n\n    // Getter para fecha de vecimiento\n  get fechaVencimiento(): FormControl {\n    return this.form.get('fechaVencimiento') as FormControl;\n  }\n  \n  // Método para obtener la fecha mínima permitida (fecha actual)\n  getFechaMinima(): string {\n    const now = new Date();\n    // Formatear la fecha para el input datetime-local (YYYY-MM-DDTHH:MM)\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n  \n  // Abre el diálogo para agregar una nueva pregunta\n  abrirDialog() {\n    // Resetear modo edición\n    this.modoEdicion.set(false);\n    this.indicePreguntaEditando.set(-1);\n    this.preguntaSeleccionada.set(null);\n\n    this.dialogGestionPreguntaVisible.set(true);\n  }\n\n  // Abre el diálogo para editar preguntas existentes\n  abrirDialogEditar() {\n    if (this.preguntas.length === 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'No se formularon preguntas',\n        detail: 'Primero agrega una pregunta para poder editarla',\n        life: 4000\n      });\n      return;\n    }\n\n    // Abrir diálogo de selección de preguntas\n    this.dialogSeleccionPreguntaVisible.set(true);\n  }\n\n  // Edita una pregunta específica por índice\n  editarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    if (!pregunta) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No se pudo encontrar la pregunta a editar',\n        life: 4000\n      });\n      return;\n    }\n\n    // Cerrar diálogo de selección\n    this.dialogSeleccionPreguntaVisible.set(false);\n\n    // Configurar modo edición\n    this.modoEdicion.set(true);\n    this.indicePreguntaEditando.set(index);\n    this.preguntaSeleccionada.set(pregunta);\n\n    // Abrir el diálogo de edición\n    this.dialogGestionPreguntaVisible.set(true);\n\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Modo edición',\n      detail: `Editando: \"${pregunta.texto}\"`,\n      life: 3000\n    });\n  }\n\n  // Cierra el diálogo de selección de preguntas\n  cerrarDialogSeleccion() {\n    this.dialogSeleccionPreguntaVisible.set(false);\n  }\n\n  // Agrega una nueva pregunta al FormArray de preguntas o actualiza una existente\n  agregarPregunta(pregunta: PreguntaDTO) {\n    if (this.modoEdicion() && this.indicePreguntaEditando() >= 0) {\n      // Modo edición: actualizar pregunta existente\n      const index = this.indicePreguntaEditando();\n      this.preguntas.at(index)?.setValue(pregunta);\n\n      // Resetear modo edición\n      this.modoEdicion.set(false);\n      this.indicePreguntaEditando.set(-1);\n      this.preguntaSeleccionada.set(null);\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta actualizada',\n        detail: `Se actualizó la pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    } else {\n      // Modo agregar: nueva pregunta\n      this.preguntas.push(\n        new FormControl(pregunta) as FormControl\n      );\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta agregada',\n        detail: `Se agregó la siguiente pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    }\n  }\n\n  // Elimina una pregunta del FormArray por índice\n  eliminarPregunta(index: number) {\n    const preguntaEliminada = this.preguntas.at(index)?.value;\n    this.preguntas.removeAt(index);\n\n    // Mostrar mensaje de confirmación\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Pregunta eliminada',\n      detail: preguntaEliminada ? `Se eliminó la siguiente pregunta: \"${preguntaEliminada.texto}\"` : 'Pregunta eliminada correctamente',\n      life: 3000\n    });\n  }\n\n  // Devuelve la presentación textual del tipo de pregunta\n  getTipoPreguntaPresentacion(tipo: TiposRespuestaEnum): string {\n    return tiposPreguntaPresentacion.find(\n      (tipoPresentacion) => tipoPresentacion.tipo === tipo\n    )!?.presentacion;\n  }\n\n  // Muestra un cuadro de confirmación antes de crear la encuesta\n  confirmarCrearEncuesta() {\n    // Validar formulario antes de mostrar confirmación\n    if (!this.form.valid) {\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    this.confirmationService.confirm({\n      message: '¿Está seguro de que desea crear esta encuesta?',\n      header: 'Confirmar Creación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-question-circle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Crear Encuesta',\n        severity: 'success',\n      },\n      accept: () => {\n        this.crearEncuesta();\n      },\n    });\n  }\n\n  // Muestra errores específicos de validación\n  private mostrarErroresValidacion() {\n    this.form.markAllAsTouched();\n\n    const errores: string[] = [];\n\n    // Validar nombre de encuesta\n    if (this.nombre.invalid) {\n      if (this.nombre.errors?.['required']) {\n        errores.push('El campo -Nombre de la encuesta- no puede estar vacío');\n      }\n    }\n\n    // Validar preguntas\n    if (this.preguntas.invalid) {\n      if (this.preguntas.errors?.['required'] || this.preguntas.length === 0) {\n        errores.push('Debe agregar al menos una pregunta');\n      }\n    }\n\n    // Mostrar errores específicos\n    if (errores.length > 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'Campos requeridos',\n        detail: errores.join('. ') + '. Complete todos los campos antes de continuar.',\n        life: 4000,\n        sticky: false\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error de validación',\n        detail: 'Por favor, revisa los campos del formulario. Si el problema persiste, usa el botón \"Probar Conectividad\" para verificar la conexión con el servidor.',\n        life: 4000\n      });\n    }\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una pregunta\n  confirmarEliminarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    const nombrePregunta = pregunta?.texto || 'esta pregunta';\n\n    this.confirmationService.confirm({\n      message: `¿Está seguro de que desea eliminar \"${nombrePregunta}\"?`,\n      header: 'Confirmar Eliminación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Eliminar',\n        severity: 'danger',\n      },\n      accept: () => {\n        this.eliminarPregunta(index);\n      },\n      reject: () => {\n        this.messageService.add({\n          severity: 'info',\n          summary: 'Operación cancelada',\n          detail: 'La pregunta no fue eliminada',\n          life: 2000\n        });\n      }\n    });\n  }\n\n  // Envía la encuesta al backend para su creación\n  crearEncuesta() {\n    // Validación adicional antes de enviar\n    console.log('🔍 Iniciando creación de encuesta...');\n    console.log('📋 Estado del formulario:', {\n      valid: this.form.valid,\n      value: this.form.value,\n      errors: this.form.errors,\n      fechaVencimiento: this.form.value.fechaVencimiento\n    });\n\n    // Verificar que el formulario sea válido\n    if (!this.form.valid) {\n      console.error('❌ Formulario inválido:', this.form.errors);\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    // Activar estado de carga\n    this.creandoEncuesta.set(true);\n\n    // Mostrar mensaje de carga\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Creando encuesta...',\n      detail: 'Por favor espera mientras se completa el proceso de creación...',\n      life: 4000\n    });\n\n    // Obtiene los datos del formulario\n\n    const formData = this.form.value;\n\n    // Crear el objeto de encuesta con los campos requeridos por el backend\n    const encuesta: CreateEncuestaDTO = {\n      ...this.form.value,\n      enlaceCorto: '',\n      codigoQR: '',\n      nombre: formData.nombre,\n      fechaVencimiento: formData.fechaVencimiento ? new Date(formData.fechaVencimiento) : undefined,\n      preguntas: formData.preguntas || []\n    };\n\n    console.log('📅 Fecha de vencimiento procesada:', {\n      original: formData.fechaVencimiento,\n      procesada: encuesta.fechaVencimiento,\n      tipo: typeof encuesta.fechaVencimiento\n    });\n\n\n    // Si el backend requiere estos campos, los agregamos como strings vacíos\n    // El backend debería generar los valores reales\n    if (encuesta.enlaceCorto === undefined) {\n      encuesta.enlaceCorto = '';\n    }\n    if (encuesta.codigoQR === undefined) {\n      encuesta.codigoQR = '';\n    }\n\n    console.log('📝 Datos de la encuesta antes de procesar:', encuesta);\n\n    // Validar fecha de vencimiento primero\n    if (this.fechaVencimiento.value) {\n      const fechaSeleccionada = new Date(this.fechaVencimiento.value);\n      const ahora = new Date();\n\n      if (fechaSeleccionada  {\n        console.log('✅ Encuesta creada exitosamente:', res);\n        console.log('📊 Estructura de la respuesta:', {\n          id: res.id,\n          codigoRespuesta: res.codigoRespuesta,\n          codigoResultados: res.codigoResultados,\n          tipoId: typeof res.id,\n          tipoCodResp: typeof res.codigoRespuesta,\n          tipoCodRes: typeof res.codigoResultados\n        });\n\n        // Verificar que tenemos todos los datos necesarios\n        if (!res.id || !res.codigoRespuesta || !res.codigoResultados) {\n          console.error('❌ Respuesta incompleta del backend:', res);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error en la respuesta del servidor',\n            detail: 'El servidor no devolvió todos los códigos necesarios',\n            life: 5000\n          });\n          return;\n        }\n\n        // Cerrar el diálogo de confirmación inmediatamente\n        this.confirmationService.close();\n\n        // Limpiar todos los toasts anteriores (incluyendo el de \"Creando encuesta...\")\n        this.messageService.clear();\n\n        // Mensaje de éxito detallado\n        this.messageService.add({\n          severity: 'success',\n          summary: '¡Encuesta creada exitosamente!',\n          detail: `La encuesta \"${encuesta.nombre}\" se ha creado correctamente con ${encuesta.preguntas.length} pregunta${encuesta.preguntas.length > 1 ? 's' : ''}`,\n          life: 4000\n        });\n\n        // Construir la URL de redirección\n        const redirectUrl = `/presentacion-enlaces?id-encuesta=${res.id}&codigo-respuesta=${res.codigoRespuesta}&codigo-resultados=${res.codigoResultados}`;\n        console.log('🔗 URL de redirección:', redirectUrl);\n\n        // Pequeño delay para que el usuario vea el mensaje antes de redirigir\n        setTimeout(() => {\n          console.log('🚀 Redirigiendo a:', redirectUrl);\n          this.router.navigate(['/presentacion-enlaces'], {\n            queryParams: {\n              'id-encuesta': res.id,\n              'codigo-respuesta': res.codigoRespuesta,\n              'codigo-resultados': res.codigoResultados\n            }\n          });\n        }, 1500);\n      },\n      error: (err) => {\n        console.error('❌ Error al crear encuesta:', err);\n        console.error('📊 Detalles del error:', {\n          status: err.status,\n          statusText: err.statusText,\n          message: err.message,\n          error: err.error,\n          url: err.url\n        });\n\n        // Cerrar el diálogo de confirmación en caso de error\n        this.confirmationService.close();\n\n        // Mensaje de error detallado\n        let errorDetail = 'Posible problema de conexión. Intentar nuevamente';\n        let errorSummary = 'Error al crear la encuesta';\n\n        if (err.status === 400) {\n          errorDetail = 'Los datos de la encuesta no son válidos';\n          if (err.error && err.error.message) {\n            errorDetail += `: ${err.error.message}`;\n          }\n        } else if (err.status === 500) {\n          errorDetail = 'Error interno del servidor. Intenta más tarde';\n        } else if (err.status === 0) {\n          errorDetail = 'No se pudo conectar con el servidor. Verifica que el backend esté ejecutándose';\n          errorSummary = 'Sin conexión al servidor';\n        } else if (err.status === 404) {\n          errorDetail = 'El endpoint de creación de encuestas no fue encontrado';\n          errorSummary = 'Servicio no encontrado';\n        }\n\n        this.messageService.add({\n          severity: 'error',\n          summary: errorSummary,\n          detail: errorDetail,\n          life: 8000,\n          sticky: true\n        });\n      },\n      complete: () => {\n        // Asegurar que el estado de carga siempre se resetee\n        this.creandoEncuesta.set(false);\n        console.log('🔄 Estado de carga reseteado');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n\n\n\n\n  \n  \n\n  \n    \n      Creá una encuesta\n\n      \n      \n        📝 Instrucciones:\n        1. Ingresa un nombre para tu encuesta\n        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"\n        3. Haz clic en \"Finalizar\" para crear tu encuesta\n      \n    \n      \n        \n        Nombre de la encuesta\n      \n      @if (nombre.invalid && nombre.touched) {\n        Requerido\n      }\n    \n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          \n            {{ pregunta.texto }} ({{\n              getTipoPreguntaPresentacion(pregunta.tipo)\n            }})\n          \n          \n            @for (opcion of pregunta.opciones; track i; let i = $index) {\n              \n                {{ opcion.texto }}\n              \n            }\n          \n          \n            \n          \n        \n      \n    }\n    \n      \n        \n        @if (preguntas.length > 0) {\n          \n        }\n      \n      @if (preguntas.invalid && form.touched) {\n        Debe agregar al menos una pregunta\n      }\n    \n\n    \n    \n      \n        \n        Fecha de Vencimiento (Opcional)\n      \n      \n      \n        Si no especificas una fecha, la encuesta estará disponible indefinidamente\n      \n\n      \n      \n      \n    \n\n    \n      {{ creandoEncuesta() ? 'Creando...' : 'Finalizar' }}\n    \n  \n\n\n\n\n\n\n\n  \n    Selecciona la pregunta que deseas editar:\n\n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          \n            Pregunta {{ idx + 1 }}: {{ pregunta.texto }}\n          \n          \n            Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}\n          \n          @if (pregunta.opciones && pregunta.opciones.length > 0) {\n            \n              Opciones:\n              \n                @for (opcion of pregunta.opciones; track i; let i = $index) {\n                  {{ opcion.texto }}\n                }\n              \n            \n          }\n        \n        \n          \n        \n      \n    }\n\n    @if (preguntas.length === 0) {\n      No hay preguntas disponibles para editar.\n    }\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Creá una encuesta                    📝 Instrucciones:        1. Ingresa un nombre para tu encuesta        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"        3. Haz clic en \"Finalizar\" para crear tu encuesta                                Nombre de la encuesta            @if (nombre.invalid && nombre.touched) {        Requerido      }        @for (pregunta of preguntas.value; track idx; let idx = $index) {                                    {{ pregunta.texto }} ({{              getTipoPreguntaPresentacion(pregunta.tipo)            }})                                @for (opcion of pregunta.opciones; track i; let i = $index) {                              {{ opcion.texto }}                          }                                                            }                          @if (preguntas.length > 0) {                  }            @if (preguntas.invalid && form.touched) {        Debe agregar al menos una pregunta      }                                  Fecha de Vencimiento (Opcional)                          Si no especificas una fecha, la encuesta estará disponible indefinidamente                                      {{ creandoEncuesta() ? \\'Creando...\\' : \\'Finalizar\\' }}            Selecciona la pregunta que deseas editar:    @for (pregunta of preguntas.value; track idx; let idx = $index) {                                    Pregunta {{ idx + 1 }}: {{ pregunta.texto }}                                Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}                    @if (pregunta.opciones && pregunta.opciones.length > 0) {                          Opciones:                              @for (opcion of pregunta.opciones; track i; let i = $index) {                  {{ opcion.texto }}                }                                    }                                            }    @if (preguntas.length === 0) {      No hay preguntas disponibles para editar.    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreacionEncuestaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEncuestaDTO.html":{"url":"interfaces/CreateEncuestaDTO.html","title":"interface - CreateEncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-encuesta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            codigoQR\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enlaceCorto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fechaVencimiento\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoQR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoQR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enlaceCorto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enlaceCorto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaVencimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaVencimiento:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     CreatePreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CreatePreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreatePreguntaDTO } from './create-pregunta.dto';\nimport { EncuestaDTO } from './encuesta.dto';\n\n// Interfaz para crear una nueva encuesta, basada en EncuestaDTO pero solo con la propiedad 'nombre'\nexport interface CreateEncuestaDTO extends Pick {\n  preguntas: CreatePreguntaDTO[]; // Lista de preguntas que tendrá la encuesta al momento de crearla\n  enlaceCorto?: string; // Enlace corto opcional (puede ser generado por el backend)\n  codigoQR?: string; // Código QR opcional (puede ser generado por el backend)\n  fechaVencimiento?: Date; // Fecha de vencimiento opcional\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatePreguntaDTO.html":{"url":"interfaces/CreatePreguntaDTO.html","title":"interface - CreatePreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-pregunta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            opciones\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         CreateOpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CreateOpcionDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateOpcionDTO } from './create-opcion.dto';\nimport { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz para crear una nueva pregunta, basada en PreguntaDTO pero solo con ciertas propiedades\nexport interface CreatePreguntaDTO extends Pick {\n  opciones: CreateOpcionDTO[] // Lista de opciones para la pregunta (si corresponde)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Encuesta.html":{"url":"interfaces/Encuesta.html","title":"interface - Encuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Encuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:         Pregunta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pregunta[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaDTO.html":{"url":"interfaces/EncuestaDTO.html","title":"interface - EncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/encuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            codigoRespuesta\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoRespuesta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoRespuesta:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     PreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz que representa una encuesta completa\nexport interface EncuestaDTO {\n  id: number; // Identificador único de la encuesta\n\n  nombre: string; // Nombre o título de la encuesta\n\n  preguntas: PreguntaDTO[]; // Lista de preguntas que contiene la encuesta\n\n  codigoRespuesta: string; // Código utilizado para responder la encuesta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaResponse.html":{"url":"interfaces/EncuestaResponse.html","title":"interface - EncuestaResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Encuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Encuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncuestasService.html":{"url":"injectables/EncuestasService.html","title":"injectable - EncuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarEstadoEncuesta\n                            \n                            \n                                crearEncuesta\n                            \n                            \n                                traerEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \nactualizarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta(dto: CreateEncuestaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traerEncuesta\n                        \n                    \n                \n            \n            \n                \ntraerEncuesta(idEncuesta: number, codigo: string, tipo: CodigoTipoEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tipo\n                                            \n                                                            CodigoTipoEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/encuestas.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { CreateEncuestaDTO } from '../interfaces/create-encuesta.dto';\nimport { Observable } from 'rxjs';\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\nimport { EncuestaDTO } from '../interfaces/encuesta.dto';\n\n@Injectable({ providedIn: 'root' }) // Hace que el servicio esté disponible en toda la app\nexport class EncuestasService {\n  private httpClient = inject(HttpClient); // Inyección del servicio HttpClient para hacer peticiones HTTP\n\n  // Método para crear una nueva encuesta\n  crearEncuesta(dto: CreateEncuestaDTO): Observable {\n    // Realiza una petición POST al backend para crear la encuesta\n    return this.httpClient.post('/api/v1/encuestas', dto);\n  }\n\n  // Método para obtener una encuesta por ID, código y tipo de código\n  traerEncuesta(\n    idEncuesta: number,\n    codigo: string,\n    tipo: CodigoTipoEnum,\n  ): Observable {\n    // Realiza una petición GET al backend para traer los datos de la encuesta\n    return this.httpClient.get(\n      '/api/v1/encuestas/' + idEncuesta + '?codigo=' + codigo + '&tipo=' + tipo,\n    );\n  }\n\n  // Método para habilitar/deshabilitar una encuesta\n  actualizarEstadoEncuesta(id:number, habilitada: boolean){\n    return this.httpClient.patch(\n      'api/v1/encuestas/' + id +'/habilitar',\n      {habilitada}, // Enviamos el estado de habilitación como parte del cuerpo de la petición\n    )\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionOpcionDialogComponent.html":{"url":"components/GestionOpcionDialogComponent.html","title":"component - GestionOpcionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionOpcionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-opcion-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            ReactiveFormsModule\n                            FloatLabelModule\n                                TextoErrorComponent\n                            InputTextModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-opcion-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-opcion-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agregar\n                            \n                            \n                                cerrar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarOpcion\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, effect, inject, input, model, output, signal } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DialogModule } from 'primeng/dialog';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\n\n// Componente para gestionar el diálogo de agregar una opción a una pregunta\n@Component({\n  selector: 'app-gestion-opcion-dialog',\n  imports: [\n    DialogModule,\n    ReactiveFormsModule,\n    FloatLabelModule,\n    TextoErrorComponent,\n    InputTextModule,\n    ButtonModule,\n  ],\n  templateUrl: './gestion-opcion-dialog.component.html',\n  styleUrl: './gestion-opcion-dialog.component.css',\n})\nexport class GestionOpcionDialogComponent {\n  visible = model.required(); // Controla la visibilidad del diálogo\n\n  agregarOpcion = output(); // Evento de salida para agregar una opción\n\n  form: FormGroup; // Formulario reactivo para la opción\n\n  private messageService: MessageService = inject(MessageService); // Servicio para mostrar mensajes\n\n  constructor() {\n    // Inicializa el formulario con un campo de texto requerido\n    this.form = new FormGroup({\n      texto: new FormControl('', Validators.required),\n    });\n\n    // Efecto que resetea el formulario cada vez que el diálogo se hace visible\n    effect(() => {\n      if (this.visible()) {\n        this.form.reset();\n      }\n    });\n  }\n\n  // Getter para el control de texto del formulario\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Método para agregar la opción si el formulario es válido\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const opcion: string = this.form.get('texto')?.value;\n    this.agregarOpcion.emit(opcion); // Emite la opción al componente padre\n    this.cerrar(); // Cierra el diálogo\n  }\n\n  // Método para cerrar el diálogo\n  cerrar() {\n    this.visible.set(false);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la opción\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n        Finalizar\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la opción        @if (texto.invalid && texto.touched) {          Requerido        }                    Finalizar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionOpcionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionPreguntaDialogComponent.html":{"url":"components/GestionPreguntaDialogComponent.html","title":"component - GestionPreguntaDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionPreguntaDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-pregunta-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            DropdownModule\n                            ReactiveFormsModule\n                            InputTextModule\n                            FloatLabelModule\n                            ButtonModule\n                                TextoErrorComponent\n                                SeccionComponent\n                                GestionOpcionDialogComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-pregunta-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-pregunta-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                dialogGestionOpcionVisible\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                opcionSeleccionada\n                            \n                            \n                                preguntaAEditar\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirAgregarOpcion\n                            \n                            \n                                agregar\n                            \n                            \n                                agregarOpcion\n                            \n                            \n                                cargarPreguntaParaEditar\n                            \n                            \n                                cerrar\n                            \n                            \n                                confirmarEliminarOpcion\n                            \n                            \n                                eliminarOpcion\n                            \n                            \n                                esMultipleChoice\n                            \n                            \n                                getTiposPreguntaPresentacion\n                            \n                            \n                                reset\n                            \n                            \n                                resetearOpciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                                \n                                    tipo\n                                \n                                \n                                    opciones\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarPregunta\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirAgregarOpcion\n                        \n                    \n                \n            \n            \n                \nabrirAgregarOpcion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n            \n                \nagregarOpcion(opcion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPreguntaParaEditar\n                        \n                    \n                \n            \n            \n                \ncargarPreguntaParaEditar(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarOpcion\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \neliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTiposPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTiposPreguntaPresentacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetearOpciones\n                        \n                    \n                \n            \n            \n                \nresetearOpciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionOpcionVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opcionSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaAEditar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tipo\n                    \n                \n\n                \n                    \n                        gettipo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:142\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        opciones\n                    \n                \n\n                \n                    \n                        getopciones()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:147\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, model, output, signal } from '@angular/core';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { ButtonModule } from 'primeng/button';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { effect } from '@angular/core';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { GestionOpcionDialogComponent } from '../gestion-opcion-dialog/gestion-opcion-dialog.component';\nimport { CreateOpcionDTO } from '../../interfaces/create-opcion.dto';\nimport { opcionesNoVacias } from '../../validators/opciones-no-vacias.validator';\n\n// Componente para gestionar el diálogo de creación/edición de preguntas\n@Component({\n  selector: 'app-gestion-pregunta-dialog',\n  imports: [\n    DialogModule,\n    DropdownModule,\n    ReactiveFormsModule,\n    InputTextModule,\n    FloatLabelModule,\n    ButtonModule,\n    TextoErrorComponent,\n    SeccionComponent,\n    GestionOpcionDialogComponent,\n  ],\n  templateUrl: './gestion-pregunta-dialog.component.html',\n  styleUrl: './gestion-pregunta-dialog.component.css',\n})\nexport class GestionPreguntaDialogComponent {\n  // Formulario reactivo para la pregunta\n  readonly form: FormGroup;\n\n  // Controla la visibilidad del diálogo\n  visible = model.required();\n\n  // Pregunta a editar (opcional)\n  preguntaAEditar = model(null);\n\n  // Controla la visibilidad del diálogo para agregar opciones\n  dialogGestionOpcionVisible = signal(false);\n\n  // Evento de salida para agregar una pregunta\n  agregarPregunta = output();\n\n  // Opción seleccionada temporalmente para agregar\n  opcionSeleccionada = signal | null>(null);\n\n  // Servicios de mensajes y confirmación de PrimeNG\n  private messageService: MessageService = inject(MessageService);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup(\n      {\n        texto: new FormControl('', Validators.required), // Texto de la pregunta\n        tipo: new FormControl(\n          null,\n          Validators.required,\n        ), // Tipo de pregunta\n        opciones: new FormArray>>(\n          [],\n        ), // Opciones de respuesta (si corresponde)\n      },\n      { validators: [opcionesNoVacias] }, // Validador personalizado para opciones\n    );\n\n    // Efecto que resetea el formulario cuando el diálogo se hace visible\n    effect(() => {\n      if (this.visible()) {\n        const preguntaAEditar = this.preguntaAEditar();\n        if (preguntaAEditar) {\n          this.cargarPreguntaParaEditar(preguntaAEditar);\n        } else {\n          this.reset();\n        }\n      }\n    });\n  }\n\n  // Resetea el formulario y las opciones\n  reset() {\n    this.form.reset();\n    this.resetearOpciones();\n  }\n\n  // Elimina todas las opciones del formulario\n  resetearOpciones() {\n    this.opciones.clear();\n  }\n\n  // Carga los datos de una pregunta existente para editar\n  cargarPreguntaParaEditar(pregunta: PreguntaDTO) {\n    // Resetear primero\n    this.reset();\n\n    // Cargar datos básicos\n    this.texto.setValue(pregunta.texto);\n    this.tipo.setValue(pregunta.tipo);\n\n    // Cargar opciones si existen\n    if (pregunta.opciones && pregunta.opciones.length > 0) {\n      pregunta.opciones.forEach(opcion => {\n        this.opciones.push(\n          new FormControl>({\n            texto: opcion.texto,\n          }) as FormControl>\n        );\n      });\n    }\n  }\n\n  // Devuelve los tipos de pregunta disponibles para el selector\n  getTiposPreguntaPresentacion(): {\n    tipo: TiposRespuestaEnum;\n    presentacion: string;\n  }[] {\n    return tiposPreguntaPresentacion;\n  }\n\n  // Getter para el control de texto\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Getter para el control de tipo\n  get tipo(): FormControl {\n    return this.form.get('tipo') as FormControl;\n  }\n\n  // Getter para el FormArray de opciones\n  get opciones(): FormArray>> {\n    return this.form.get('opciones') as FormArray>\n    >;\n  }\n\n  // Agrega la pregunta si el formulario es válido, si no muestra errores\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const pregunta: PreguntaDTO = this.form.value;\n\n    if (pregunta.tipo === TiposRespuestaEnum.VERDADERO_FALSO) {\n    pregunta.opciones = [\n          { numero: 1, texto: 'Verdadero' },\n          { numero: 2, texto: 'Falso' },\n    ];\n    }\n\n    this.agregarPregunta.emit(pregunta); // Emite la pregunta al componente padre\n    this.cerrar();\n  }\n\n  // Cierra el diálogo\n  cerrar() {\n    this.visible.set(false);\n  }\n\n  // Determina si el tipo de pregunta es de opción múltiple o simple\n  esMultipleChoice(tipo: TiposRespuestaEnum) {\n    return [\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    ].includes(tipo);\n  }\n\n  // Abre el diálogo para agregar una nueva opción\n  abrirAgregarOpcion() {\n    this.dialogGestionOpcionVisible.set(true);\n  }\n\n  // Agrega una nueva opción al FormArray de opciones\n  agregarOpcion(opcion: string) {\n    this.opciones.push(\n      new FormControl>({\n        texto: opcion,\n      }) as FormControl>,\n    );\n  }\n\n  // Elimina una opción por índice\n  eliminarOpcion(index: number) {\n    this.opciones.removeAt(index);\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una opción\n  confirmarEliminarOpcion(index: number) {\n    this.confirmationService.confirm({\n      message: 'Confirmar eliminación?',\n      header: 'Confirmación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Confirmar',\n      },\n      accept: () => {\n        this.eliminarOpcion(index);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la pregunta\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n      @if (tipo.invalid && tipo.touched) {\n        Requerido\n      }\n      @if (tipo.value && esMultipleChoice(tipo.value)) {\n        \n          Opciones\n          @if (opciones.value.length > 0) {\n            \n              @for (opcion of opciones.value; track $index; let idx = $index) {\n                \n                  \n                    {{ opcion.texto }}\n                    \n                      \n                    \n                  \n                \n              }\n            \n          } @else {\n            Aún no hay opciones cargadas\n          }\n          \n        \n        @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {\n          Debe ingresar opciones\n        }\n      }\n      \n        \n          {{ preguntaAEditar() ? 'Actualizar' : 'Agregar' }}\n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la pregunta        @if (texto.invalid && texto.touched) {          Requerido        }                  @if (tipo.invalid && tipo.touched) {        Requerido      }      @if (tipo.value && esMultipleChoice(tipo.value)) {                  Opciones          @if (opciones.value.length > 0) {                          @for (opcion of opciones.value; track $index; let idx = $index) {                                                      {{ opcion.texto }}                                                                                                              }                      } @else {            Aún no hay opciones cargadas          }                          @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {          Debe ingresar opciones        }      }                        {{ preguntaAEditar() ? \\'Actualizar\\' : \\'Agregar\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionPreguntaDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n}\n\n    \n\n    \n        \n  \n    Sistema de Encuestas\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sistema de Encuestas          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionDTO.html":{"url":"interfaces/OpcionDTO.html","title":"interface - OpcionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/opcion.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpcionDTO {\n\n  texto: string;   // Texto que se muestra como opción al usuario\n\n  numero: number;  // Número de orden de la opción dentro de la pregunta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionRespuesta.html":{"url":"interfaces/OpcionRespuesta.html","title":"interface - OpcionRespuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionRespuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pregunta.html":{"url":"interfaces/Pregunta.html","title":"interface - Pregunta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            obligatoria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        obligatoria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        obligatoria:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionRespuesta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionRespuesta[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PreguntaDTO.html":{"url":"interfaces/PreguntaDTO.html","title":"interface - PreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/pregunta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionDTO[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TiposRespuestaEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TiposRespuestaEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TiposRespuestaEnum } from '../enums/tipos-pregunta.enum';\nimport { OpcionDTO } from './opcion.dto';\n\n// Interfaz que representa una pregunta de la encuesta\nexport interface PreguntaDTO {\n  id: number; // Identificador único de la pregunta\n\n  numero: number; // Número de orden de la pregunta en la encuesta\n\n  texto: string; // Texto o enunciado de la pregunta\n\n  tipo: TiposRespuestaEnum; // Tipo de respuesta esperada (abierta, opción, etc.)\n\n  opciones?: OpcionDTO[]; // Opciones disponibles (solo si la pregunta es de tipo opción)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDTO.html":{"url":"interfaces/RegistrarRespuestasDTO.html","title":"interface - RegistrarRespuestasDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDto.html":{"url":"interfaces/RegistrarRespuestasDto.html","title":"interface - RegistrarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDTO.html":{"url":"interfaces/RespuestaPreguntaDTO.html","title":"interface - RespuestaPreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDto.html":{"url":"interfaces/RespuestaPreguntaDto.html","title":"interface - RespuestaPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaUsuario.html":{"url":"interfaces/RespuestaUsuario.html","title":"interface - RespuestaUsuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaUsuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numeroPregunta\n                                        \n                                \n                                \n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numeroPregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numeroPregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RespuestasService.html":{"url":"injectables/RespuestasService.html","title":"injectable - RespuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RespuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportarResultadosCSV\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                obtenerEncuestaParaParticipacion\n                            \n                            \n                                obtenerResultadosEncuesta\n                            \n                            \n                                registrarRespuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportarResultadosCSV\n                        \n                    \n                \n            \n            \n                \nexportarResultadosCSV(idEncuesta: number, codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerEncuestaParaParticipacion\n                        \n                    \n                \n            \n            \n                \nobtenerEncuestaParaParticipacion(id: number, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerResultadosEncuesta\n                        \n                    \n                \n            \n            \n                \nobtenerResultadosEncuesta(codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \nregistrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/respuestas.service.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeccionComponent.html":{"url":"components/SeccionComponent.html","title":"component - SeccionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeccionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/seccion/seccion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seccion\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./seccion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./seccion.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftMargin\n                            \n                            \n                                maxWidth\n                            \n                            \n                                minWidth\n                            \n                            \n                                rightMargin\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('70vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('40vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-seccion',\n  imports: [],\n  templateUrl: './seccion.component.html',\n  styleUrl: './seccion.component.css'\n})\nexport class SeccionComponent {\n  minWidth = input('40vw');\n  maxWidth = input('70vw');\n  leftMargin = input('15vw');\n  rightMargin = input('15vw');\n\n  style = computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  });\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeccionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextoErrorComponent.html":{"url":"components/TextoErrorComponent.html","title":"component - TextoErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextoErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/texto-error/texto-error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-texto-error\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./texto-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./texto-error.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-texto-error',\n  imports: [],\n  templateUrl: './texto-error.component.html',\n  styleUrl: './texto-error.component.css'\n})\nexport class TextoErrorComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextoErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizarResultadosComponent.html":{"url":"components/VisualizarResultadosComponent.html","title":"component - VisualizarResultadosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizarResultadosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/resultados/visualizar-resultados.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-visualizar-resultados\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            CardModule\n                            ProgressSpinnerModule\n                            ToastModule\n                \n            \n\n            \n                styleUrls\n                ./visualizar-resultados.component.css\n            \n\n\n\n            \n                templateUrl\n                ./visualizar-resultados.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cargando\n                            \n                            \n                                codigoResultados\n                            \n                            \n                                    Private\n                                encuestasService\n                            \n                            \n                                error\n                            \n                            \n                                estadoEncuesta\n                            \n                            \n                                exportandoCSV\n                            \n                            \n                                idEncuesta\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                    Private\n                                respuestasService\n                            \n                            \n                                resultados\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                TiposRespuestaEnum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarEstadoEncuesta\n                            \n                            \n                                    Private\n                                cargarResultados\n                            \n                            \n                                exportarCSV\n                            \n                            \n                                getChartData\n                            \n                            \n                                getChartOptions\n                            \n                            \n                                getPorcentajeOpcion\n                            \n                            \n                                getTotalRespuestasOpcion\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \ncambiarEstadoEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cargarResultados\n                        \n                    \n                \n            \n            \n                \n                        \n                    cargarResultados()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportarCSV\n                        \n                    \n                \n            \n            \n                \nexportarCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartData\n                        \n                    \n                \n            \n            \n                \ngetChartData(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { labels: any; datasets: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartOptions\n                        \n                    \n                \n            \n            \n                \ngetChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { responsive: boolean; maintainAspectRatio: boolean; plugins: { legend: { position: string; labels: { usePointStyle: boolean; padding: number; }; }; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPorcentajeOpcion\n                        \n                    \n                \n            \n            \n                \ngetPorcentajeOpcion(opcion: any, totalRespuestas: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRespuestas\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalRespuestasOpcion\n                        \n                    \n                \n            \n            \n                \ngetTotalRespuestasOpcion(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cargando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EncuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estadoEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportandoCSV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        respuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RespuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiposRespuestaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TiposRespuestaEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n// import { ChartModule } from 'primeng/chart';\nimport { RespuestasService } from '../../services/respuestas.service';\nimport { TiposRespuestaEnum } from '../../enums/tipos-pregunta.enum';\nimport { EncuestasService } from '../../services/encuestas.service';\n\n@Component({\n  selector: 'app-visualizar-resultados',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    CardModule,\n    ProgressSpinnerModule,\n    ToastModule\n    // ChartModule\n  ],\n  templateUrl: './visualizar-resultados.component.html',\n  styleUrls: ['./visualizar-resultados.component.css'],\n  providers: [MessageService]\n})\nexport class VisualizarResultadosComponent implements OnInit {\n  // Servicios inyectados\n  private route = inject(ActivatedRoute);\n  public router = inject(Router);\n  private respuestasService = inject(RespuestasService);\n  private messageService = inject(MessageService);\n  private encuestasService = inject(EncuestasService);\n\n  // Variables de estado\n  resultados: any = null;\n  codigoResultados = '';\n  cargando = true;\n  error = '';\n  exportandoCSV = false;\n  estadoEncuesta: boolean | null = null;\n  idEncuesta: number | null = null;\n\n  // Enum para usar en el template\n  TiposRespuestaEnum = TiposRespuestaEnum;\n\n  ngOnInit() {\n    console.log('VisualizarResultadosComponent ngOnInit ejecutado');\n\n    // Obtener el código de resultados de la URL\n    this.codigoResultados = this.route.snapshot.paramMap.get('codigoResultados') || '';\n    console.log('Código de resultados obtenido de la URL:', this.codigoResultados);\n\n    if (this.codigoResultados) {\n      console.log('Iniciando carga de resultados...');\n      this.cargarResultados();\n    } else {\n      console.log('Código de resultados no válido');\n      this.error = 'Código de resultados no válido';\n      this.cargando = false;\n    }\n  }\n\n  private cargarResultados() {\n    this.cargando = true;\n    this.error = '';\n\n    this.respuestasService.obtenerResultadosEncuesta(this.codigoResultados)\n      .subscribe({\n        next: (response) => {\n          console.log('Resultados cargados:', response);\n          this.resultados = response.data;\n          // Asigna el estado e id de la encuesta si existen en la respuesta\n          this.estadoEncuesta = this.resultados?.habilitada ?? null;\n          this.idEncuesta = this.resultados?.id ?? null;\n          this.cargando = false;\n        },\n        error: (error) => {\n          console.error('Error al cargar resultados:', error);\n          this.error = 'Error al cargar los resultados. Verifique que el enlace sea válido.';\n          this.cargando = false;\n        }\n      });\n  }\n\n  // Método para obtener el total de respuestas de una pregunta de opciones\n  getTotalRespuestasOpcion(pregunta: any): number {\n    if (!pregunta.opciones) return 0;\n    return pregunta.opciones.reduce((total: number, opcion: any) => total + (opcion.cantidad_respuestas || 0), 0);\n  }\n\n  // Método para calcular el porcentaje de una opción\n  getPorcentajeOpcion(opcion: any, totalRespuestas: number): number {\n    if (totalRespuestas === 0) return 0;\n    return Math.round((opcion.cantidad_respuestas / totalRespuestas) * 100);\n  }\n\n  // Método para generar datos del gráfico para preguntas de opciones\n  getChartData(pregunta: any) {\n    if (!pregunta.opciones || pregunta.opciones.length === 0) return null;\n\n    const labels = pregunta.opciones.map((opcion: any) => opcion.texto);\n    const data = pregunta.opciones.map((opcion: any) => opcion.cantidad_respuestas || 0);\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: [\n            '#667eea',\n            '#764ba2',\n            '#f093fb',\n            '#f5576c',\n            '#4facfe',\n            '#00f2fe',\n            '#43e97b',\n            '#38f9d7'\n          ],\n          borderWidth: 2,\n          borderColor: '#fff'\n        }\n      ]\n    };\n  }\n\n  // Opciones del gráfico\n  getChartOptions() {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 20\n          }\n        }\n      }\n    };\n  }\n\n  // Método para exportar resultados a CSV\n  exportarCSV() {\n    if (!this.resultados || !this.resultados.id) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No hay datos para exportar'\n      });\n      return;\n    }\n\n    this.exportandoCSV = true;\n\n    this.respuestasService.exportarResultadosCSV(this.resultados.id, this.codigoResultados)\n      .subscribe({\n        next: (blob) => {\n          // Crear un enlace temporal para descargar el archivo\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `resultados_encuesta_${this.resultados.id}.csv`;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Exportación exitosa',\n            detail: 'Los resultados se han descargado correctamente'\n          });\n\n          this.exportandoCSV = false;\n        },\n        error: (error) => {\n          console.error('Error al exportar CSV:', error);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error al exportar',\n            detail: 'No se pudo descargar el archivo CSV. Intenta nuevamente.'\n          });\n          this.exportandoCSV = false;\n        }\n      });\n  }\n\n  // Método para habilitar/deshabilitar una encuesta\n  cambiarEstadoEncuesta() {\n    if (this.idEncuesta == null || this.estadoEncuesta == null) return;\n    this.encuestasService.actualizarEstadoEncuesta(this.idEncuesta, !this.estadoEncuesta)\n      .subscribe({\n        next: () => {\n          this.estadoEncuesta = !this.estadoEncuesta;\n          this.messageService.add({\n            severity: 'success',\n            summary: `Encuesta ${this.estadoEncuesta ? 'habilitada' : 'deshabilitada'}`\n          });\n        },\n        error: () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'No se pudo cambiar el estado de la encuesta'\n          });\n        }\n      });\n  }\n}\n    \n\n    \n        \n  \n\n  \n  \n    \n    Cargando resultados...\n  \n\n  \n  \n    \n      Error al cargar los resultados\n      {{ error }}\n      \n      \n    \n  \n\n  \n  \n    \n    \n      📊 Resultados de la Encuesta\n      {{ resultados.nombre }}\n      \n        Aquí puedes ver todas las respuestas recopiladas para esta encuesta.\n      \n    \n\n    \n    \n      \n        \n          \n            \n              {{ pregunta.numero }}\n              {{ pregunta.tipo }}\n            \n          \n\n          \n            {{ pregunta.texto }}\n          \n\n          \n            \n            \n              Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})\n               0; else noRespuestasAbiertas\">\n                \n                  {{ respuesta }}\n                \n              \n              \n                No hay respuestas para esta pregunta aún.\n              \n            \n\n            \n            \n              \n                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)\n\n                 0; else noRespuestasOpciones\">\n                  \n                  \n                    \n                      \n                        {{ opcion.texto }}\n                        {{ opcion.cantidad_respuestas || 0 }} respuestas\n                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%\n                      \n                      \n                        \n                        \n                      \n                    \n                  \n                \n\n                \n                  No hay respuestas para esta pregunta aún.\n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n      \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./visualizar-resultados.component.css\n                \n                /* Contenedor principal */\n.resultados-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 2rem;\n}\n\n/* Estado de carga */\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  text-align: center;\n}\n\n.loading-spinner {\n  margin-bottom: 1rem;\n}\n\n.loading-container h3 {\n  color: white;\n  font-size: 1.5rem;\n  margin: 0;\n}\n\n/* Estado de error */\n.error-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  padding: 2rem;\n}\n\n.error-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 3rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  max-width: 500px;\n  width: 100%;\n}\n\n.error-card h2 {\n  color: #e74c3c;\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n}\n\n.error-card p {\n  color: #666;\n  font-size: 1.1rem;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n}\n\n/* Contenido de los resultados */\n.resultados-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Encabezado de los resultados */\n.resultados-header {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.resultados-header h1 {\n  color: #333;\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.resultados-header h2 {\n  color: #555;\n  font-size: 1.8rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.resultados-descripcion {\n  color: #666;\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin: 0;\n}\n\n/* Preguntas y resultados */\n.preguntas-resultados {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.pregunta-resultado-container {\n  margin-bottom: 1.5rem;\n}\n\n/* Tarjeta de pregunta resultado */\n::ng-deep .pregunta-resultado-card .p-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  border: none;\n  transition: all 0.3s ease;\n}\n\n::ng-deep .pregunta-resultado-card .p-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);\n}\n\n::ng-deep .pregunta-resultado-card .p-card-body {\n  padding: 2rem;\n}\n\n/* Encabezado de pregunta resultado */\n.pregunta-resultado-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  padding: 1rem 2rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border-radius: 15px 15px 0 0;\n}\n\n.pregunta-numero {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n\n.pregunta-tipo {\n  background: rgba(255, 255, 255, 0.2);\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: capitalize;\n}\n\n/* Título de pregunta */\n.pregunta-titulo {\n  color: #333;\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n/* Contenido de resultados */\n.pregunta-resultados-content {\n  margin-top: 1rem;\n}\n\n/* Respuestas abiertas */\n.respuestas-abiertas h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.respuesta-abierta-item {\n  background: #f8f9fa;\n  border-left: 4px solid #667eea;\n  padding: 1rem;\n  margin-bottom: 0.8rem;\n  border-radius: 0 8px 8px 0;\n}\n\n.respuesta-abierta-item p {\n  margin: 0;\n  color: #333;\n  line-height: 1.5;\n}\n\n/* Respuestas de opciones */\n.respuestas-opciones h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.opciones-estadisticas {\n  margin-bottom: 2rem;\n}\n\n.opcion-estadistica {\n  margin-bottom: 1rem;\n}\n\n.opcion-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.opcion-texto {\n  font-weight: 600;\n  color: #333;\n  flex: 1;\n}\n\n.opcion-cantidad {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.opcion-porcentaje {\n  color: #667eea;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.opcion-barra {\n  background: #e9ecef;\n  height: 8px;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.opcion-progreso {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  height: 100%;\n  border-radius: 4px;\n  transition: width 0.3s ease;\n}\n\n/* Gráfico */\n.grafico-container {\n  margin-top: 2rem;\n  text-align: center;\n}\n\n.grafico-container h5 {\n  color: #667eea;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n::ng-deep .resultado-chart {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n/* Sin respuestas */\n.no-respuestas {\n  color: #999;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  margin: 1rem 0;\n}\n\n/* Acciones */\n.acciones-container {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 3rem;\n  padding: 2rem 0;\n  flex-wrap: wrap;\n}\n\n::ng-deep .accion-button {\n  background: linear-gradient(135deg, #667eea, #764ba2) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3) !important;\n}\n\n::ng-deep .accion-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4) !important;\n}\n\n/* Botón CSV específico */\n::ng-deep .csv-button {\n  background: linear-gradient(135deg, #28a745, #20c997) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3) !important;\n}\n\n::ng-deep .csv-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(40, 167, 69, 0.4) !important;\n  background: linear-gradient(135deg, #20c997, #28a745) !important;\n}\n\n::ng-deep .csv-button:disabled {\n  opacity: 0.6 !important;\n  transform: none !important;\n  cursor: not-allowed !important;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .resultados-container {\n    padding: 1rem;\n  }\n\n  .resultados-header {\n    padding: 1.5rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 2rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.5rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1.5rem;\n  }\n\n  .pregunta-resultado-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.2rem;\n  }\n\n  .opcion-info {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 480px) {\n  .resultados-container {\n    padding: 0.5rem;\n  }\n\n  .resultados-header {\n    padding: 1rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 1.8rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.3rem;\n  }\n\n  .resultados-descripcion {\n    font-size: 1rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.1rem;\n  }\n\n  .pregunta-tipo {\n    font-size: 0.7rem;\n    padding: 0.2rem 0.6rem;\n  }\n\n  .respuesta-abierta-item {\n    padding: 0.8rem;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 250px;\n  }\n\n  ::ng-deep .accion-button {\n    padding: 0.8rem 1.5rem !important;\n    font-size: 1rem !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Cargando resultados...                Error al cargar los resultados      {{ error }}                                    📊 Resultados de la Encuesta      {{ resultados.nombre }}              Aquí puedes ver todas las respuestas recopiladas para esta encuesta.                                                                    {{ pregunta.numero }}              {{ pregunta.tipo }}                                            {{ pregunta.texto }}                                                          Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})               0; else noRespuestasAbiertas\">                                  {{ respuesta }}                                                            No hay respuestas para esta pregunta aún.                                                                                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)                 0; else noRespuestasOpciones\">                                                                                                      {{ opcion.texto }}                        {{ opcion.cantidad_respuestas || 0 }} respuestas                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%                                                                                                                                                                                                          No hay respuestas para esta pregunta aún.                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizarResultadosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n            \n            component\n            CreacionEncuestaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/enlaces/presentacion-enlaces.component.ts\n            \n            component\n            PresentacionEnlacesComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n            \n            component\n            GestionOpcionDialogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n            \n            component\n            GestionPreguntaDialogComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/respuestas/responder-encuesta.component.ts\n            \n            component\n            ResponderEncuestaComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/components/resultados/visualizar-resultados.component.ts\n            \n            component\n            VisualizarResultadosComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/seccion/seccion.component.ts\n            \n            component\n            SeccionComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/texto-error/texto-error.component.ts\n            \n            component\n            TextoErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/enums/tipos-pregunta.enum.ts\n            \n            variable\n            tiposPreguntaPresentacion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-encuesta.dto.ts\n            \n            interface\n            CreateEncuestaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/interfaces/create-opcion.dto.ts\n            \n            type alias\n            CreateOpcionDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-pregunta.dto.ts\n            \n            interface\n            CreatePreguntaDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/encuesta.dto.ts\n            \n            interface\n            EncuestaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/opcion.dto.ts\n            \n            interface\n            OpcionDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/pregunta.dto.ts\n            \n            interface\n            PreguntaDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RegistrarRespuestasDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RespuestaPreguntaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/encuestas.service.ts\n            \n            injectable\n            EncuestasService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            injectable\n            RespuestasService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            Encuesta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            EncuestaResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            OpcionRespuesta\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            Pregunta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RegistrarRespuestasDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RespuestaPreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RespuestaUsuario\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/services/respuestas.service.ts\n            \n            type alias\n            TipoRespuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            esMultipleChoice\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            tieneItems\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            variable\n            opcionesNoVacias\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ~19.2.16\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @primeng/themes : ^19.1.2\n        \n            angularx-qrcode : ^19.0.0\n        \n            chart.js : ^4.4.9\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^19.1.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodigoTipoEnum   (src/.../codigo-tipo.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/codigo-tipo.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CodigoTipoEnum\n                    \n                \n                        \n                            \n                                 RESULTADOS\n                            \n                        \n                        \n                            \n                                Value : RESULTADOS\n                            \n                        \n                        \n                            \n                                 RESPUESTA\n                            \n                        \n                        \n                            \n                                Value : RESPUESTA\n                            \n                        \n            \n        \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                 VERDADERO_FALSO\n                            \n                        \n                        \n                            \n                                Value : VERDADERO_FALSO\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            esMultipleChoice   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tieneItems   (src/.../opciones-no-vacias.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tieneItems\n                        \n                    \n                \n            \n            \n                \ntieneItems(array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated using Angular CLI version 19.2.11.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateOpcionDTO   (src/.../create-opcion.dto.ts)\n                        \n                        \n                            TipoRespuesta   (src/.../respuestas.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/create-opcion.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateOpcionDTO\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/app/services/respuestas.service.ts\n    \n    \n        \n            \n                \n                    \n                    TipoRespuesta\n                \n            \n            \n                \n                        \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            opcionesNoVacias   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tiposPreguntaPresentacion   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), // Optimiza la detección de cambios en Angular\n    provideRouter(routes), // Proveedor de rutas definidas en app.routes.ts\n    provideAnimationsAsync(), // Habilita animaciones de Angular de forma asíncrona\n    providePrimeNG({\n      theme: {\n        preset: Aura, // Aplica el tema Aura de PrimeNG\n      },\n    }),\n    provideHttpClient() // Proveedor para realizar peticiones HTTP\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        opcionesNoVacias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  formGroup: AbstractControl,\n): ValidationErrors | null => {\n  const group = formGroup as FormGroup;\n  const controlTipo = group.get('tipo'); // Control que indica el tipo de pregunta\n  const controlOpciones = group.get('opciones'); // Control que contiene las opciones\n\n  // Si no hay tipo o no hay opciones, no se valida (no hay error)\n  if (!controlTipo?.value || !controlOpciones?.value) {\n    return null;\n  }\n\n  // Si es una pregunta de opción y no tiene opciones, retorna error\n  if (\n    esMultipleChoice(controlTipo.value) &&\n    !tieneItems(controlOpciones.value)\n  ) {\n    return { opcionesRequeridas: true }; // Error: se requieren opciones\n  }\n\n  return null; // No hay errores de validación\n}\n                    \n                \n\n\n        \n    \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tiposPreguntaPresentacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { tipo: TiposRespuestaEnum.ABIERTA, presentacion: 'Abierta' },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    presentacion: 'Selección Simple',\n  },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n    presentacion: 'Selección Múltiple',\n  },\n  {\n    tipo: TiposRespuestaEnum.VERDADERO_FALSO,\n    presentacion: 'Verdadero o Falso',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
