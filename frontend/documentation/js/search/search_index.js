var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.516,1,1.126]],["body/components/AppComponent.html",[0,0.669,1,1.617,2,1.222,3,0.253,4,0.225,5,1.694,6,0.953,7,0.953,8,0.225,9,2.039,10,0.953,11,2.656,12,3.172,13,2.564,14,2.458,15,2.263,16,1.419,17,1.419,18,4.312,19,4.312,20,3.624,21,3.624,22,1.419,23,3.61,24,1.531,25,3.61,26,0.225,27,0.464,28,4.312,29,1.26,30,3.513,31,4.312,32,1.797,33,4.775,34,4.775,35,4.775,36,4.775,37,4.775,38,3.61,39,4.775,40,2.834,41,2.758,42,3.61,43,2.426,44,2.543,45,0.029,46,2.218,47,2.426,48,2.426,49,2.426,50,2.426,51,3.61,52,0.94,53,2.426,54,1.208,55,1.356,56,0.501,57,0.763,58,2.039,59,2.147,60,2.426,61,1.694,62,1.694,63,2.426,64,2.656,65,4.499,66,0.824,67,3.517,68,2.426,69,0.806,70,0.709,71,0.447,72,4.312,73,1.208,74,2.039,75,2.426,76,1.443,77,1.785,78,2.426,79,1.029,80,1.222,81,2.426,82,2.426,83,0.763,84,2.426,85,2.84,86,2.426,87,1.086,88,3.172,89,1.785,90,1.546,91,3.61,92,2.039,93,1.951,94,1.978,95,1.876,96,1.031,97,2.426,98,2.426,99,2.426,100,5.105,101,3.035,102,2.426,103,2.426,104,1.595,105,1.595,106,1.797,107,2.426,108,2.426,109,0.253,110,0.485,111,1.785,112,2.039,113,3.61,114,2.426,115,2.426,116,2.039,117,1.785,118,2.426,119,2.426,120,2.426,121,1.029,122,2.426,123,4.775,124,2.426,125,1.743,126,4.499,127,2.664,128,4.292,129,5.105,130,5.105,131,1.348,132,2.039,133,1.419,134,2.039,135,3.035,136,2.426,137,1.316,138,0.865,139,2.426,140,0.721,141,2.426,142,2.426,143,1.785,144,1.595,145,2.426,146,2.426,147,2.426,148,2.426,149,2.426,150,0.709,151,2.039,152,2.426,153,2.591,154,2.426,155,3.61,156,3.035,157,3.61,158,3.61,159,3.61,160,2.147,161,3.61,162,3.61,163,3.61,164,3.61,165,3.61,166,3.61,167,3.61,168,3.61,169,3.61,170,3.61,171,3.61,172,3.61,173,3.61,174,3.61,175,0.953,176,1.419,177,0.953,178,1.876,179,0.953,180,0.953,181,0.821,182,0.953,183,0.821,184,0.953,185,0.821,186,1.419,187,0.821,188,1.419,189,0.884,190,1.419,191,0.821,192,0.253,193,0.953,194,0.884,195,0.884,196,0.953,197,0.884,198,0.821,199,0.953,200,0.821,201,0.376,202,0.953,203,0.821,204,0.953,205,0.884,206,0.953,207,0.015,208,0.015]],["title/components/BannerComponent.html",[0,0.516,181,1.126]],["body/components/BannerComponent.html",[0,0.805,1,1.149,2,1.552,3,0.353,4,0.314,5,1.334,6,1.334,7,1.334,8,0.314,10,1.334,14,2.573,15,2.387,17,1.801,22,1.801,24,1.944,45,0.029,55,1.442,66,0.769,67,3.929,69,0.735,71,0.625,73,1.69,80,1.149,90,1.244,93,2.025,95,1.801,96,0.776,106,3.17,109,0.353,110,0.678,133,1.334,137,1.238,138,0.776,140,0.678,175,1.334,176,1.801,177,1.334,178,2.183,179,1.334,180,1.334,181,1.881,182,1.334,183,1.149,184,1.334,185,1.149,186,1.801,187,1.149,188,1.801,189,1.238,190,1.801,191,1.149,192,0.353,193,1.334,194,1.238,195,1.238,196,1.334,197,1.238,198,1.149,199,1.334,200,1.149,201,0.527,202,1.334,203,1.149,204,1.334,205,1.238,206,1.334,207,0.019,208,0.019,209,2.854,210,4.583,211,2.583,212,3.41,213,4.583,214,4.583,215,1.69,216,3.372,217,5.556,218,3.853,219,3.012,220,3.853,221,4.583,222,4.583,223,4.583,224,1.881,225,4.583,226,4.583,227,5.556,228,5.556,229,5.556,230,4.583,231,4.583,232,4.583,233,5.556,234,4.583,235,4.583,236,4.583,237,3.853,238,2.549,239,4.583,240,3.853,241,4.583,242,4.583,243,4.583,244,3.853,245,2.725,246,4.583,247,4.583,248,4.583,249,4.583,250,4.583,251,4.583,252,4.583,253,4.583,254,4.583,255,4.583,256,3.853,257,3.853,258,4.583]],["title/components/ComienzoComponent.html",[0,0.516,183,1.126]],["body/components/ComienzoComponent.html",[0,0.885,1,1.396,2,1.762,3,0.429,4,0.382,5,1.62,6,1.62,7,1.62,8,0.382,10,1.62,14,2.637,15,2.447,17,2.045,22,2.045,24,2.207,45,0.029,55,1.637,69,0.807,71,0.759,73,2.053,80,1.396,95,2.045,109,0.429,110,0.824,133,1.62,137,1.503,138,0.881,140,0.824,150,1.521,175,1.62,176,2.045,177,1.62,178,2.353,179,1.62,180,1.62,181,1.396,182,1.62,183,2.027,184,1.62,185,1.396,186,2.045,187,1.396,188,2.045,189,1.503,190,2.045,191,1.396,192,0.429,193,1.62,194,1.503,195,1.503,196,1.62,197,1.503,198,1.396,199,1.62,200,1.396,201,0.64,202,1.62,203,1.396,204,1.62,205,1.503,206,1.62,207,0.022,208,0.022,211,2.839,212,3.747,215,2.053,216,3.828,219,3.42,220,4.374,259,3.466,260,5.203,261,5.203,262,5.203,263,5.203]],["title/components/CreacionEncuestaComponent.html",[0,0.516,185,1.126]],["body/components/CreacionEncuestaComponent.html",[0,0.342,1,0.314,2,0.555,3,0.316,4,0.086,5,0.364,6,0.364,7,0.364,8,0.086,10,0.364,12,2.47,13,1.996,14,1.883,15,1.747,17,0.644,22,0.644,24,0.695,26,0.433,27,0.211,29,1.431,30,2.47,32,0.816,40,1.448,41,2.6,44,2.087,45,0.03,52,0.56,54,1.513,55,1.141,56,0.493,57,0.956,59,2.526,61,1.669,62,1.731,64,1.206,66,0.817,67,0.61,69,0.707,70,0.271,71,0.171,73,0.462,76,0.551,80,0.314,83,1.336,85,2.526,87,1.178,89,0.682,90,1.587,93,1.108,94,2.636,95,0.644,96,0.909,104,0.61,105,1.077,106,1.097,109,0.097,110,0.185,112,0.78,117,0.682,125,0.292,126,1.852,127,1.671,128,0.78,131,1.07,132,2.554,133,1.426,134,0.78,135,0.78,137,0.338,138,1.013,140,0.328,143,2.47,144,1.077,150,1.484,151,0.78,153,2.096,156,2.236,160,1.807,175,0.364,176,0.644,177,0.364,178,1.045,179,0.364,180,0.364,181,0.314,182,0.364,183,0.314,184,0.364,185,0.901,186,0.644,187,0.314,188,0.866,189,1.108,190,0.644,191,0.901,192,0.638,193,0.364,194,0.338,195,0.803,196,0.364,197,0.338,198,0.901,199,0.364,200,0.901,201,0.254,202,0.364,203,0.314,204,0.364,205,0.338,206,0.364,207,0.007,208,0.007,211,1.097,212,1.448,215,0.462,216,1.206,237,1.378,238,1.394,244,1.378,245,1.996,256,2.236,257,2.822,264,4.797,265,4.797,266,0.78,267,1.621,268,2.203,269,2.203,270,1.621,271,1.621,272,2.203,273,1.639,274,1.639,275,3.039,276,2.203,277,2.203,278,2.206,279,1.621,280,2.203,281,2.203,282,2.203,283,2.66,284,2.66,285,1.378,286,2.66,287,2.66,288,1.639,289,2.236,290,1.639,291,1.639,292,2.66,293,1.639,294,2.66,295,1.206,296,1.355,297,1.747,298,3.357,299,1.639,300,0.927,301,0.927,302,1.639,303,1.324,304,0.927,305,0.927,306,0.927,307,1.639,308,0.95,309,0.927,310,0.927,311,1.639,312,0.927,313,1.639,314,0.927,315,0.927,316,1.639,317,1.443,318,0.927,319,0.71,320,0.927,321,1.378,322,0.927,323,3.247,324,0.927,325,0.927,326,1.639,327,0.927,328,1.748,329,0.927,330,1.448,331,2.992,332,0.927,333,1.077,334,0.927,335,0.927,336,1.639,337,0.927,338,0.927,339,0.927,340,0.927,341,0.927,342,0.927,343,0.927,344,0.927,345,0.682,346,0.682,347,3.05,348,2.669,349,0.682,350,0.61,351,0.78,352,0.682,353,0.61,354,0.78,355,0.78,356,0.61,357,0.61,358,0.61,359,0.551,360,0.682,361,0.927,362,0.975,363,0.682,364,0.682,365,0.927,366,2.842,367,0.682,368,0.927,369,0.78,370,1.957,371,1.206,372,3.124,373,0.927,374,0.927,375,0.78,376,3.863,377,0.682,378,2.554,379,2.235,380,2.236,381,2.554,382,3.629,383,0.927,384,1.773,385,1.077,386,1.639,387,2.236,388,3.05,389,0.682,390,0.78,391,0.78,392,0.682,393,1.215,394,1.206,395,0.927,396,4.247,397,2.66,398,0.927,399,0.927,400,2.194,401,3.357,402,0.927,403,1.621,404,0.927,405,0.61,406,0.927,407,0.927,408,0.927,409,0.682,410,0.927,411,0.927,412,3.02,413,0.927,414,1.639,415,0.927,416,0.682,417,0.927,418,0.78,419,0.927,420,0.927,421,0.927,422,1.639,423,0.927,424,1.639,425,0.927,426,0.927,427,3.338,428,0.927,429,0.927,430,0.927,431,0.927,432,0.927,433,0.927,434,0.927,435,1.378,436,2.669,437,1.31,438,1.378,439,1.639,440,1.639,441,1.639,442,1.639,443,0.927,444,1.639,445,3.074,446,3.338,447,1.639,448,3.074,449,1.31,450,3.931,451,0.78,452,2.236,453,0.927,454,0.927,455,3.44,456,2.47,457,1.639,458,0.927,459,0.927,460,1.378,461,2.203,462,1.431,463,1.378,464,0.927,465,1.621,466,1.639,467,0.927,468,0.927,469,0.927,470,0.927,471,1.426,472,2.66,473,0.682,474,0.551,475,0.927,476,1.378,477,0.927,478,1.639,479,0.927,480,3.629,481,3.247,482,2.236,483,0.927,484,0.927,485,0.927,486,0.927,487,0.927,488,0.927,489,0.78,490,1.639,491,0.927,492,2.203,493,0.927,494,0.927,495,1.378,496,0.78,497,0.927,498,0.927,499,0.927,500,0.927,501,1.621,502,0.901,503,1.378,504,3.05,505,3.039,506,1.621,507,1.639,508,1.378,509,0.866,510,1.639,511,2.66,512,1.378,513,1.378,514,1.378,515,1.141,516,1.378,517,1.378,518,2.236,519,0.927,520,0.927,521,1.378,522,2.236,523,1.378,524,1.378,525,1.378,526,1.378,527,1.378,528,0.927,529,1.448,530,1.639,531,1.852,532,0.682,533,0.927,534,0.927,535,0.927,536,0.551,537,0.927,538,0.927,539,0.927,540,0.927,541,0.927,542,3.039,543,1.639,544,0.927,545,1.378,546,0.927,547,1.639,548,0.78,549,1.639,550,0.927,551,0.927,552,0.927,553,0.927,554,0.927,555,0.927,556,2.203,557,1.424,558,1.852,559,1.639,560,0.927,561,0.78,562,0.78,563,0.78,564,0.927,565,0.927,566,0.927,567,0.927,568,0.927,569,1.639,570,0.927,571,0.927,572,2.47,573,0.927,574,0.927,575,0.927,576,3.863,577,0.927,578,0.927,579,1.852,580,0.927,581,1.639,582,0.927,583,0.78,584,0.61,585,3.039,586,0.927,587,0.927,588,0.927,589,0.927,590,0.927,591,0.927,592,0.927,593,0.927,594,0.927,595,0.78,596,0.78,597,0.927,598,0.927,599,0.927,600,0.927,601,0.927,602,0.927,603,0.78,604,0.927,605,0.927,606,0.927,607,0.78,608,0.927,609,0.927,610,1.639,611,1.639,612,1.639,613,0.927,614,1.639,615,0.78,616,2.203,617,0.927,618,1.639,619,0.927,620,0.927,621,0.927,622,0.927,623,1.639,624,0.927,625,0.927,626,1.639,627,0.695,628,1.639,629,0.927,630,1.324,631,0.479,632,2.66,633,0.78,634,2.66,635,0.364,636,2.66,637,0.927,638,2.203,639,0.927,640,0.927,641,1.639,642,0.927,643,0.927,644,0.927,645,0.927,646,0.927,647,1.639,648,0.927,649,0.927,650,0.927,651,0.927,652,0.927,653,0.927,654,0.393,655,0.927,656,0.927,657,0.927,658,0.927,659,1.852,660,1.639,661,2.203,662,0.927,663,0.927,664,0.927,665,0.927,666,0.927,667,0.927,668,0.61,669,0.927,670,0.927,671,0.927,672,0.927,673,0.927,674,0.927,675,0.644,676,0.927,677,1.639,678,0.927,679,0.927,680,3.039,681,0.927,682,0.927,683,0.927,684,1.639,685,0.927,686,0.927,687,3.629,688,1.639,689,0.927,690,0.927,691,1.378,692,0.78,693,2.66,694,0.927,695,0.927,696,0.927,697,1.639,698,0.927,699,0.927,700,0.927,701,0.927,702,0.927,703,0.927,704,0.78,705,0.927,706,0.927,707,1.639,708,0.682,709,0.927,710,0.927,711,0.927,712,0.927,713,0.927,714,0.927,715,1.639,716,1.639,717,1.077,718,1.639,719,1.639,720,1.639,721,1.639,722,1.639,723,1.639,724,1.206,725,2.66,726,3.247,727,3.57,728,2.66,729,1.224,730,1.957,731,2.66,732,1.639,733,1.639,734,1.378,735,1.206,736,1.639,737,1.639,738,1.378,739,1.639,740,1.639,741,1.206,742,0.413]],["title/interfaces/CreateEncuestaDTO.html",[362,1.978,743,0.2]],["body/interfaces/CreateEncuestaDTO.html",[3,0.455,4,0.404,8,0.404,26,0.404,27,0.694,45,0.029,52,1.178,56,0.68,57,1.923,66,0.694,69,0.764,83,1.374,90,1.464,93,1.592,94,2.475,96,0.74,109,0.455,138,0.913,150,1.276,153,2.369,160,3.208,207,0.023,208,0.023,238,2.004,296,1.705,297,1.592,362,3.208,364,3.213,400,2.174,437,2.597,572,3.968,595,5.138,596,5.138,735,3.968,743,0.263,744,1.185,745,2.87,746,3.671,747,4.534,748,3.968,749,4.018,750,3.671,751,3.213,752,3.208,753,2.369,754,3.671,755,3.671,756,3.213,757,4.367,758,3.213,759,4.367,760,4.367,761,4.367,762,3.671,763,4.367,764,5.394,765,5.394,766,5.394,767,1.478,768,4.367]],["title/interfaces/CreatePreguntaDTO.html",[743,0.2,749,2.186]],["body/interfaces/CreatePreguntaDTO.html",[3,0.493,4,0.438,8,0.438,26,0.438,27,0.729,45,0.029,56,0.55,66,0.609,69,0.802,90,1.286,93,1.727,96,0.96,109,0.493,127,2.358,150,1.384,153,2.57,192,0.59,207,0.024,208,0.024,238,2.173,303,2.822,377,3.484,437,2.817,742,1.618,743,0.285,744,1.286,745,3.113,747,4.764,748,4.169,749,3.725,750,3.982,751,3.484,753,2.57,754,3.982,755,3.982,756,3.484,758,3.484,769,3.982,770,4.13,771,3.484,772,4.736,773,4.736]],["title/interfaces/Encuesta.html",[138,0.563,743,0.2]],["body/interfaces/Encuesta.html",[3,0.344,4,0.306,8,0.306,16,1.298,26,0.306,27,0.579,29,1.315,45,0.029,46,1.204,52,1.208,56,0.667,57,1.415,66,0.425,69,0.778,70,0.965,71,0.608,79,1.401,87,1.133,96,0.559,109,0.652,110,0.66,121,1.401,125,1.039,131,1.448,138,0.93,140,0.66,192,0.572,201,0.892,207,0.019,208,0.019,224,1.118,296,1.56,297,2.095,308,1.524,319,1.195,393,1.039,462,1.605,471,1.298,502,1.118,509,1.768,515,1.039,557,1.401,627,1.401,631,1.805,635,1.298,654,1.401,675,1.298,729,1.204,742,1.384,743,0.366,744,0.897,767,1.118,774,1.298,775,2.33,776,1.523,777,1.908,778,2.064,779,1.401,780,2.438,781,2.064,782,1.298,783,1.516,784,1.516,785,2.01,786,0.897,787,1.118,788,1.118,789,1.118,790,1.768,791,1.732,792,2.064,793,1.298,794,1.516,795,1.415,796,1.298,797,1.415,798,1.298,799,1.908,800,1.401,801,1.204,802,1.401,803,1.516,804,1.516,805,1.516,806,1.516,807,1.516,808,1.516,809,1.516,810,1.516,811,1.516,812,1.516,813,1.516,814,1.401,815,1.298,816,1.516,817,2.064,818,1.516,819,2.348,820,1.516,821,1.516,822,1.401,823,1.401,824,1.516,825,1.516,826,1.516,827,1.401,828,1.516,829,2.348,830,1.516,831,1.516,832,2.348,833,1.516,834,1.516,835,1.516,836,1.516,837,1.516,838,1.516,839,1.516]],["title/interfaces/EncuestaDTO.html",[743,0.2,752,1.978]],["body/interfaces/EncuestaDTO.html",[3,0.47,4,0.418,8,0.418,26,0.418,27,0.708,45,0.029,52,1.188,56,0.718,66,0.764,69,0.639,83,1.731,90,1.678,92,3.793,96,0.764,109,0.47,111,3.32,137,1.645,138,1.073,150,1.319,207,0.023,208,0.023,296,1.721,297,2.311,303,3.078,308,1.387,474,2.683,631,1.807,633,5.197,743,0.272,744,1.225,751,3.32,752,3.273,753,2.448,758,3.32,767,1.528,840,3.793,841,3.793,842,4.512,843,3.793,844,3.793,845,2.966]],["title/interfaces/EncuestaResponse.html",[743,0.2,798,1.307]],["body/interfaces/EncuestaResponse.html",[3,0.351,4,0.312,8,0.312,16,1.325,26,0.312,27,0.587,29,1.333,45,0.029,46,1.229,52,1.198,56,0.601,66,0.434,69,0.785,70,0.986,71,0.621,79,1.43,87,1.15,96,0.571,109,0.655,110,0.674,121,1.43,125,1.061,131,1.458,138,0.98,140,0.674,192,0.475,201,0.898,207,0.019,208,0.019,224,1.142,296,1.239,297,1.663,308,1.51,319,1.208,393,1.061,462,1.619,471,1.325,502,1.142,509,2.275,515,1.061,557,1.43,627,1.43,631,1.692,635,1.325,654,1.43,675,1.325,729,1.229,742,1.396,743,0.368,744,0.915,767,1.142,774,1.325,775,1.43,776,1.545,777,1.935,778,2.094,779,1.43,780,2.455,781,2.094,782,1.325,783,1.547,784,1.547,785,2.032,786,0.915,787,1.142,788,1.142,789,1.142,790,1.793,791,1.751,792,2.094,793,1.325,794,1.547,795,1.435,796,1.325,797,1.435,798,1.793,799,2.455,800,1.43,801,1.229,802,1.43,803,1.547,804,1.547,805,1.547,806,1.547,807,1.547,808,1.547,809,1.547,810,1.547,811,1.547,812,1.547,813,1.547,814,1.43,815,1.325,816,1.547,817,2.094,818,1.547,819,2.373,820,1.547,821,1.547,822,1.43,823,1.43,824,1.547,825,1.547,826,1.547,827,1.43,828,1.547,829,2.373,830,1.547,831,1.547,832,2.373,833,1.547,834,1.547,835,1.547,836,1.547,837,1.547,838,1.547,839,1.547]],["title/injectables/EncuestasService.html",[278,2.186,776,1.126]],["body/injectables/EncuestasService.html",[3,0.392,4,0.348,8,0.348,15,1.371,16,1.478,26,0.348,27,0.631,29,1.596,32,2.443,41,2.505,44,2.251,45,0.029,52,1.006,54,2.443,55,1.543,56,0.57,57,1.543,61,1.478,62,1.478,66,0.631,69,0.872,70,1.099,71,0.693,83,1.183,85,2.237,87,0.948,90,1.482,93,1.371,94,1.726,96,1.016,106,1.873,109,0.392,110,0.752,125,1.543,131,1.236,138,0.98,150,1.691,153,2.662,160,2.237,207,0.021,208,0.021,245,2.237,278,3.225,289,4.124,308,1.275,319,1.438,362,3.441,363,2.767,364,2.767,385,2.472,400,2.443,409,2.767,437,2.237,572,3.609,631,1.099,675,2.358,708,3.609,738,3.162,752,2.237,767,1.661,776,1.661,777,2.546,779,1.595,780,2.546,782,1.478,800,1.595,802,2.081,846,2.767,847,3.162,848,5.46,849,4.906,850,3.761,851,4.906,852,3.761,853,4.864,854,3.761,855,4.59,856,3.761,857,3.761,858,3.761,859,3.761,860,2.767,861,3.761,862,3.761,863,3.761,864,3.162,865,3.162,866,4.906,867,4.906,868,3.761,869,3.761,870,3.761,871,3.761,872,3.761]],["title/components/GestionOpcionDialogComponent.html",[0,0.516,187,1.126]],["body/components/GestionOpcionDialogComponent.html",[0,0.7,1,0.887,2,1.294,3,0.273,4,0.243,5,1.03,6,1.03,7,1.03,8,0.243,10,1.03,13,3.272,14,2.472,15,2.294,17,1.502,22,1.502,24,1.621,26,0.243,27,0.491,29,1.318,32,1.903,40,2.964,41,2.768,44,1.754,45,0.029,52,0.483,55,1.202,56,0.444,59,2.273,61,1.03,62,1.03,66,0.708,69,0.824,70,0.766,71,0.483,76,1.559,80,0.887,83,1.202,87,0.963,88,2.811,90,1.493,93,0.955,94,2.724,95,1.502,96,0.962,109,0.273,110,0.524,125,1.202,127,1.305,131,0.963,133,1.03,137,0.955,140,0.524,143,1.928,150,1.318,175,1.03,176,1.502,177,1.03,178,1.948,179,1.03,180,1.03,181,0.887,182,1.03,183,0.887,184,1.03,185,0.887,186,1.502,187,1.678,188,2.288,189,2.434,190,1.502,191,0.887,192,0.398,193,1.03,194,0.955,195,0.955,196,1.03,197,0.955,198,0.887,199,1.03,200,1.678,201,0.936,202,1.03,203,0.887,204,1.03,205,0.955,206,1.03,207,0.016,208,0.016,211,2.246,215,1.305,238,1.203,267,3.318,270,3.318,271,3.318,279,3.318,295,2.811,328,3.258,330,1.723,333,2.512,345,1.928,346,1.928,348,3.647,349,1.928,350,1.723,352,1.928,353,4.018,359,1.559,360,1.928,366,4.047,367,1.928,370,1.928,371,1.928,372,3.877,381,3.213,384,1.203,389,1.928,392,1.928,393,1.202,394,1.928,400,1.305,403,1.928,405,1.723,412,1.559,416,1.928,436,4.179,445,1.723,446,1.723,448,1.723,449,1.559,455,1.928,456,1.928,462,0.766,465,3.877,473,1.928,502,0.887,506,1.928,515,0.824,529,1.723,532,1.928,536,1.559,584,1.723,708,1.928,724,3.318,860,1.928,873,4.497,874,1.928,875,3.213,876,3.792,877,3.213,878,3.213,879,4.43,880,4.625,881,3.213,882,3.213,883,3.822,884,2.203,885,3.822,886,3.822,887,2.203,888,2.621,889,2.621,890,2.203,891,2.621,892,3.213,893,2.203,894,3.213,895,2.203,896,2.606,897,2.203,898,2.203,899,2.203,900,2.203,901,2.621,902,2.203,903,2.203,904,2.621,905,2.621,906,2.203,907,2.203,908,2.203,909,2.621,910,2.621,911,2.203,912,2.203,913,2.203,914,2.203,915,3.213,916,3.213]],["title/components/GestionPreguntaDialogComponent.html",[0,0.516,191,1.126]],["body/components/GestionPreguntaDialogComponent.html",[0,0.495,1,0.516,2,0.848,3,0.159,4,0.141,5,0.599,6,0.599,7,0.599,8,0.141,10,0.599,12,3.233,13,2.613,14,2.231,15,2.042,17,0.985,22,0.985,24,1.063,26,0.43,27,0.322,29,1.284,32,1.248,40,2.098,41,2.826,44,2.433,45,0.03,52,0.681,54,2.035,55,1.461,56,0.584,57,1.285,59,2.989,61,1.606,62,1.606,66,0.768,69,0.814,70,0.445,71,0.462,76,0.906,80,0.516,83,0.479,85,1.49,87,0.804,88,1.843,90,1.317,93,0.555,94,2.57,95,0.985,96,0.917,104,1.001,105,1.001,106,1.589,109,0.159,110,0.304,117,1.843,127,2.035,131,1.107,133,0.599,137,0.555,140,0.304,144,1.001,150,1.284,160,0.906,175,0.599,176,0.985,177,0.599,178,1.453,179,0.599,180,0.599,181,0.516,182,0.599,183,0.516,184,0.599,185,0.516,186,0.985,187,1.252,188,1.975,189,1.693,190,0.985,191,1.252,192,0.7,193,0.599,194,0.555,195,0.913,196,0.599,197,0.555,198,1.252,199,0.599,200,1.252,201,0.869,202,0.599,203,0.516,204,0.599,205,0.555,206,0.599,207,0.011,208,0.011,211,1.589,215,0.759,219,1.001,238,0.699,245,1.49,267,2.348,270,2.348,271,2.348,279,2.348,285,3.435,295,1.843,296,0.414,303,2.035,308,1.026,317,2.217,319,1.174,321,2.106,323,2.106,328,2.43,330,2.098,331,1.121,333,1.647,345,1.121,346,1.121,347,3.694,348,3.901,349,1.843,350,1.001,351,1.281,352,1.121,353,4.086,354,1.281,355,1.281,356,1.647,357,1.001,358,1.001,359,0.906,360,1.121,363,1.121,366,3.417,367,1.121,370,1.843,371,1.843,372,3.233,375,1.281,377,1.121,379,1.121,384,0.699,388,2.106,389,1.121,390,1.281,391,1.281,392,1.121,393,1.382,394,1.843,400,1.248,403,2.348,405,1.647,412,1.49,427,2.098,435,1.281,436,3.807,437,1.49,438,1.281,445,1.001,446,1.647,448,1.001,449,1.898,451,1.281,452,2.106,455,1.121,456,1.121,460,1.281,462,0.445,465,2.72,473,1.121,474,0.906,476,1.281,481,2.683,489,2.106,496,1.281,501,1.843,502,0.516,503,1.281,504,1.281,506,1.121,508,1.281,509,0.599,513,2.106,514,1.281,515,1.163,516,1.281,517,1.281,518,2.106,521,1.281,522,2.106,523,1.281,524,1.281,525,1.281,526,1.281,527,1.281,529,1.647,532,1.121,536,1.49,558,1.281,561,1.281,562,1.281,563,1.281,579,1.281,584,1.001,615,1.281,630,0.759,717,1.001,724,2.72,726,2.106,727,2.106,729,0.913,730,2.348,734,2.106,735,1.121,741,1.121,742,1.479,770,1.001,771,1.121,791,0.848,815,0.599,860,1.121,873,4.553,874,1.121,875,2.106,876,2.683,877,2.106,878,2.106,879,2.106,880,3.694,881,2.106,882,2.106,884,1.281,887,2.106,890,1.281,892,2.106,893,1.281,894,2.106,895,1.281,896,2.016,897,1.281,898,1.281,899,1.281,900,1.281,902,1.281,903,2.106,906,1.281,907,1.281,908,1.281,911,1.281,912,1.281,913,1.281,914,1.281,915,2.106,916,2.106,917,3.192,918,3.192,919,3.192,920,3.192,921,4.644,922,3.698,923,2.506,924,2.506,925,2.506,926,1.843,927,3.698,928,3.698,929,3.698,930,2.506,931,2.506,932,1.524,933,1.524,934,2.506,935,1.524,936,2.506,937,1.524,938,1.524,939,2.506,940,1.524,941,2.506,942,1.524,943,2.106,944,1.524,945,1.524,946,1.281,947,1.524,948,1.524,949,1.524,950,1.524,951,1.524,952,2.506,953,1.524,954,2.506,955,1.524,956,1.524,957,1.524,958,1.524,959,1.524,960,1.524,961,1.524,962,1.843,963,1.524,964,1.524,965,1.524,966,1.524,967,1.121,968,1.121,969,1.524,970,1.524,971,1.524,972,1.524,973,1.524,974,2.506,975,1.49,976,1.524,977,1.001,978,1.524,979,2.106,980,1.524,981,1.524,982,1.524,983,1.524,984,2.506,985,1.524,986,1.524,987,1.524,988,1.281,989,1.281,990,1.281,991,1.524,992,1.524,993,1.001,994,1.281,995,1.281,996,1.524,997,1.524,998,1.524,999,1.524,1000,2.506,1001,2.506,1002,2.506,1003,2.506,1004,2.506,1005,2.506,1006,2.106,1007,2.506,1008,2.506,1009,2.506,1010,2.506]],["title/components/NavbarComponent.html",[0,0.516,80,1.126]],["body/components/NavbarComponent.html",[0,0.887,1,1.405,2,1.769,3,0.432,4,0.384,5,1.63,6,1.63,7,1.63,8,0.384,10,1.63,14,2.639,15,2.448,17,2.053,22,2.053,24,2.216,45,0.029,55,1.643,65,4.392,66,0.672,67,3.434,69,0.81,71,0.764,73,2.066,80,2.032,95,2.053,109,0.432,110,0.829,133,1.63,137,1.513,140,0.829,175,1.63,176,2.053,177,1.63,178,2.358,179,1.63,180,1.63,181,1.405,182,1.63,183,1.405,184,1.63,185,1.405,186,2.053,187,1.405,188,2.053,189,1.513,190,2.053,191,1.405,192,0.432,193,1.63,194,1.513,195,1.513,196,1.63,197,1.513,198,1.405,199,1.63,200,1.405,201,0.644,202,1.63,203,1.405,204,1.63,205,1.513,206,1.63,207,0.022,208,0.022,211,2.847,212,3.758,215,2.066,1011,3.488,1012,5.224,1013,5.224,1014,5.224]],["title/interfaces/OpcionDTO.html",[743,0.2,1015,2.186]],["body/interfaces/OpcionDTO.html",[3,0.503,4,0.448,8,0.448,26,0.448,27,0.738,45,0.028,52,1.127,56,0.666,66,0.787,83,1.521,90,1.557,109,0.503,192,0.503,201,1.002,207,0.024,208,0.024,308,1.429,384,2.218,400,2.407,501,3.556,603,4.064,668,3.177,743,0.291,744,1.312,791,2.142,896,2.632,1015,3.77,1016,4.064,1017,4.064,1018,4.064,1019,4.834]],["title/interfaces/OpcionRespuesta.html",[743,0.2,790,1.307]],["body/interfaces/OpcionRespuesta.html",[3,0.348,4,0.309,8,0.309,16,1.313,26,0.309,27,0.583,29,1.325,45,0.029,46,1.218,52,1.197,56,0.641,66,0.43,69,0.782,70,0.977,71,0.616,79,1.417,87,1.142,96,0.566,109,0.654,110,0.668,121,1.417,125,1.051,131,1.454,138,0.872,140,0.668,192,0.472,201,0.961,207,0.019,208,0.019,224,1.131,296,1.231,297,1.653,308,1.54,319,1.202,393,1.051,462,1.613,471,1.313,502,1.131,509,1.782,515,1.051,557,1.417,627,1.417,631,1.81,635,1.313,654,1.417,675,1.313,729,1.218,742,1.391,743,0.367,744,0.907,767,1.131,774,1.313,775,1.417,776,1.535,777,1.923,778,2.081,779,1.417,780,2.448,781,2.081,782,1.313,783,1.533,784,1.533,785,2.022,786,0.907,787,1.131,788,1.131,789,1.131,790,2.022,791,2.015,792,2.081,793,1.313,794,1.533,795,1.426,796,1.313,797,1.426,798,1.313,799,1.923,800,1.417,801,1.218,802,1.417,803,1.533,804,1.533,805,1.533,806,1.533,807,1.533,808,1.533,809,1.533,810,1.533,811,1.533,812,1.533,813,1.533,814,1.417,815,1.313,816,1.533,817,2.081,818,1.533,819,2.362,820,1.533,821,1.533,822,1.417,823,1.417,824,1.533,825,1.533,826,1.533,827,1.417,828,1.533,829,2.362,830,1.533,831,1.533,832,2.362,833,1.533,834,1.533,835,1.533,836,1.533,837,1.533,838,1.533,839,1.533]],["title/interfaces/Pregunta.html",[192,0.346,743,0.2]],["body/interfaces/Pregunta.html",[3,0.338,4,0.3,8,0.3,16,1.275,26,0.3,27,0.572,29,1.299,45,0.029,46,1.848,52,1.192,56,0.701,57,1.398,66,0.417,69,0.772,70,0.948,71,0.598,79,1.376,87,1.12,96,0.55,109,0.65,110,0.648,121,1.376,125,1.021,131,1.439,138,0.859,140,0.648,192,0.528,201,0.954,207,0.019,208,0.019,224,1.099,296,1.206,297,1.62,308,1.535,319,1.378,393,1.021,462,1.594,471,1.275,502,1.099,509,1.746,515,1.021,557,1.376,627,1.376,631,1.797,635,1.275,654,1.376,675,1.275,729,1.183,742,1.522,743,0.364,744,0.881,767,1.099,774,1.275,775,1.376,776,1.505,777,1.885,778,2.039,779,1.376,780,2.423,781,2.039,782,1.275,783,1.489,784,1.489,785,2.244,786,0.881,787,1.099,788,1.099,789,1.099,790,2.143,791,1.997,792,2.621,793,1.275,794,1.489,795,1.398,796,1.275,797,1.398,798,1.275,799,1.885,800,1.376,801,1.183,802,1.376,803,1.489,804,1.489,805,1.489,806,1.489,807,1.489,808,1.489,809,1.489,810,1.489,811,1.489,812,1.489,813,1.489,814,1.376,815,1.275,816,1.489,817,2.039,818,1.489,819,2.326,820,1.489,821,1.489,822,1.376,823,1.376,824,1.489,825,1.489,826,1.489,827,1.376,828,1.489,829,2.326,830,1.489,831,1.489,832,2.326,833,1.489,834,1.489,835,1.489,836,1.489,837,1.489,838,1.489,839,1.489]],["title/interfaces/PreguntaDTO.html",[303,1.656,743,0.2]],["body/interfaces/PreguntaDTO.html",[3,0.444,4,0.395,8,0.395,26,0.395,27,0.684,45,0.029,52,1.067,56,0.724,57,1.672,66,0.83,69,0.753,83,1.342,90,1.726,93,1.555,105,2.804,109,0.444,127,2.124,138,0.9,150,1.247,192,0.649,201,0.968,207,0.023,208,0.023,303,2.647,308,1.485,317,3.289,319,1.485,357,2.804,358,2.804,474,2.537,536,2.537,630,2.124,631,1.772,742,1.571,743,0.257,744,1.158,753,2.314,756,3.138,771,3.138,786,1.158,791,2.052,841,3.586,843,3.586,844,3.586,896,2.439,1015,3.984,1017,3.586,1018,3.586,1020,3.586,1021,4.266,1022,4.266,1023,4.266]],["title/interfaces/RegistrarRespuestasDTO.html",[743,0.2,797,1.046]],["body/interfaces/RegistrarRespuestasDTO.html",[3,0.469,4,0.417,8,0.417,26,0.417,27,0.707,45,0.029,52,0.83,56,0.523,66,0.829,83,1.729,87,1.135,90,1.223,96,0.931,109,0.572,138,0.763,150,1.316,192,0.572,201,0.853,207,0.023,208,0.023,224,2.182,238,2.067,296,1.492,308,1.284,319,1.284,384,2.067,385,2.961,630,2.243,631,1.316,668,2.961,742,1.385,743,0.331,744,1.223,753,2.444,786,1.223,787,1.525,788,1.525,789,1.525,795,1.943,796,1.77,797,1.729,845,2.961,896,2.067,975,3.528,977,3.613,993,2.961,1024,3.314,1025,3.787,1026,3.314,1027,3.787,1028,3.787,1029,3.314]],["title/interfaces/RegistrarRespuestasDto.html",[743,0.2,797,1.046]],["body/interfaces/RegistrarRespuestasDto.html",[3,0.354,4,0.315,8,0.315,16,1.337,26,0.315,27,0.59,29,1.342,45,0.029,46,1.241,52,1.184,56,0.533,66,0.438,69,0.788,70,0.995,71,0.627,79,1.444,87,1.157,96,0.576,109,0.656,110,0.68,121,1.444,125,1.071,131,1.463,138,0.88,140,0.68,192,0.478,201,0.901,207,0.019,208,0.019,224,1.883,296,1.246,297,1.674,308,1.512,319,1.214,393,1.071,462,1.625,471,1.337,502,1.152,509,1.804,515,1.071,557,1.444,627,1.444,631,1.697,635,1.337,654,1.444,675,1.337,729,1.241,742,1.401,743,0.369,744,0.924,767,1.152,774,1.337,775,1.444,776,1.554,777,1.947,778,2.107,779,1.444,780,2.463,781,2.107,782,1.337,783,1.562,784,1.562,785,2.042,786,0.924,787,1.152,788,1.152,789,1.152,790,1.804,791,1.759,792,2.107,793,1.337,794,1.562,795,1.749,796,1.337,797,1.634,798,1.337,799,1.947,800,1.444,801,1.241,802,1.444,803,1.562,804,1.562,805,1.562,806,1.562,807,1.562,808,1.562,809,1.562,810,1.562,811,1.562,812,1.562,813,1.562,814,1.444,815,1.337,816,1.562,817,2.107,818,1.562,819,2.384,820,1.562,821,1.562,822,1.444,823,1.444,824,1.562,825,1.562,826,1.562,827,1.444,828,1.562,829,2.384,830,1.562,831,1.562,832,2.384,833,1.562,834,1.562,835,1.562,836,1.562,837,1.562,838,1.562,839,1.562]],["title/interfaces/RespuestaPreguntaDTO.html",[743,0.2,795,1.046]],["body/interfaces/RespuestaPreguntaDTO.html",[3,0.441,4,0.392,8,0.392,26,0.392,27,0.68,45,0.029,52,1.063,56,0.702,57,1.901,66,0.816,83,1.663,87,1.066,90,1.148,96,0.896,109,0.551,138,0.717,150,1.236,192,0.551,201,0.966,207,0.022,208,0.022,224,1.953,238,1.941,296,1.436,308,1.482,319,1.453,384,1.941,385,2.781,630,2.107,631,1.236,668,2.781,742,1.568,743,0.319,744,1.148,753,2.295,786,1.566,787,1.953,788,1.953,789,1.953,795,1.815,796,2.375,797,1.331,845,2.781,896,1.941,975,3.431,977,3.476,993,2.781,1024,3.112,1025,3.557,1026,3.112,1027,3.557,1028,3.557,1029,3.112]],["title/interfaces/RespuestaPreguntaDto.html",[743,0.2,795,1.046]],["body/interfaces/RespuestaPreguntaDto.html",[3,0.343,4,0.305,8,0.305,16,1.295,26,0.305,27,0.578,29,1.313,45,0.029,46,1.201,52,1.194,56,0.667,57,1.726,66,0.424,69,0.777,70,0.963,71,0.607,79,1.397,87,1.131,96,0.558,109,0.652,110,0.658,121,1.397,125,1.036,131,1.447,138,0.865,140,0.658,192,0.468,201,0.958,207,0.019,208,0.019,224,1.115,296,1.219,297,1.637,308,1.538,319,1.384,393,1.036,462,1.604,471,1.295,502,1.115,509,1.765,515,1.036,557,1.397,627,1.397,631,1.678,635,1.295,654,1.397,675,1.295,729,1.201,742,1.528,743,0.365,744,0.894,767,1.115,774,1.295,775,1.397,776,1.52,777,1.905,778,2.061,779,1.397,780,2.436,781,2.061,782,1.295,783,1.512,784,1.512,785,2.256,786,0.894,787,1.115,788,1.115,789,1.115,790,1.765,791,1.73,792,2.061,793,1.295,794,1.512,795,1.607,796,2.156,797,1.413,798,1.295,799,1.905,800,1.397,801,1.201,802,1.397,803,1.512,804,1.512,805,1.512,806,1.512,807,1.512,808,1.512,809,1.512,810,1.512,811,1.512,812,1.512,813,1.512,814,1.397,815,1.295,816,1.512,817,2.061,818,1.512,819,2.345,820,1.512,821,1.512,822,1.397,823,1.397,824,1.512,825,1.512,826,1.512,827,1.397,828,1.512,829,2.345,830,1.512,831,1.512,832,2.345,833,1.512,834,1.512,835,1.512,836,1.512,837,1.512,838,1.512,839,1.512]],["title/interfaces/RespuestaUsuario.html",[743,0.2,793,1.307]],["body/interfaces/RespuestaUsuario.html",[3,0.348,4,0.309,8,0.309,16,1.313,26,0.309,27,0.583,29,1.325,45,0.029,46,1.218,52,1.197,56,0.641,66,0.43,69,0.782,70,0.977,71,0.616,79,1.417,87,1.142,96,0.566,109,0.654,110,0.668,121,1.417,125,1.051,131,1.454,138,0.872,140,0.668,192,0.472,201,0.961,207,0.019,208,0.019,224,1.131,296,1.231,297,1.653,308,1.54,319,1.202,393,1.051,462,1.613,471,1.313,502,1.131,509,1.782,515,1.051,557,1.417,627,1.417,631,1.686,635,1.313,654,1.417,675,1.313,729,1.218,742,1.533,743,0.367,744,0.907,767,1.131,774,1.313,775,1.417,776,1.535,777,1.923,778,2.081,779,1.417,780,2.448,781,2.081,782,1.313,783,1.533,784,1.533,785,2.022,786,0.907,787,1.131,788,1.131,789,1.131,790,1.782,791,1.743,792,2.081,793,1.782,794,2.533,795,1.426,796,1.313,797,1.426,798,1.313,799,1.923,800,1.417,801,1.218,802,1.417,803,1.533,804,1.533,805,1.533,806,1.533,807,1.533,808,1.533,809,1.533,810,1.533,811,1.533,812,1.533,813,1.533,814,1.417,815,1.313,816,1.533,817,2.081,818,1.533,819,2.362,820,1.533,821,1.533,822,1.417,823,1.417,824,1.533,825,1.533,826,1.533,827,1.417,828,1.533,829,2.362,830,1.533,831,1.533,832,2.362,833,1.533,834,1.533,835,1.533,836,1.533,837,1.533,838,1.533,839,1.533]],["title/injectables/RespuestasService.html",[776,1.126,801,1.213]],["body/injectables/RespuestasService.html",[3,0.312,4,0.278,8,0.278,16,1.179,26,0.278,27,0.541,29,1.682,32,2.096,41,2.641,44,2.547,45,0.029,46,1.093,52,1.213,54,2.764,55,1.746,56,0.668,57,1.746,61,1.179,62,1.179,66,0.386,69,0.746,70,0.877,71,0.553,79,1.272,87,1.06,96,0.508,109,0.638,110,0.599,121,1.272,125,0.943,131,1.399,138,0.823,140,0.599,192,0.438,201,0.861,207,0.018,208,0.018,224,1.015,296,1.142,297,1.534,308,1.532,319,1.136,393,0.943,462,1.622,471,1.179,502,1.015,509,1.654,515,0.943,557,1.272,627,1.272,631,1.727,635,2.071,654,1.272,675,1.911,729,1.093,742,1.328,743,0.356,767,1.015,774,1.179,775,1.272,776,1.425,777,2.236,778,2.419,779,1.272,780,2.601,781,1.931,782,1.179,783,1.376,784,1.376,785,1.911,786,0.814,787,1.015,788,1.015,789,1.015,790,1.654,791,1.646,792,1.931,793,1.179,794,1.376,795,1.324,796,1.179,797,1.658,798,1.179,799,1.785,800,1.272,801,1.534,802,1.785,803,1.931,804,2.231,805,1.376,806,1.376,807,1.376,808,1.376,809,1.376,810,1.376,811,1.376,812,1.376,813,1.376,814,1.272,815,1.179,816,1.931,817,2.419,818,1.376,819,2.231,820,1.931,821,1.376,822,1.272,823,1.272,824,1.931,825,1.376,826,1.376,827,1.272,828,1.931,829,2.231,830,1.376,831,1.376,832,2.231,833,1.376,834,1.376,835,1.376,836,1.376,837,1.376,838,1.376,839,1.376,846,2.207,855,2.521,1030,4.209,1031,4.209,1032,4.209,1033,4.209,1034,4.209,1035,2.999,1036,2.999,1037,2.999,1038,2.999,1039,2.999,1040,2.999]],["title/components/SeccionComponent.html",[0,0.516,198,1.126]],["body/components/SeccionComponent.html",[0,0.84,1,1.251,2,1.642,3,0.385,4,0.342,5,1.453,6,1.453,7,1.453,8,0.342,10,1.453,14,2.602,15,2.414,17,1.453,22,1.906,24,2.057,26,0.342,27,0.624,41,2.739,45,0.029,55,1.526,61,2.345,62,2.345,69,0.523,71,0.681,80,1.251,95,1.906,109,0.385,110,0.739,131,1.222,133,1.453,137,1.348,140,0.739,175,1.453,176,1.906,177,1.453,178,2.258,179,1.453,180,1.453,181,1.251,182,1.453,183,1.251,184,1.453,185,1.251,186,1.906,187,1.251,188,1.906,189,1.348,190,1.906,191,1.251,192,0.385,193,1.453,194,1.348,195,1.348,196,1.453,197,1.348,198,1.946,199,1.453,200,1.251,201,0.574,202,1.453,203,1.251,204,1.453,205,1.348,206,1.453,207,0.021,208,0.021,330,2.43,416,2.719,1041,3.107,1042,4.851,1043,4.851,1044,4.851,1045,5.414,1046,5.414,1047,5.414,1048,5.414,1049,4.551,1050,5.748,1051,3.697,1052,4.851,1053,3.697,1054,4.851,1055,3.697,1056,3.697,1057,5.414,1058,4.078,1059,4.832,1060,4.851,1061,4.078,1062,4.851,1063,4.832,1064,4.078,1065,4.851,1066,4.851,1067,4.851,1068,3.697]],["title/components/TextoErrorComponent.html",[0,0.516,200,1.126]],["body/components/TextoErrorComponent.html",[0,0.896,1,1.435,2,1.792,3,0.441,4,0.392,5,1.665,6,1.665,7,1.665,8,0.392,10,1.665,14,2.646,15,2.454,17,1.665,22,2.08,24,2.246,45,0.029,55,1.665,69,0.6,71,0.781,80,1.435,95,2.08,109,0.441,110,0.847,133,1.665,137,1.545,140,0.847,175,1.665,176,2.08,177,1.665,178,2.376,179,1.665,180,1.665,181,1.435,182,1.665,183,1.435,184,1.665,185,1.435,186,2.08,187,1.435,188,2.08,189,1.545,190,2.08,191,1.435,192,0.441,193,1.665,194,1.545,195,1.545,196,1.665,197,1.545,198,1.435,199,1.665,200,2.047,201,0.999,202,1.665,203,1.435,204,1.665,205,1.545,206,1.665,207,0.022,208,0.022,359,2.52,462,1.547,1069,3.562,1070,3.562,1071,5.294,1072,5.294]],["title/components/VisualizarResultadosComponent.html",[0,0.516,203,1.126]],["body/components/VisualizarResultadosComponent.html",[0,0.364,1,0.341,2,0.596,3,0.244,4,0.093,5,0.692,6,0.395,7,0.395,8,0.093,10,0.395,11,1.295,13,2.095,14,1.939,15,1.799,17,0.692,20,1.974,21,1.974,22,0.692,26,0.093,27,0.226,29,1.373,30,2.073,32,0.877,41,2.391,44,1.741,45,0.029,46,0.856,52,0.433,54,1.169,55,1.007,56,0.409,57,0.739,58,1.974,59,1.396,61,1.731,62,1.731,64,1.295,66,0.725,69,0.646,70,0.294,71,0.185,73,0.501,74,0.846,76,0.598,77,0.74,80,0.341,83,0.316,85,2.095,87,0.444,89,0.74,90,0.765,93,0.367,94,1.741,95,0.692,96,0.836,101,1.48,104,0.661,106,0.501,109,0.105,110,0.201,111,0.74,125,0.886,131,1.014,133,0.395,137,0.367,138,0.477,140,1.233,144,2.997,150,0.515,153,0.546,175,0.923,176,0.692,177,0.395,178,1.107,179,0.395,180,0.395,181,0.341,182,0.395,183,0.341,184,0.395,185,0.341,186,0.692,187,0.341,188,0.692,189,1.662,190,0.692,191,0.341,192,0.596,193,0.395,194,0.367,195,0.367,196,0.395,197,0.367,198,0.341,199,0.395,200,0.341,201,0.273,202,0.395,203,0.954,204,1.582,205,0.367,206,0.395,207,0.007,208,0.007,211,1.169,215,0.501,224,1.814,240,1.48,245,1.047,296,0.637,308,0.988,317,1.911,319,0.411,331,0.74,333,1.157,357,0.661,358,0.661,369,0.846,378,1.974,379,1.295,380,0.846,384,0.808,400,1.754,409,1.295,412,1.676,427,4.067,445,1.543,446,1.543,448,1.543,449,1.904,450,1.974,462,1.634,463,0.846,471,0.692,482,0.846,495,0.846,502,0.341,512,2.962,515,1.267,548,3.385,583,0.846,584,1.543,607,0.846,630,1.595,635,0.923,659,2.369,691,0.846,692,0.846,704,0.846,717,0.661,729,0.642,730,1.727,741,0.74,742,0.888,762,1.48,767,0.596,775,0.747,786,0.637,791,0.341,799,0.996,801,1.027,814,0.747,815,0.692,822,1.195,823,1.609,827,0.427,896,0.462,968,1.727,975,1.047,977,1.157,979,2.369,1006,2.369,1026,1.295,1049,0.846,1058,1.974,1059,3.554,1061,3.19,1063,4.779,1064,0.846,1073,1.006,1074,4.444,1075,0.846,1076,1.761,1077,2.348,1078,1.761,1079,2.348,1080,2.348,1081,1.761,1082,2.348,1083,1.761,1084,3.202,1085,2.348,1086,2.348,1087,2.818,1088,2.818,1089,1.761,1090,2.818,1091,1.761,1092,1.761,1093,3.202,1094,1.006,1095,1.006,1096,1.761,1097,1.006,1098,3.523,1099,1.761,1100,1.006,1101,2.348,1102,1.761,1103,1.761,1104,1.761,1105,1.761,1106,5.591,1107,2.818,1108,3.202,1109,1.006,1110,3.523,1111,1.006,1112,1.006,1113,1.006,1114,1.006,1115,1.006,1116,1.006,1117,1.006,1118,1.761,1119,1.006,1120,1.006,1121,1.761,1122,1.006,1123,1.006,1124,1.006,1125,1.006,1126,1.006,1127,1.006,1128,1.761,1129,1.006,1130,1.006,1131,0.74,1132,1.006,1133,1.006,1134,1.006,1135,1.006,1136,2.818,1137,1.006,1138,1.761,1139,1.006,1140,1.006,1141,1.006,1142,2.348,1143,2.818,1144,1.006,1145,1.761,1146,1.761,1147,1.761,1148,1.006,1149,1.006,1150,1.761,1151,1.006,1152,1.761,1153,1.006,1154,1.761,1155,1.006,1156,2.818,1157,1.006,1158,1.761,1159,1.006,1160,2.818,1161,2.348,1162,1.761,1163,1.006,1164,4.56,1165,3.523,1166,1.006,1167,1.006,1168,1.006,1169,1.006,1170,1.006,1171,1.006,1172,1.006,1173,1.006,1174,1.006,1175,5.21,1176,1.006,1177,1.006,1178,2.348,1179,1.006,1180,1.006,1181,1.761,1182,1.006,1183,1.006,1184,1.006,1185,1.006,1186,1.006,1187,1.006,1188,1.006,1189,1.006,1190,1.006,1191,1.006,1192,1.006,1193,1.006,1194,1.006,1195,1.006,1196,1.761,1197,1.761,1198,1.761,1199,1.761,1200,1.761,1201,1.761,1202,1.761,1203,1.761,1204,1.006,1205,4.405,1206,4.228,1207,1.006,1208,5.126,1209,3.794,1210,3.794,1211,5.035,1212,2.348,1213,3.523,1214,5.035,1215,2.818,1216,2.818,1217,4.56,1218,3.523,1219,4.699,1220,3.202,1221,3.794,1222,1.761,1223,4.228,1224,1.006,1225,5.422,1226,1.006,1227,5.21,1228,1.761,1229,6.089,1230,5.685,1231,4.027,1232,4.699,1233,2.818,1234,4.027,1235,2.348,1236,5.035,1237,4.56,1238,3.202,1239,1.761,1240,4.027,1241,4.027,1242,1.761,1243,1.761,1244,2.818,1245,2.348,1246,1.006,1247,2.818,1248,1.006,1249,2.348,1250,3.794,1251,2.348,1252,3.523,1253,2.818,1254,1.761,1255,1.761,1256,1.006,1257,1.761,1258,1.761,1259,2.348,1260,2.818,1261,1.006,1262,4.699,1263,1.761,1264,3.202,1265,1.761,1266,1.761,1267,1.006,1268,1.006,1269,1.006,1270,4.405,1271,2.818,1272,4.822,1273,1.006,1274,4.148,1275,4.934,1276,3.794,1277,3.202,1278,2.818,1279,2.818,1280,2.818,1281,2.818,1282,1.006,1283,3.202,1284,2.348,1285,2.348,1286,2.348,1287,2.348,1288,1.006,1289,2.348,1290,1.761,1291,1.761,1292,2.818,1293,1.006,1294,1.006,1295,3.202,1296,1.006,1297,1.006,1298,2.348,1299,1.761,1300,1.006,1301,2.348,1302,1.761,1303,2.348,1304,1.761,1305,2.348,1306,1.006,1307,1.006,1308,1.006,1309,1.006,1310,2.818,1311,1.006,1312,1.006,1313,1.006,1314,1.006,1315,1.006,1316,1.006,1317,1.006,1318,1.761,1319,1.006,1320,2.348,1321,1.006,1322,1.006,1323,1.006,1324,1.761,1325,2.348,1326,2.348,1327,5.728,1328,1.761,1329,1.761,1330,1.761,1331,1.761,1332,1.761,1333,1.761,1334,1.006,1335,1.761,1336,1.761,1337,1.761,1338,1.761,1339,1.761,1340,1.006,1341,1.006,1342,1.006,1343,1.006,1344,1.006,1345,1.006,1346,1.761,1347,1.006,1348,1.48,1349,1.006,1350,1.006,1351,1.006,1352,1.006,1353,1.006,1354,1.006]],["title/coverage.html",[1355,3.8]],["body/coverage.html",[0,1.012,1,1.205,8,0.329,9,2.992,45,0.029,56,0.617,80,1.205,138,0.603,181,1.205,183,1.205,185,1.205,187,1.205,189,1.724,191,1.205,192,0.553,194,1.297,197,1.297,198,1.205,200,1.205,203,1.205,207,0.02,208,0.02,209,2.992,259,2.992,264,2.992,265,2.992,266,3.976,278,2.339,303,1.772,353,3.109,356,2.339,359,2.116,362,2.116,393,1.119,427,4.509,743,0.397,745,3.492,746,2.992,749,2.339,752,2.116,769,2.992,770,2.339,774,2.498,776,1.601,785,1.398,790,1.398,793,1.398,795,1.488,797,1.488,798,1.398,801,1.297,840,2.992,847,2.992,873,3.48,874,3.48,926,2.618,962,2.618,1011,2.992,1015,2.339,1016,2.992,1020,2.992,1024,3.48,1041,2.992,1069,2.992,1070,2.992,1074,2.992,1075,2.992,1355,2.992,1356,3.559,1357,3.559,1358,3.559,1359,3.559,1360,2.992,1361,5.313,1362,2.992,1363,6.474,1364,3.559,1365,3.559,1366,3.559,1367,3.559,1368,3.559,1369,3.559,1370,3.559,1371,3.559,1372,3.559,1373,4.73,1374,2.618,1375,2.618,1376,5.662,1377,2.992,1378,4.73,1379,5.313,1380,5.662,1381,4.73,1382,4.73,1383,3.909,1384,3.909,1385,4.73,1386,2.992,1387,3.559,1388,3.559]],["title/dependencies.html",[1389,2.343,1390,3.358]],["body/dependencies.html",[45,0.029,71,0.889,73,2.402,77,3.55,207,0.024,208,0.024,350,3.171,782,1.896,967,3.55,1390,4.056,1391,4.825,1392,4.825,1393,6.616,1394,4.825,1395,5.73,1396,4.817,1397,4.825,1398,4.825,1399,5.73,1400,4.825,1401,4.825,1402,4.825,1403,4.825,1404,4.825,1405,4.825,1406,4.825,1407,4.825,1408,4.825,1409,4.825,1410,4.825,1411,4.825]],["title/miscellaneous/enumerations.html",[1412,1.279,1413,3.358]],["body/miscellaneous/enumerations.html",[26,0.459,45,0.028,62,2.588,140,1.163,207,0.025,208,0.025,317,3.158,630,2.898,786,1.58,787,1.97,788,1.97,789,1.97,853,4.893,1374,3.645,1375,4.282,1412,2.274,1413,4.165,1414,4.955,1415,5.82,1416,4.165,1417,4.955]],["title/miscellaneous/functions.html",[1412,1.279,1418,3.358]],["body/miscellaneous/functions.html",[26,0.463,44,2.686,45,0.028,46,2.134,54,2.914,55,1.841,56,0.581,57,1.841,207,0.025,208,0.025,317,3.176,319,1.169,926,4.306,943,4.206,1029,3.681,1383,3.681,1384,4.565,1386,4.921,1412,2.296,1418,4.206,1419,4.921,1420,5.003]],["title/index.html",[26,0.258,1421,2.787,1422,2.787]],["body/index.html",[0,0.889,2,1.409,4,0.385,45,0.022,61,2.057,205,1.517,207,0.022,208,0.022,393,1.309,418,3.499,545,3.499,1274,5.313,1348,3.499,1396,3.499,1423,4.162,1424,5.727,1425,4.162,1426,5.235,1427,5.052,1428,6.192,1429,3.499,1430,4.162,1431,5.235,1432,5.727,1433,6.192,1434,6.321,1435,4.162,1436,5.235,1437,4.162,1438,4.162,1439,4.162,1440,5.235,1441,4.162,1442,4.162,1443,4.162,1444,4.162,1445,4.162,1446,5.235,1447,5.235,1448,4.162,1449,4.162,1450,4.162,1451,5.727,1452,4.162,1453,4.162,1454,4.162,1455,4.162,1456,4.162,1457,4.162,1458,4.162,1459,5.727,1460,4.162,1461,4.162,1462,4.162,1463,4.162,1464,4.162,1465,4.162,1466,4.162,1467,4.162,1468,4.162,1469,4.162,1470,5.235,1471,5.727,1472,4.162,1473,4.162,1474,4.162,1475,4.162,1476,4.162,1477,4.162,1478,5.727,1479,4.162,1480,6.321,1481,4.162,1482,5.235,1483,4.162,1484,4.162,1485,4.162,1486,4.162,1487,4.162,1488,4.162,1489,4.162,1490,4.162,1491,4.162,1492,4.162,1493,4.162,1494,4.162,1495,4.162,1496,4.162,1497,4.162,1498,3.062,1499,4.162,1500,4.162]],["title/modules.html",[1501,3.8]],["body/modules.html",[45,0.026,207,0.026,208,0.026,1501,4.494]],["title/overview.html",[1498,3.325]],["body/overview.html",[2,1.788,45,0.026,207,0.026,208,0.026,717,3.47,744,1.433,846,3.884,1498,3.884,1502,5.28,1503,5.28]],["title/properties.html",[27,0.514,1389,2.343]],["body/properties.html",[27,0.683,45,0.027,207,0.026,208,0.026,1429,4.466,1504,5.313]],["title/miscellaneous/typealiases.html",[1412,1.279,1505,3.995]],["body/miscellaneous/typealiases.html",[26,0.474,45,0.028,56,0.595,207,0.025,208,0.025,745,3.367,748,3.769,770,3.9,774,2.013,785,2.332,786,1.39,787,1.734,788,1.734,789,1.734,1377,4.989,1412,2.351,1506,5.123,1507,5.123,1508,5.123]],["title/miscellaneous/variables.html",[1131,2.939,1412,1.279]],["body/miscellaneous/variables.html",[11,2.727,26,0.343,45,0.029,56,0.668,61,2.13,62,2.13,66,0.815,83,1.529,90,1.006,93,1.772,94,2.23,96,0.628,106,1.846,116,3.116,127,2.42,131,1.366,150,1.083,192,0.506,195,2.098,207,0.021,208,0.021,218,3.116,219,2.437,319,1.432,328,3.563,356,3.194,384,2.23,387,4.085,405,3.194,412,3.224,449,3.422,462,1.584,474,2.89,515,1.529,529,2.437,531,3.116,536,2.205,742,1.45,786,1.006,845,2.437,864,3.116,865,3.116,896,1.701,946,3.116,962,3.575,967,2.727,968,3.988,975,2.205,988,3.116,989,3.116,990,3.116,993,2.437,994,3.116,995,3.116,1131,2.727,1360,3.116,1362,4.085,1374,2.727,1375,3.575,1383,2.727,1384,3.575,1412,1.701,1416,3.116,1419,3.116,1427,4.085,1509,3.707,1510,3.707,1511,3.707,1512,3.707,1513,3.707,1514,3.707,1515,3.707,1516,4.86,1517,3.707,1518,3.707,1519,3.707,1520,3.707,1521,3.707,1522,3.707,1523,3.707,1524,3.707,1525,3.707,1526,3.707,1527,4.86,1528,3.707,1529,3.707,1530,3.707,1531,3.707,1532,3.707,1533,3.707,1534,3.707,1535,3.707,1536,3.707,1537,3.707,1538,3.707,1539,3.707,1540,3.707,1541,3.707,1542,3.707,1543,3.707,1544,3.707,1545,3.707,1546,3.707,1547,3.707,1548,3.707,1549,3.707,1550,3.707]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":427,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1504,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1245,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15",{"_index":1288,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15.0",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1293,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.2rem",{"_index":1352,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3",{"_index":1331,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3rem",{"_index":1294,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3s",{"_index":1280,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.4",{"_index":1333,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.5rem",{"_index":1264,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6",{"_index":1342,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6rem",{"_index":1353,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.7rem",{"_index":1351,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.8rem",{"_index":1295,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.95",{"_index":1235,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.9rem",{"_index":1312,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0/1",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["00f2fe",{"_index":1169,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1",{"_index":331,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["1).padstart(2",{"_index":426,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["1.1rem",{"_index":1252,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.2rem",{"_index":1292,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.3rem",{"_index":1299,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.4",{"_index":1300,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5",{"_index":1307,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5rem",{"_index":1231,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.6",{"_index":1254,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.8rem",{"_index":1249,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["100",{"_index":1160,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["100vh",{"_index":1207,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["10px",{"_index":1242,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["12",{"_index":1502,"title":{},"body":{"overview.html":{}}}],["1200px",{"_index":1256,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["126",{"_index":1329,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["12px",{"_index":1286,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["14",{"_index":1503,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":676,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["15px",{"_index":1238,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["167",{"_index":1338,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["19.0.0",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["19.1.2",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["19.2.0",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["19.2.11",{"_index":1430,"title":{},"body":{"index.html":{}}}],["19.2.16",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["1rem",{"_index":1225,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2",{"_index":717,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1261,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["20",{"_index":1176,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2000",{"_index":570,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["2025",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["20c997",{"_index":1336,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["20px",{"_index":1296,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["234",{"_index":1330,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["250px",{"_index":1354,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["255",{"_index":1234,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["25px",{"_index":1277,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["28a745",{"_index":1335,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2px",{"_index":1285,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2rem",{"_index":1211,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3",{"_index":719,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["3000",{"_index":472,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["300px",{"_index":1349,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["30px",{"_index":1243,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["333",{"_index":1260,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["35px",{"_index":1287,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["38f9d7",{"_index":1171,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3rem",{"_index":1239,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4.4.9",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":694,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["4000",{"_index":456,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["400px",{"_index":1321,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["404",{"_index":705,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["43e97b",{"_index":1170,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["480px",{"_index":1350,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4facfe",{"_index":1168,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4px",{"_index":1305,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["500",{"_index":698,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["5000",{"_index":645,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["500px",{"_index":1246,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["555",{"_index":1269,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["600",{"_index":1270,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["60vh",{"_index":1222,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["666",{"_index":1251,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["667eea",{"_index":1164,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["69",{"_index":1339,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["7.0.0",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1263,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["764ba2",{"_index":1165,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["768px",{"_index":1347,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["8000",{"_index":709,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["8px",{"_index":1276,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["999",{"_index":1322,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["abierta",{"_index":786,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["abiertas",{"_index":1026,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["abre",{"_index":435,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["abrir",{"_index":457,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abriragregaropcion",{"_index":922,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["abrirdialog",{"_index":283,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abrirdialogeditar",{"_index":284,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abstractcontrol",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":527,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["acceptbuttonprops",{"_index":526,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accessors",{"_index":295,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accion",{"_index":1325,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["acciones",{"_index":1324,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["activar",{"_index":587,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["activatedroute",{"_index":1125,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["actual",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["actual_component",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["actualiz",{"_index":484,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualiza",{"_index":475,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizada",{"_index":483,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizar",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["additional",{"_index":1490,"title":{},"body":{"index.html":{}}}],["adicional",{"_index":574,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agreg",{"_index":488,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agrega",{"_index":452,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregada",{"_index":487,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregamos",{"_index":602,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregar",{"_index":436,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregar/editar",{"_index":373,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregaropcion",{"_index":879,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregaropcion(opcion",{"_index":934,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta",{"_index":285,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta(pregunta",{"_index":302,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ahora",{"_index":625,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["al",{"_index":400,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["alias",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1506,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1217,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["allowed",{"_index":1344,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["almacena",{"_index":374,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["altamirano",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1427,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":779,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["angular/compiler",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":350,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["animaciones",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anteriores",{"_index":650,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["antes",{"_index":504,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["análisis",{"_index":236,"title":{},"body":{"components/BannerComponent.html":{}}}],["anónima",{"_index":220,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{}}}],["anónimo",{"_index":234,"title":{},"body":{"components/BannerComponent.html":{}}}],["api/v1/encuestas",{"_index":872,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["aplica",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["app.component.css",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1440,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":1197,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["archivo",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["array",{"_index":1029,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/functions.html":{}}}],["artifacts",{"_index":1463,"title":{},"body":{"index.html":{}}}],["asegurar",{"_index":710,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["asíncrona",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aura",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":1257,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["automatically",{"_index":1441,"title":{},"body":{"index.html":{}}}],["available",{"_index":1454,"title":{},"body":{"index.html":{}}}],["aún",{"_index":1006,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["backend",{"_index":572,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{}}}],["background",{"_index":1208,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["backgroundcolor",{"_index":1163,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["banner",{"_index":210,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["banner.component.css",{"_index":214,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.html",{"_index":213,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":181,"title":{"components/BannerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["barra",{"_index":1313,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["basada",{"_index":754,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["between",{"_index":1291,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["blob",{"_index":827,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["body",{"_index":1289,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1236,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bordercolor",{"_index":1173,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["borderwidth",{"_index":1172,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bottom",{"_index":1175,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["botón",{"_index":380,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["box",{"_index":1240,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["browser",{"_index":1396,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1459,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1460,"title":{},"body":{"index.html":{}}}],["button",{"_index":1326,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:disabled",{"_index":1340,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:hover:not(:disabled",{"_index":1332,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["buttonmodule",{"_index":211,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["básicos",{"_index":615,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cada",{"_index":904,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["calcular",{"_index":1157,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambios",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":901,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["campos",{"_index":542,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelada",{"_index":568,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelar",{"_index":523,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cantidad",{"_index":1311,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["capitalize",{"_index":1297,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card",{"_index":1232,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card:hover",{"_index":1282,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cardmodule",{"_index":1079,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["carga",{"_index":379,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargadas",{"_index":1007,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargados",{"_index":1149,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargando",{"_index":1084,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargar",{"_index":979,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargarpreguntaparaeditar",{"_index":923,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarpreguntaparaeditar(pregunta",{"_index":936,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarresultados",{"_index":1087,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["caso",{"_index":686,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["catcherror",{"_index":783,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["catcherror(this.handleerror",{"_index":807,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["center",{"_index":1219,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cerrar",{"_index":465,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cerrardialogseleccion",{"_index":286,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["chart",{"_index":1320,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["chart.js",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["chartmodule",{"_index":1128,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["choose",{"_index":1486,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":473,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ciertas",{"_index":772,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{}}}],["circle",{"_index":520,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["class",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cli",{"_index":1428,"title":{},"body":{"index.html":{}}}],["clic",{"_index":721,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["clip",{"_index":1266,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["closable",{"_index":514,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["closeonescape",{"_index":516,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["code",{"_index":1446,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":675,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["codigoqr",{"_index":596,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["codigorespuesta",{"_index":633,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["codigoresultados",{"_index":635,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["codigotipoenum",{"_index":853,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":1227,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["column",{"_index":1216,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["come",{"_index":1484,"title":{},"body":{"index.html":{}}}],["comienza",{"_index":255,"title":{},"body":{"components/BannerComponent.html":{}}}],["comienzo",{"_index":260,"title":{},"body":{"components/ComienzoComponent.html":{}}}],["comienzo'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["comienzo.component.css",{"_index":262,"title":{},"body":{"components/ComienzoComponent.html":{}}}],["comienzo.component.html",{"_index":261,"title":{},"body":{"components/ComienzoComponent.html":{}}}],["comienzocomponent",{"_index":183,"title":{"components/ComienzoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["command",{"_index":1478,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["como",{"_index":603,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/OpcionDTO.html":{}}}],["comparte",{"_index":252,"title":{},"body":{"components/BannerComponent.html":{}}}],["compile",{"_index":1461,"title":{},"body":{"index.html":{}}}],["completa",{"_index":842,"title":{},"body":{"interfaces/EncuestaDTO.html":{}}}],["complete",{"_index":545,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["componente",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"overview.html":{}}}],["components/navbar/navbar.component",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["computed",{"_index":1057,"title":{},"body":{"components/SeccionComponent.html":{}}}],["con",{"_index":238,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["conectar",{"_index":702,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conectividad",{"_index":555,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conexión",{"_index":556,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["configurar",{"_index":467,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmación",{"_index":481,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmar",{"_index":513,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmarcrearencuesta",{"_index":287,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminaropcion",{"_index":924,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminaropcion(index",{"_index":939,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminarpregunta",{"_index":288,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminarpregunta(index",{"_index":307,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmationservice",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmdialogmodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error",{"_index":585,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.error('detalles",{"_index":837,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["console.error('error",{"_index":1152,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.error(errormessage",{"_index":838,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["console.log",{"_index":576,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.log('código",{"_index":1138,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('iniciando",{"_index":1140,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('resultados",{"_index":1148,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('visualizarresultadoscomponent",{"_index":1134,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["const",{"_index":412,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["construir",{"_index":658,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["container",{"_index":1205,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contenedor",{"_index":1204,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contenido",{"_index":1255,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["content",{"_index":1221,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contiene",{"_index":845,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["continuar",{"_index":546,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["control",{"_index":405,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["controla",{"_index":370,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controles",{"_index":390,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controlopciones",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlopciones?.value",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo?.value",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copy",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["correctamente",{"_index":495,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["corresponde",{"_index":377,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["corto",{"_index":763,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["coverage",{"_index":1355,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":216,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["crea",{"_index":251,"title":{},"body":{"components/BannerComponent.html":{}}}],["creacion",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["creacionencuestacomponent",{"_index":185,"title":{"components/CreacionEncuestaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["creación",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creación/edición",{"_index":965,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["creada",{"_index":626,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creado",{"_index":655,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creando",{"_index":256,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creandoencuesta",{"_index":275,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["crear",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["crearencuesta",{"_index":289,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta(dto",{"_index":849,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["crearla",{"_index":761,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["create",{"_index":750,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["createencuestadto",{"_index":362,"title":{"interfaces/CreateEncuestaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["createopciondto",{"_index":770,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["createpreguntadto",{"_index":749,"title":{"interfaces/CreatePreguntaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["css",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["csv",{"_index":823,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cuadro",{"_index":503,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cuando",{"_index":971,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cuestión",{"_index":253,"title":{},"body":{"components/BannerComponent.html":{}}}],["currentroute",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":1343,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["código",{"_index":767,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["códigos",{"_index":644,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["danger",{"_index":564,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["data",{"_index":799,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["datasets",{"_index":1099,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["date",{"_index":414,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["date(this.fechavencimiento.value",{"_index":624,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datetime",{"_index":417,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datos",{"_index":245,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["day",{"_index":428,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["day}t${hours}:${minutes",{"_index":434,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ddthh:mm",{"_index":421,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["de",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":734,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["debemos",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["debería",{"_index":606,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["decisiones",{"_index":232,"title":{},"body":{"components/BannerComponent.html":{}}}],["decorador",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["deep",{"_index":1275,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["definidas",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["delay",{"_index":667,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dentro",{"_index":1019,"title":{},"body":{"interfaces/OpcionDTO.html":{}}}],["dependencies",{"_index":1390,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["desarrollado",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["descargado",{"_index":1195,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["descargar",{"_index":1181,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["desconocido",{"_index":831,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["descripcion",{"_index":775,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["deseas",{"_index":511,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["design",{"_index":1345,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["detail",{"_index":450,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["detailed",{"_index":1495,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":237,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["detalles",{"_index":678,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["detección",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determina",{"_index":992,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["development",{"_index":1431,"title":{},"body":{"index.html":{}}}],["devolvi",{"_index":643,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["devuelve",{"_index":496,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog",{"_index":875,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["dialog.component",{"_index":354,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.css",{"_index":878,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.html",{"_index":877,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts",{"_index":874,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:103",{"_index":948,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":937,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":945,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:137",{"_index":956,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:142",{"_index":958,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:147",{"_index":960,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":933,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:179",{"_index":938,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:184",{"_index":944,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:192",{"_index":932,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:197",{"_index":935,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:206",{"_index":942,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":940,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":885,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":886,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":889,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":883,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":950,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":931,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":955,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":891,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":949,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":887,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":953,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:64",{"_index":951,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":930,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":888,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:97",{"_index":947,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog/gestion",{"_index":353,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialoggestionopcionvisible",{"_index":918,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialoggestionpreguntavisible",{"_index":276,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dialogmodule",{"_index":270,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialogseleccionpreguntavisible",{"_index":277,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dinámica",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":1215,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["directive",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["directory",{"_index":1465,"title":{},"body":{"index.html":{}}}],["diseña",{"_index":221,"title":{},"body":{"components/BannerComponent.html":{}}}],["display",{"_index":1213,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["disponible",{"_index":738,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{}}}],["disponibles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["dist",{"_index":1464,"title":{},"body":{"index.html":{}}}],["diálogo",{"_index":372,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["document.body.appendchild(link",{"_index":1188,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.body.removechild(link",{"_index":1190,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.createelement('a",{"_index":1184,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["documentation",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["dropdownmodule",{"_index":917,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dto",{"_index":851,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["dynamic",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":690,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["e2e",{"_index":1481,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1483,"title":{},"body":{"index.html":{}}}],["e74c3c",{"_index":1248,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["e9ecef",{"_index":1314,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ease",{"_index":1281,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["edición",{"_index":376,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["edita",{"_index":459,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editando",{"_index":386,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editar",{"_index":388,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["editarla",{"_index":454,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta",{"_index":290,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta(index",{"_index":311,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["efecto",{"_index":902,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["effect",{"_index":892,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eficiente",{"_index":226,"title":{},"body":{"components/BannerComponent.html":{}}}],["ejecutado",{"_index":1135,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ejecutándose",{"_index":703,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["el",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["elimin",{"_index":493,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["elimina",{"_index":489,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminación",{"_index":561,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminada",{"_index":492,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminar",{"_index":558,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion",{"_index":925,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion(index",{"_index":941,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminarpregunta",{"_index":291,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminarpregunta(index",{"_index":313,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["emilia",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["emite",{"_index":911,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["en",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":1258,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["encontrado",{"_index":707,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encontrar",{"_index":464,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta",{"_index":138,"title":{"interfaces/Encuesta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["encuesta'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["encuesta.codigoqr",{"_index":612,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.css",{"_index":274,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.html",{"_index":273,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts",{"_index":266,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta.component.ts:100",{"_index":315,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:113",{"_index":300,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:123",{"_index":301,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:139",{"_index":312,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:171",{"_index":305,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:176",{"_index":304,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:211",{"_index":314,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:225",{"_index":318,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:232",{"_index":306,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:261",{"_index":320,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:300",{"_index":309,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:334",{"_index":310,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:48",{"_index":329,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:51",{"_index":334,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:52",{"_index":338,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:53",{"_index":322,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:54",{"_index":327,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:57",{"_index":325,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:60",{"_index":337,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:63",{"_index":324,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:66",{"_index":335,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:67",{"_index":332,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:70",{"_index":299,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:85",{"_index":340,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:90",{"_index":342,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:95",{"_index":344,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.dto",{"_index":364,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{}}}],["encuesta.dto.ts",{"_index":746,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"coverage.html":{}}}],["encuesta.enlacecorto",{"_index":610,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.nombre",{"_index":616,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.preguntas",{"_index":617,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.preguntas.length",{"_index":618,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.preguntas?.length",{"_index":621,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta/creacion",{"_index":265,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta=${res.id}&codigo",{"_index":663,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuestadto",{"_index":752,"title":{"interfaces/EncuestaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["encuestaresponse",{"_index":798,"title":{"interfaces/EncuestaResponse.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["encuestas",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["encuestasservice",{"_index":278,"title":{"injectables/EncuestasService.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["end",{"_index":1480,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":706,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["enlace",{"_index":762,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlacecorto",{"_index":595,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["enlaces",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["enlaces'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlaces.component.ts",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["enlaces?id",{"_index":662,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["enum",{"_index":1132,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["enumerations",{"_index":1413,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/codigo",{"_index":857,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["enums/tipos",{"_index":357,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enunciado",{"_index":1021,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["enviar",{"_index":575,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["envía",{"_index":571,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err",{"_index":677,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error",{"_index":684,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error.message",{"_index":697,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.message",{"_index":683,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.status",{"_index":680,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.statustext",{"_index":682,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.url",{"_index":685,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["error",{"_index":462,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["error(errormessage",{"_index":839,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error.component",{"_index":360,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["error.component.css",{"_index":1072,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.html",{"_index":1071,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.ts",{"_index":1070,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["error.error",{"_index":832,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error.error.message",{"_index":834,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error.message",{"_index":836,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error.status}\\nmensaje",{"_index":835,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["error/texto",{"_index":359,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["errordetail",{"_index":687,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores",{"_index":529,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["errores.join",{"_index":544,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.length",{"_index":541,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('debe",{"_index":540,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('el",{"_index":535,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errorevent",{"_index":833,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["errormessage",{"_index":829,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["errors",{"_index":580,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errorsummary",{"_index":693,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["es",{"_index":536,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["esmultiplechoice",{"_index":926,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(controltipo.value",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esmultiplechoice(tipo",{"_index":943,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(tipo.value",{"_index":1003,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["especificas",{"_index":736,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["específica",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["específico",{"_index":1334,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["específicos",{"_index":530,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["espera",{"_index":589,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["esperada",{"_index":1022,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["est",{"_index":385,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["esta",{"_index":512,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estadistica",{"_index":1309,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estadisticas",{"_index":1308,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estado",{"_index":378,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estadísticas",{"_index":240,"title":{},"body":{"components/BannerComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estamos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["estar",{"_index":737,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["este",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["estefanía",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["estilos",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["estos",{"_index":601,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["estructura",{"_index":629,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["están",{"_index":246,"title":{},"body":{"components/BannerComponent.html":{}}}],["estás",{"_index":510,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["etc",{"_index":1023,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["event",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evento",{"_index":898,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["example",{"_index":1434,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":562,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["execute",{"_index":1472,"title":{},"body":{"index.html":{}}}],["existen",{"_index":982,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["existente",{"_index":476,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["existentes",{"_index":443,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["exitosa",{"_index":1193,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exitosamente",{"_index":627,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["export",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportación",{"_index":1192,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportandocsv",{"_index":1085,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportar",{"_index":822,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportarcsv",{"_index":1088,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportarresultadoscsv",{"_index":1030,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["exportarresultadoscsv(idencuesta",{"_index":824,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["extends",{"_index":747,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["f093fb",{"_index":1166,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f5576c",{"_index":1167,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f8f9fa",{"_index":1304,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["false",{"_index":548,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["falso",{"_index":990,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":549,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fecha",{"_index":396,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fechaseleccionada",{"_index":623,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fechavencimiento",{"_index":298,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fff",{"_index":1174,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["files",{"_index":1445,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1267,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["filter",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["finalizar",{"_index":381,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["flex",{"_index":1214,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["floatlabel",{"_index":268,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["floatlabelmodule",{"_index":876,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["following",{"_index":1477,"title":{},"body":{"index.html":{}}}],["font",{"_index":1229,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["footer",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":279,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["form.haserror(\"opcionesrequeridas",{"_index":1009,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["form.touched",{"_index":733,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["forma",{"_index":218,"title":{},"body":{"components/BannerComponent.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":347,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formatear",{"_index":415,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol",{"_index":348,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formcontrol(null",{"_index":395,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol(pregunta",{"_index":486,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata",{"_index":593,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.fechavencimiento",{"_index":598,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.nombre",{"_index":597,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.preguntas",{"_index":599,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formgroup",{"_index":328,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":269,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formulario",{"_index":366,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["framework",{"_index":1485,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1423,"title":{},"body":{"index.html":{}}}],["fue",{"_index":569,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["function",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1418,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":1271,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["generado",{"_index":766,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["generar",{"_index":607,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["generate",{"_index":1451,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1425,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["gestionar",{"_index":895,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gestionopciondialogcomponent",{"_index":187,"title":{"components/GestionOpcionDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["gestionpreguntadialogcomponent",{"_index":191,"title":{"components/GestionPreguntaDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["getchartdata",{"_index":1089,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartdata(pregunta",{"_index":1096,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartoptions",{"_index":1090,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getfechaminima",{"_index":292,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getfechavencimiento",{"_index":343,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getnombre",{"_index":341,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getopciones",{"_index":959,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["getporcentajeopcion",{"_index":1091,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getporcentajeopcion(opcion",{"_index":1107,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getpreguntas",{"_index":339,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getter",{"_index":403,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gettexto",{"_index":890,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["getting",{"_index":1421,"title":{"index.html":{}},"body":{}}],["gettipo",{"_index":957,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettipopreguntapresentacion",{"_index":293,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(pregunta.tipo",{"_index":728,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(tipo",{"_index":316,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipospreguntapresentacion",{"_index":927,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettotalrespuestasopcion",{"_index":1092,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gettotalrespuestasopcion(pregunta",{"_index":1110,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gradient(135deg",{"_index":1210,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["grafico",{"_index":1318,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["group",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('opciones",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('tipo",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gráfico",{"_index":1161,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gráficos",{"_index":239,"title":{},"body":{"components/BannerComponent.html":{}}}],["h1",{"_index":1259,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h2",{"_index":1247,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h3",{"_index":1226,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h4",{"_index":1302,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h5",{"_index":1319,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ha",{"_index":654,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["habilita",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hace",{"_index":860,"title":{},"body":{"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["hacer",{"_index":863,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["han",{"_index":1194,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["handleerror",{"_index":1031,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["handleerror(error",{"_index":828,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["hay",{"_index":449,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["haz",{"_index":720,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["header",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["height",{"_index":1206,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["helpbuilding",{"_index":1458,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1316,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["hijos",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["hours",{"_index":430,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["http",{"_index":865,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1439,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":777,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["httperrorresponse",{"_index":778,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["icon",{"_index":517,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["id",{"_index":631,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["id_pregunta",{"_index":796,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["idencuesta",{"_index":855,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["identificador",{"_index":843,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["identifier",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1027,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["idx",{"_index":727,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ignacio",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":1076,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["importados",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["important",{"_index":1327,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["includes",{"_index":1448,"title":{},"body":{"index.html":{}}}],["includes(tipo",{"_index":996,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["including",{"_index":1494,"title":{},"body":{"index.html":{}}}],["incluyendo",{"_index":651,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incompleta",{"_index":642,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incompletos",{"_index":619,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incorporada",{"_index":398,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["indefinidamente",{"_index":739,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicepreguntaeditando",{"_index":280,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["information",{"_index":1493,"title":{},"body":{"index.html":{}}}],["ingresa",{"_index":716,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ingresar",{"_index":1010,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["inicializa",{"_index":389,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["iniciando",{"_index":577,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inicio",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(activatedroute",{"_index":1121,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(confirmationservice",{"_index":321,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inject(encuestasservice",{"_index":326,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inject(httpclient",{"_index":802,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["inject(messageservice",{"_index":333,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(respuestasservice",{"_index":1118,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(router",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["injectable",{"_index":776,"title":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["injectables",{"_index":846,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"overview.html":{}}}],["inmediatamente",{"_index":646,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["input",{"_index":416,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["input('15vw",{"_index":1050,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('40vw",{"_index":1054,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('70vw",{"_index":1052,"title":{},"body":{"components/SeccionComponent.html":{}}}],["inputs",{"_index":881,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inputtextmodule",{"_index":267,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["insights",{"_index":228,"title":{},"body":{"components/BannerComponent.html":{}}}],["instanceof",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["instrucciones",{"_index":715,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["intenta",{"_index":691,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["interface",{"_index":743,"title":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["interfaces",{"_index":744,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"overview.html":{}}}],["interfaces/create",{"_index":363,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaces/encuesta.dto",{"_index":859,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["interfaces/pregunta.dto",{"_index":355,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaz",{"_index":753,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["internet",{"_index":689,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["interno",{"_index":699,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inválido",{"_index":586,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inyección",{"_index":862,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["inyectados",{"_index":369,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["iscreationpage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["ishomepage",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["ispresentacionenlacespage",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["isresponderencuestapage",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["isresultadospage",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["italic",{"_index":1323,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["item",{"_index":1303,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["items",{"_index":1218,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["jos",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["judith",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":1220,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["karma",{"_index":1473,"title":{},"body":{"index.html":{}}}],["kloster",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["la",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":522,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["labels",{"_index":1098,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["las",{"_index":975,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1064,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["leftmargin",{"_index":1045,"title":{},"body":{"components/SeccionComponent.html":{}}}],["legend",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["life",{"_index":455,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["limpiar",{"_index":648,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["linde",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":1253,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["linear",{"_index":1209,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link",{"_index":1183,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.click",{"_index":1189,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.download",{"_index":1186,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.href",{"_index":1185,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["list",{"_index":1453,"title":{},"body":{"index.html":{}}}],["lista",{"_index":758,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{}}}],["literal",{"_index":946,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1212,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["local",{"_index":418,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["los",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maia",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":1102,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["manera",{"_index":225,"title":{},"body":{"components/BannerComponent.html":{}}}],["map",{"_index":784,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["map(response",{"_index":808,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["margin",{"_index":1063,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maría",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round((opcion.cantidad_respuestas",{"_index":1159,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["max",{"_index":1061,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maxwidth",{"_index":1046,"title":{},"body":{"components/SeccionComponent.html":{}}}],["media",{"_index":1346,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["mejores",{"_index":231,"title":{},"body":{"components/BannerComponent.html":{}}}],["menos",{"_index":401,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mensaje",{"_index":480,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mensajes",{"_index":900,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["message",{"_index":509,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["messagemodule",{"_index":272,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["messageservice",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadatos",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["micaela",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["mientras",{"_index":590,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["min",{"_index":1058,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["minutes",{"_index":432,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["minutos",{"_index":254,"title":{},"body":{"components/BannerComponent.html":{}}}],["minwidth",{"_index":1047,"title":{},"body":{"components/SeccionComponent.html":{}}}],["miscellaneous",{"_index":1412,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":420,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["model",{"_index":893,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["model(null",{"_index":954,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["model.required",{"_index":897,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["modify",{"_index":1444,"title":{},"body":{"index.html":{}}}],["modo",{"_index":382,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modoedicion",{"_index":281,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modules",{"_index":1501,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":760,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["month",{"_index":424,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["more",{"_index":1492,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["mostrarerroresvalidacion",{"_index":294,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["muestra",{"_index":501,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{}}}],["más",{"_index":700,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["máxima",{"_index":248,"title":{},"body":{"components/BannerComponent.html":{}}}],["método",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["mínima",{"_index":410,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["módulos",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["múltiple",{"_index":993,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":1452,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["navbar.component.css",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":80,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["navegar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1438,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["navigateto(route",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":460,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["necesarios",{"_index":641,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["needs",{"_index":1489,"title":{},"body":{"index.html":{}}}],["new",{"_index":393,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1146,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ng",{"_index":1274,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":1093,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["nico",{"_index":844,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["nombre",{"_index":297,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["nombre.invalid",{"_index":722,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombre.touched",{"_index":723,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombrepregunta",{"_index":559,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["none",{"_index":1278,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasabiertas",{"_index":1202,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasopciones",{"_index":1203,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["now",{"_index":413,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["now.getfullyear",{"_index":423,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nueva",{"_index":437,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["nuevamente",{"_index":692,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["null",{"_index":968,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":952,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["number",{"_index":308,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numero",{"_index":791,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numeropregunta",{"_index":794,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["número",{"_index":1017,"title":{},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["o",{"_index":474,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":594,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["obligatoria",{"_index":792,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obligatorio",{"_index":537,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["observable",{"_index":780,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtener",{"_index":409,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["obtenerencuestaparaparticipacion",{"_index":1032,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerencuestaparaparticipacion(id",{"_index":803,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta",{"_index":1033,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta(codigoresultados",{"_index":820,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenida",{"_index":809,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["obtenido",{"_index":1139,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["obtiene",{"_index":592,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["obtén",{"_index":227,"title":{},"body":{"components/BannerComponent.html":{}}}],["ocurrido",{"_index":830,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["one",{"_index":1487,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":1077,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opacity",{"_index":1341,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["opcion.cantidad_respuestas",{"_index":1156,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion.dto",{"_index":771,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["opcion.dto.ts",{"_index":1377,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["opcion.texto",{"_index":730,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["opcion_multiple_seleccion_multiple",{"_index":788,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcion_multiple_seleccion_simple",{"_index":787,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcional",{"_index":735,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["opciondto",{"_index":1015,"title":{"interfaces/OpcionDTO.html":{}},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["opciones",{"_index":742,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["opciones.touched",{"_index":1008,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value",{"_index":1005,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value.length",{"_index":1004,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opcionesnovacias",{"_index":962,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opcionesrequeridas",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opcionrespuesta",{"_index":790,"title":{"interfaces/OpcionRespuesta.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["opcionseleccionada",{"_index":920,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opción",{"_index":896,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1437,"title":{},"body":{"index.html":{}}}],["operación",{"_index":567,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["optimiza",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1467,"title":{},"body":{"index.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["orden",{"_index":1018,"title":{},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["outlined",{"_index":525,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["output",{"_index":894,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["outputs",{"_index":882,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["overflow",{"_index":1315,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["overview",{"_index":1498,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1250,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["package",{"_index":1389,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1106,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["padre",{"_index":912,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["page",{"_index":1500,"title":{},"body":{"index.html":{}}}],["para",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["payload",{"_index":817,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pequeño",{"_index":666,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["performance",{"_index":1468,"title":{},"body":{"index.html":{}}}],["permitida",{"_index":411,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["pero",{"_index":755,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["persiste",{"_index":552,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["personalizadas",{"_index":222,"title":{},"body":{"components/BannerComponent.html":{}}}],["personalizado",{"_index":970,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["peticiones",{"_index":864,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/variables.html":{}}}],["petición",{"_index":867,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["pi",{"_index":518,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["pick",{"_index":748,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":806,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":819,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pipe(filter(event",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1457,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1103,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["poder",{"_index":453,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["por",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["porcentaje",{"_index":1158,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["position",{"_index":1104,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["post",{"_index":868,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["powerful",{"_index":1449,"title":{},"body":{"index.html":{}}}],["preciso",{"_index":235,"title":{},"body":{"components/BannerComponent.html":{}}}],["pregunta",{"_index":192,"title":{"interfaces/Pregunta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pregunta${encuesta.preguntas.length",{"_index":656,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["pregunta.dto",{"_index":751,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{}}}],["pregunta.dto.ts",{"_index":769,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["pregunta.enum",{"_index":358,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.enum.ts",{"_index":1375,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pregunta.id",{"_index":813,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.numero",{"_index":814,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones",{"_index":729,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.foreach(opcion",{"_index":983,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["pregunta.opciones.length",{"_index":741,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.map((opcion",{"_index":1162,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.reduce((total",{"_index":1155,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.respuestas_abiertas?.length",{"_index":1201,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.texto",{"_index":471,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.tipo",{"_index":815,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta?.texto",{"_index":560,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaaeditar",{"_index":921,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["preguntadto",{"_index":303,"title":{"interfaces/PreguntaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["preguntaeliminada",{"_index":490,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaeliminada.texto",{"_index":494,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas",{"_index":296,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["preguntas.invalid",{"_index":732,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.length",{"_index":731,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.value",{"_index":725,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaseleccionada",{"_index":282,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaslength",{"_index":620,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["presentacion",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["presentacionenlacescomponent",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["presentación",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["preset",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primeicons",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":967,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["primeng/api",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/button",{"_index":215,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/card",{"_index":1126,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/chart",{"_index":1129,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/confirmdialog",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/dialog",{"_index":352,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/dropdown",{"_index":961,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/floatlabel",{"_index":346,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/inputtext",{"_index":345,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/message",{"_index":365,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["primeng/progressspinner",{"_index":1127,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/themes",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["primeng/toast",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primera",{"_index":258,"title":{},"body":{"components/BannerComponent.html":{}}}],["primero",{"_index":451,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["principal",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["private",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["probar",{"_index":554,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["problema",{"_index":551,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesamos",{"_index":591,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesar",{"_index":613,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["production",{"_index":1466,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":1317,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["progressspinnermodule",{"_index":1080,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["project",{"_index":1424,"title":{},"body":{"index.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"properties.html":{}}}],["propiedad",{"_index":757,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["propiedades",{"_index":773,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{}}}],["protegidos",{"_index":247,"title":{},"body":{"components/BannerComponent.html":{}}}],["proveedor",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":800,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["providehttpclient",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1086,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pudo",{"_index":463,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["puede",{"_index":764,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["puedes",{"_index":1198,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["página",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["qr",{"_index":768,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["qrcode",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["qu",{"_index":383,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["que",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":674,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["question",{"_index":519,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["radius",{"_index":1237,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["reactiveformsmodule",{"_index":271,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reactivo",{"_index":367,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["readonly",{"_index":919,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["real",{"_index":242,"title":{},"body":{"components/BannerComponent.html":{}}}],["reales",{"_index":609,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["realiza",{"_index":866,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["realizar",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recopila",{"_index":223,"title":{},"body":{"components/BannerComponent.html":{}}}],["recopiladas",{"_index":1200,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["redirección",{"_index":660,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirecturl",{"_index":661,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigiendo",{"_index":672,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigir",{"_index":670,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reference",{"_index":1499,"title":{},"body":{"index.html":{}}}],["references",{"_index":1496,"title":{},"body":{"index.html":{}}}],["registrarrespuestas",{"_index":1034,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestas(id",{"_index":816,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["registrarrespuestasdto",{"_index":797,"title":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["reject",{"_index":566,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rejectbuttonprops",{"_index":521,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reload",{"_index":1442,"title":{},"body":{"index.html":{}}}],["representa",{"_index":841,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["requerida",{"_index":402,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requerido",{"_index":724,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["requeridos",{"_index":543,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requiere",{"_index":600,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requieren",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":884,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["res",{"_index":628,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigorespuesta",{"_index":634,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigoresultados",{"_index":636,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.id",{"_index":632,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reservados",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":928,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetea",{"_index":903,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reseteado",{"_index":714,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resetear",{"_index":438,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["resetearopciones",{"_index":929,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetee",{"_index":712,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resources",{"_index":1491,"title":{},"body":{"index.html":{}}}],["responder",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["responderencuestacomponent",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["respondiendo",{"_index":1025,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["response",{"_index":1147,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.data",{"_index":1151,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.id",{"_index":810,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["response.nombre",{"_index":811,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["response.preguntas.map((pregunta",{"_index":812,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["responsetype",{"_index":826,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["responsive",{"_index":1101,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["respuesta",{"_index":630,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["respuesta=${res.codigorespuesta}&codigo",{"_index":664,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["respuestapreguntadto",{"_index":795,"title":{"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestas",{"_index":224,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["respuestasservice",{"_index":801,"title":{"injectables/RespuestasService.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["respuestausuario",{"_index":793,"title":{"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["resultado",{"_index":1272,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resultados.component.css",{"_index":1082,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.html",{"_index":1083,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts",{"_index":1075,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["resultados.component.ts:123",{"_index":1100,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:140",{"_index":1095,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:30",{"_index":1122,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:31",{"_index":1123,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:32",{"_index":1119,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:33",{"_index":1117,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:36",{"_index":1120,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:37",{"_index":1114,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:38",{"_index":1113,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:39",{"_index":1115,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:40",{"_index":1116,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:43",{"_index":1124,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:45",{"_index":1112,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:62",{"_index":1094,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:82",{"_index":1111,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:88",{"_index":1109,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:94",{"_index":1097,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.nombre",{"_index":1196,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados=${res.codigoresultados",{"_index":665,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resultados_encuesta_${this.resultados.id}.csv",{"_index":1187,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["results",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":550,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rgba(0",{"_index":1244,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(102",{"_index":1328,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(255",{"_index":1233,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(40",{"_index":1337,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["right",{"_index":1066,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rightmargin",{"_index":1048,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rocha",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["roszezuk",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["routermodule",{"_index":212,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1433,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1475,"title":{},"body":{"index.html":{}}}],["running",{"_index":1436,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["rutas",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":782,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["rápida",{"_index":263,"title":{},"body":{"components/ComienzoComponent.html":{}}}],["rápido",{"_index":233,"title":{},"body":{"components/BannerComponent.html":{}}}],["s",{"_index":657,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["salida",{"_index":899,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["scaffolding",{"_index":1447,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1455,"title":{},"body":{"index.html":{}}}],["se",{"_index":384,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":583,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion",{"_index":1042,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion.component.css",{"_index":1044,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion.component.html",{"_index":1043,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion/seccion.component",{"_index":351,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seccioncomponent",{"_index":198,"title":{"components/SeccionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["secondary",{"_index":524,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seguridad",{"_index":249,"title":{},"body":{"components/BannerComponent.html":{}}}],["seguro",{"_index":244,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["selecciona",{"_index":740,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["seleccionada",{"_index":375,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seleccionadas",{"_index":1028,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["selección",{"_index":387,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["ser",{"_index":765,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["serveonce",{"_index":1435,"title":{},"body":{"index.html":{}}}],["server",{"_index":1432,"title":{},"body":{"index.html":{}}}],["services/encuestas.service",{"_index":361,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["services/respuestas.service",{"_index":1130,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["servicio",{"_index":708,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["servicios",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["servidor",{"_index":557,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["settimeout",{"_index":671,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["severity",{"_index":446,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["shadow",{"_index":1241,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["shouldshowheaderfooter",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"miscellaneous/variables.html":{}}}],["siempre",{"_index":711,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["signal",{"_index":330,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["signal(false",{"_index":323,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["signal(null",{"_index":336,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["simple",{"_index":219,"title":{},"body":{"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["sin",{"_index":704,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sistema",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["size",{"_index":1230,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["solid",{"_index":1306,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["solo",{"_index":756,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["son",{"_index":695,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["space",{"_index":1290,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["speed",{"_index":1469,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1224,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["src/.../app.config.ts",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../codigo",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":1507,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../opciones",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../respuestas.service.ts",{"_index":1508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tipos",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/banner/banner.component.ts",{"_index":209,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/components/comienzo/comienzo.component.ts",{"_index":259,"title":{},"body":{"components/ComienzoComponent.html":{},"coverage.html":{}}}],["src/app/components/creacion",{"_index":264,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["src/app/components/enlaces/presentacion",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["src/app/components/gestion",{"_index":873,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/respuestas/responder",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["src/app/components/resultados/visualizar",{"_index":1074,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts",{"_index":1041,"title":{},"body":{"components/SeccionComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts:10",{"_index":1055,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:11",{"_index":1053,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:12",{"_index":1051,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:13",{"_index":1056,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:15",{"_index":1068,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/texto",{"_index":1069,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["src/app/enums/codigo",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/tipos",{"_index":1374,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/create",{"_index":745,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/encuesta.dto.ts",{"_index":840,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/opcion.dto.ts",{"_index":1016,"title":{},"body":{"interfaces/OpcionDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/pregunta.dto.ts",{"_index":1020,"title":{},"body":{"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/respuesta.dto.ts",{"_index":1024,"title":{},"body":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"coverage.html":{}}}],["src/app/services/encuestas.service.ts",{"_index":847,"title":{},"body":{"injectables/EncuestasService.html":{},"coverage.html":{}}}],["src/app/services/encuestas.service.ts:10",{"_index":856,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:13",{"_index":850,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:27",{"_index":854,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/respuestas.service.ts",{"_index":774,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/respuestas.service.ts:107",{"_index":1035,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:113",{"_index":1036,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:54",{"_index":1040,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:56",{"_index":1037,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:78",{"_index":1039,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:83",{"_index":1038,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/validators/opciones",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":1078,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["start",{"_index":1348,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["started",{"_index":1422,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":679,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["statustext",{"_index":681,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["sticky",{"_index":547,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["store",{"_index":1462,"title":{},"body":{"index.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["string(now.getdate()).padstart(2",{"_index":429,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.gethours()).padstart(2",{"_index":431,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getminutes()).padstart(2",{"_index":433,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getmonth",{"_index":425,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["strings",{"_index":604,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["style",{"_index":1049,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["styles",{"_index":1073,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["styleurl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["styleurls",{"_index":1081,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["su",{"_index":573,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["subscribe",{"_index":1145,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["subscribe((event",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":482,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["such",{"_index":1456,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1488,"title":{},"body":{"index.html":{}}}],["summary",{"_index":448,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sus",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["suscribirse",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["súper",{"_index":250,"title":{},"body":{"components/BannerComponent.html":{}}}],["table",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["tarde",{"_index":701,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tarjeta",{"_index":1273,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tema",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["temporal",{"_index":1180,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["temporalmente",{"_index":966,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tendr",{"_index":759,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["tenemos",{"_index":614,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["test",{"_index":1474,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1482,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1479,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1471,"title":{},"body":{"index.html":{}}}],["text",{"_index":1223,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["texto",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["texto.invalid",{"_index":915,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["texto.touched",{"_index":916,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["textoerrorcomponent",{"_index":200,"title":{"components/TextoErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["textual",{"_index":497,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["theme",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.agregaropcion.emit(opcion",{"_index":910,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.agregarpregunta.emit(pregunta",{"_index":991,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargando",{"_index":1143,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cargarpreguntaparaeditar(preguntaaeditar",{"_index":973,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargarresultados",{"_index":1141,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cerrar",{"_index":913,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.codigoresultados",{"_index":1136,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.confirmationservice.close",{"_index":647,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":508,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.creandoencuesta.set(false",{"_index":713,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.creandoencuesta.set(true",{"_index":588,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.crearencuesta",{"_index":528,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.currentroute",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/presentacion",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/responder",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/resultados",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialoggestionopcionvisible.set(true",{"_index":997,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.dialoggestionpreguntavisible.set(true",{"_index":442,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(false",{"_index":466,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(true",{"_index":458,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.eliminaropcion(index",{"_index":999,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.eliminarpregunta(index",{"_index":565,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.error",{"_index":1142,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.exportandocsv",{"_index":1178,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.fechavencimiento.value",{"_index":622,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form",{"_index":392,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.errors",{"_index":581,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('fechavencimiento",{"_index":408,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('nombre",{"_index":406,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('opciones",{"_index":987,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('preguntas",{"_index":404,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('texto",{"_index":908,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('texto')?.value",{"_index":909,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.form.get('tipo",{"_index":986,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.markallastouched",{"_index":532,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.reset",{"_index":907,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.valid",{"_index":506,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value",{"_index":579,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value.fechavencimiento",{"_index":582,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.httpclient.get",{"_index":871,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/${idencuesta}/csv/${codigoresultados",{"_index":825,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/estructura/${token",{"_index":805,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/resultados/${codigoresultados",{"_index":821,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.httpclient.post('/api/v1/encuestas",{"_index":869,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.post(`/api/v1/respuestas/${id}/${codigo",{"_index":818,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["this.indicepreguntaeditando",{"_index":478,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set",{"_index":440,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set(index",{"_index":469,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.ispresentacionenlacespage",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresponderencuestapage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresultadospage",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.leftmargin",{"_index":1065,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.maxwidth",{"_index":1062,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.messageservice.add",{"_index":445,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["this.messageservice.clear",{"_index":652,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.minwidth",{"_index":1060,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.modoedicion",{"_index":477,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(false",{"_index":439,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(true",{"_index":468,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.mostrarerroresvalidacion",{"_index":507,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.errors?.['required",{"_index":534,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.invalid",{"_index":533,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.opciones.clear",{"_index":978,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.push",{"_index":984,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.removeat(index",{"_index":998,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntaaeditar",{"_index":972,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntas.at(index)?.setvalue(pregunta",{"_index":479,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.at(index)?.value",{"_index":461,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.errors?.['required",{"_index":539,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.invalid",{"_index":538,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.length",{"_index":444,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.push",{"_index":485,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.removeat(index",{"_index":491,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(null",{"_index":441,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(pregunta",{"_index":470,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.reset",{"_index":974,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.resetearopciones",{"_index":976,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.respuestasservice.exportarresultadoscsv(this.resultados.id",{"_index":1179,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.respuestasservice.obtenerresultadosencuesta(this.codigoresultados",{"_index":1144,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados",{"_index":1150,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados.id",{"_index":1177,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.rightmargin",{"_index":1067,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.route.snapshot.parammap.get('codigoresultados",{"_index":1137,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.router.events",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/presentacion",{"_index":673,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.router.navigate([route",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.texto.setvalue(pregunta.texto",{"_index":980,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.tipo.setvalue(pregunta.tipo",{"_index":981,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible",{"_index":906,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible.set(false",{"_index":914,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["throwerror",{"_index":781,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["tiempo",{"_index":241,"title":{},"body":{"components/BannerComponent.html":{}}}],["tiene",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tieneitems",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tieneitems(array",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tieneitems(controlopciones.value",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipo",{"_index":319,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tipo.enum",{"_index":858,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["tipo.enum.ts",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tipo.invalid",{"_index":1000,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.touched",{"_index":1001,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.value",{"_index":1002,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipocodres",{"_index":640,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipocodresp",{"_index":639,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipoid",{"_index":637,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion",{"_index":499,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion.tipo",{"_index":500,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiporespuesta",{"_index":785,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tipos",{"_index":985,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipospreguntapresentacion",{"_index":356,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tipospreguntapresentacion.find",{"_index":498,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiposrespuestaenum",{"_index":317,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tiposrespuestaenum.abierta",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_multiple",{"_index":994,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_simple",{"_index":995,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.verdadero_falso",{"_index":988,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":1298,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["toastmodule",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["toasts",{"_index":649,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["toda",{"_index":861,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["todas",{"_index":977,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["todos",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["token",{"_index":804,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["tomar",{"_index":230,"title":{},"body":{"components/BannerComponent.html":{}}}],["tools",{"_index":1450,"title":{},"body":{"index.html":{}}}],["top",{"_index":1301,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["total",{"_index":1154,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["totalmente",{"_index":243,"title":{},"body":{"components/BannerComponent.html":{}}}],["totalrespuestas",{"_index":1108,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["track",{"_index":726,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["traer",{"_index":870,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta",{"_index":848,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta(idencuesta",{"_index":852,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["transform",{"_index":1283,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transition",{"_index":1279,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["translatey",{"_index":1284,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transparent",{"_index":1268,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["triangle",{"_index":563,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["true",{"_index":515,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":257,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["tus",{"_index":217,"title":{},"body":{"components/BannerComponent.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1505,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":638,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["título",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["un",{"_index":502,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["una",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":611,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["unit",{"_index":1470,"title":{},"body":{"index.html":{}}}],["url",{"_index":659,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["usa",{"_index":553,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usando",{"_index":718,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usar",{"_index":1133,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["use",{"_index":1476,"title":{},"body":{"index.html":{}}}],["usepointstyle",{"_index":1105,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["using",{"_index":1426,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":668,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{}}}],["utilidades",{"_index":368,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["utilizado",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["vacias.validator",{"_index":964,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["vacias.validator.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vacíos",{"_index":605,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valid",{"_index":578,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valida",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validación",{"_index":531,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":969,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["validadores",{"_index":391,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validar",{"_index":505,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validationerrors",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":349,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators.minlength(1",{"_index":399,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validators.required",{"_index":394,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators/opciones",{"_index":963,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["valiosos",{"_index":229,"title":{},"body":{"components/BannerComponent.html":{}}}],["valores",{"_index":608,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["variable",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1131,"title":{"miscellaneous/variables.html":{}},"body":{"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["vea",{"_index":669,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vecimiento",{"_index":407,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vencimiento",{"_index":397,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ver",{"_index":1199,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["verdadero",{"_index":989,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["verdadero_falso",{"_index":789,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["verifica",{"_index":688,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["verificar",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["verifique",{"_index":1153,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["version",{"_index":1429,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":905,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["visibilidad",{"_index":371,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["visible",{"_index":880,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["visit",{"_index":1497,"title":{},"body":{"index.html":{}}}],["visualizar",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["visualizarresultadoscomponent",{"_index":203,"title":{"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/ComienzoComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válido",{"_index":584,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válidos",{"_index":696,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["warn",{"_index":447,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["webkit",{"_index":1265,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["weight",{"_index":1262,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["whenever",{"_index":1443,"title":{},"body":{"index.html":{}}}],["white",{"_index":1228,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["width",{"_index":1059,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1182,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1191,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["wrap",{"_index":1310,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["xito",{"_index":653,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["y",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":422,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["yyyy",{"_index":419,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["zone.js",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            ConfirmDialogModule\n                            ToastModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRoute\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isCreationPage\n                            \n                            \n                                isHomePage\n                            \n                            \n                                isPresentacionEnlacesPage\n                            \n                            \n                                isResponderEncuestaPage\n                            \n                            \n                                isResultadosPage\n                            \n                            \n                                navigateTo\n                            \n                            \n                                shouldShowHeaderFooter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isCreationPage\n                        \n                    \n                \n            \n            \n                \nisCreationPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHomePage\n                        \n                    \n                \n            \n            \n                \nisHomePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPresentacionEnlacesPage\n                        \n                    \n                \n            \n            \n                \nisPresentacionEnlacesPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResponderEncuestaPage\n                        \n                    \n                \n            \n            \n                \nisResponderEncuestaPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResultadosPage\n                        \n                    \n                \n            \n            \n                \nisResultadosPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldShowHeaderFooter\n                        \n                    \n                \n            \n            \n                \nshouldShowHeaderFooter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Sistema de Encuestas'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router, RouterOutlet, NavigationEnd } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n// import { NavbarComponent } from './components/navbar/navbar.component';\n\n// Decorador que define los metadatos del componente principal de la aplicación\n@Component({\n  selector: 'app-root', // Selector utilizado en el HTML para este componente\n  imports: [RouterOutlet, ConfirmDialogModule, ToastModule, CommonModule], // Módulos importados para el template\n  templateUrl: './app.component.html', // Ruta del archivo de template HTML\n  styleUrl: './app.component.css', // Ruta del archivo de estilos CSS\n  providers: [ConfirmationService, MessageService], // Servicios disponibles para el componente y sus hijos\n})\nexport class AppComponent {\n  title = 'Sistema de Encuestas'; // Título de la aplicación\n  currentRoute = ''; // Ruta actual para navegación dinámica\n\n  private router = inject(Router);\n\n  constructor() {\n    // Suscribirse a los cambios de ruta para actualizar la navegación\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentRoute = event.url;\n      });\n  }\n\n  // Método para verificar si estamos en la página de inicio\n  isHomePage(): boolean {\n    return this.currentRoute === '/' || this.currentRoute === '';\n  }\n\n  // Método para verificar si estamos en la página de creación\n  isCreationPage(): boolean {\n    return this.currentRoute === '/creacion';\n  }\n\n  // Método para verificar si estamos en la página de presentación de enlaces\n  isPresentacionEnlacesPage(): boolean {\n    return this.currentRoute.includes('/presentacion-enlaces');\n  }\n\n  // Método para verificar si estamos en la página de responder encuesta\n  isResponderEncuestaPage(): boolean {\n    return this.currentRoute.includes('/responder/');\n  }\n\n  // Método para verificar si estamos en la página de resultados\n  isResultadosPage(): boolean {\n    return this.currentRoute.includes('/resultados/');\n  }\n\n  // Método para verificar si debemos mostrar header y footer\n  shouldShowHeaderFooter(): boolean {\n    return !this.isPresentacionEnlacesPage() &&\n           !this.isResponderEncuestaPage() &&\n           !this.isResultadosPage();\n  }\n\n  // Método para navegar a una ruta específica\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      Sistema de Encuestas\n    \n    \n      \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n      \n    \n  \n\n\n\n\n  \n  \n\n\n\n\n  \n    \n      \n        Sistema de Encuestas\n        &copy; 2025 Todos los derechos reservados\n      \n\n      \n        Desarrollado por:\n        \n          Estefanía Altamirano\n          Micaela Kloster\n          Ignacio José Rocha\n          Maia Judith Roszezuk\n          María Emilia Van de Linde\n        \n      \n    \n  \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Sistema de Encuestas                                                                Crear Encuesta                                                                    Inicio                                                                    Inicio                                                            Crear Encuesta                                                      Sistema de Encuestas        © 2025 Todos los derechos reservados                    Desarrollado por:                  Estefanía Altamirano          Micaela Kloster          Ignacio José Rocha          Maia Judith Roszezuk          María Emilia Van de Linde                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/banner/banner.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-banner\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n            \n                styleUrl\n                ./banner.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-banner',\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './banner.component.html',\n  styleUrl: './banner.component.css'\n})\nexport class BannerComponent {\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n  \n\n  \n  \n    \n      \n      \n        \n          \n        \n      \n\n      \n      \n        Creá tus encuestas\n        de forma simple y anónima\n      \n\n      \n      \n        Diseña encuestas personalizadas, recopila respuestas de manera eficiente\n        y obtén insights valiosos para tomar mejores decisiones.\n      \n\n      \n      \n        \n          ⚡\n          Rápido\n        \n        \n          🔒\n          Anónimo\n        \n        \n          🎯\n          Preciso\n        \n      \n\n      \n      \n        \n          \n            📊\n            Análisis Detallado\n            Obtén insights valiosos con gráficos y estadísticas en tiempo real\n          \n          \n            🔒\n            Totalmente Seguro\n            Tus datos y respuestas están protegidos con la máxima seguridad\n          \n          \n            ⚡\n            Súper Rápido\n            Crea y comparte encuestas en cuestión de minutos\n          \n        \n        ¡Comienza creando tu primera encuesta!\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                  Creá tus encuestas        de forma simple y anónima                          Diseña encuestas personalizadas, recopila respuestas de manera eficiente        y obtén insights valiosos para tomar mejores decisiones.                                    ⚡          Rápido                          🔒          Anónimo                          🎯          Preciso                                                        📊            Análisis Detallado            Obtén insights valiosos con gráficos y estadísticas en tiempo real                                🔒            Totalmente Seguro            Tus datos y respuestas están protegidos con la máxima seguridad                                ⚡            Súper Rápido            Crea y comparte encuestas en cuestión de minutos                          ¡Comienza creando tu primera encuesta!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComienzoComponent.html":{"url":"components/ComienzoComponent.html","title":"component - ComienzoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComienzoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/comienzo/comienzo.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comienzo\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comienzo.component.html\n            \n\n\n\n            \n                styleUrl\n                ./comienzo.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-comienzo',\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './comienzo.component.html',\n  styleUrl: './comienzo.component.css'\n})\nexport class ComienzoComponent {\n\n}\n\n    \n\n    \n        Creá una encuesta\n\n    Simple\n    Rápida\n    Anónima\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Creá una encuesta    Simple    Rápida    Anónima'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComienzoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreacionEncuestaComponent.html":{"url":"components/CreacionEncuestaComponent.html","title":"component - CreacionEncuestaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreacionEncuestaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-creacion-encuesta\n            \n\n\n            \n                imports\n                \n                            InputTextModule\n                            FloatLabel\n                            FormsModule\n                                SeccionComponent\n                            ButtonModule\n                            DialogModule\n                                GestionPreguntaDialogComponent\n                            ReactiveFormsModule\n                                TextoErrorComponent\n                            RouterModule\n                            MessageModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./creacion-encuesta.component.html\n            \n\n\n\n            \n                styleUrl\n                ./creacion-encuesta.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                creandoEncuesta\n                            \n                            \n                                dialogGestionPreguntaVisible\n                            \n                            \n                                dialogSeleccionPreguntaVisible\n                            \n                            \n                                    Private\n                                encuestasService\n                            \n                            \n                                form\n                            \n                            \n                                indicePreguntaEditando\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                modoEdicion\n                            \n                            \n                                preguntaSeleccionada\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirDialog\n                            \n                            \n                                abrirDialogEditar\n                            \n                            \n                                agregarPregunta\n                            \n                            \n                                cerrarDialogSeleccion\n                            \n                            \n                                confirmarCrearEncuesta\n                            \n                            \n                                confirmarEliminarPregunta\n                            \n                            \n                                crearEncuesta\n                            \n                            \n                                editarPregunta\n                            \n                            \n                                eliminarPregunta\n                            \n                            \n                                getFechaMinima\n                            \n                            \n                                getTipoPreguntaPresentacion\n                            \n                            \n                                    Private\n                                mostrarErroresValidacion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    preguntas\n                                \n                                \n                                    nombre\n                                \n                                \n                                    fechaVencimiento\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialog\n                        \n                    \n                \n            \n            \n                \nabrirDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialogEditar\n                        \n                    \n                \n            \n            \n                \nabrirDialogEditar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n            \n                \nagregarPregunta(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrarDialogSeleccion\n                        \n                    \n                \n            \n            \n                \ncerrarDialogSeleccion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarCrearEncuesta\n                        \n                    \n                \n            \n            \n                \nconfirmarCrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarPregunta\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:300\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editarPregunta\n                        \n                    \n                \n            \n            \n                \neditarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarPregunta\n                        \n                    \n                \n            \n            \n                \neliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFechaMinima\n                        \n                    \n                \n            \n            \n                \ngetFechaMinima()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTipoPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTipoPreguntaPresentacion(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mostrarErroresValidacion\n                        \n                    \n                \n            \n            \n                \n                        \n                    mostrarErroresValidacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creandoEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogSeleccionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EncuestasService\n\n                    \n                \n                \n                    \n                        Default value : inject(EncuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indicePreguntaEditando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(-1)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modoEdicion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        preguntas\n                    \n                \n\n                \n                    \n                        getpreguntas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nombre\n                    \n                \n\n                \n                    \n                        getnombre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fechaVencimiento\n                    \n                \n\n                \n                    \n                        getfechaVencimiento()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:95\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { GestionPreguntaDialogComponent } from '../gestion-pregunta-dialog/gestion-pregunta-dialog.component';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { EncuestasService } from '../../services/encuestas.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CreateEncuestaDTO } from '../../interfaces/create-encuesta.dto';\nimport { MessageModule } from 'primeng/message';\n\n@Component({\n  selector: 'app-creacion-encuesta',\n  imports: [\n    InputTextModule,\n    FloatLabel,\n    FormsModule,\n    SeccionComponent,\n    ButtonModule,\n    DialogModule,\n    GestionPreguntaDialogComponent,\n    ReactiveFormsModule,\n    TextoErrorComponent,\n    RouterModule,\n    MessageModule,\n  ],\n  templateUrl: './creacion-encuesta.component.html',\n  styleUrl: './creacion-encuesta.component.css',\n})\nexport class CreacionEncuestaComponent {\n  // Formulario reactivo principal para la creación de la encuesta\n  form: FormGroup;\n\n  // Servicios y utilidades inyectados\n  private messageService: MessageService = inject(MessageService);\n  private router: Router = inject(Router);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n  private encuestasService: EncuestasService = inject(EncuestasService);\n\n  // Controla la visibilidad del diálogo para agregar/editar preguntas\n  dialogGestionPreguntaVisible = signal(false);\n\n  // Almacena la pregunta seleccionada para edición (si corresponde)\n  preguntaSeleccionada = signal(null);\n\n  // Controla el estado de carga del botón finalizar\n  creandoEncuesta = signal(false);\n\n  // Controla si estamos en modo edición y qué pregunta se está editando\n  modoEdicion = signal(false);\n  indicePreguntaEditando = signal(-1);\n\n  // Controla la visibilidad del diálogo de selección de preguntas para editar\n  dialogSeleccionPreguntaVisible = signal(false);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup({\n      nombre: new FormControl('', Validators.required), // Nombre de la encuesta\n      fechaVencimiento: new FormControl(null), // Fecha de vencimiento incorporada\n      preguntas: new FormArray>(\n        [],\n        [Validators.required, Validators.minLength(1)] // Al menos una pregunta requerida\n      ),\n    });\n  }\n\n  // Getter para el FormArray de preguntas\n  get preguntas(): FormArray> {\n    return this.form.get('preguntas') as FormArray>;\n  }\n\n  // Getter para el control del nombre de la encuesta\n  get nombre(): FormControl {\n    return this.form.get('nombre') as FormControl;\n  }\n\n    // Getter para fecha de vecimiento\n  get fechaVencimiento(): FormControl {\n    return this.form.get('fechaVencimiento') as FormControl;\n  }\n\n  // Método para obtener la fecha mínima permitida (fecha actual)\n  getFechaMinima(): string {\n    const now = new Date();\n    // Formatear la fecha para el input datetime-local (YYYY-MM-DDTHH:MM)\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n\n  // Abre el diálogo para agregar una nueva pregunta\n  abrirDialog() {\n    // Resetear modo edición\n    this.modoEdicion.set(false);\n    this.indicePreguntaEditando.set(-1);\n    this.preguntaSeleccionada.set(null);\n\n    this.dialogGestionPreguntaVisible.set(true);\n  }\n\n  // Abre el diálogo para editar preguntas existentes\n  abrirDialogEditar() {\n    if (this.preguntas.length === 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'No hay preguntas',\n        detail: 'Primero agrega una pregunta para poder editarla',\n        life: 4000\n      });\n      return;\n    }\n\n    // Abrir diálogo de selección de preguntas\n    this.dialogSeleccionPreguntaVisible.set(true);\n  }\n\n  // Edita una pregunta específica por índice\n  editarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    if (!pregunta) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No se pudo encontrar la pregunta a editar',\n        life: 4000\n      });\n      return;\n    }\n\n    // Cerrar diálogo de selección\n    this.dialogSeleccionPreguntaVisible.set(false);\n\n    // Configurar modo edición\n    this.modoEdicion.set(true);\n    this.indicePreguntaEditando.set(index);\n    this.preguntaSeleccionada.set(pregunta);\n\n    // Abrir el diálogo de edición\n    this.dialogGestionPreguntaVisible.set(true);\n\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Modo edición',\n      detail: `Editando: \"${pregunta.texto}\"`,\n      life: 3000\n    });\n  }\n\n  // Cierra el diálogo de selección de preguntas\n  cerrarDialogSeleccion() {\n    this.dialogSeleccionPreguntaVisible.set(false);\n  }\n\n  // Agrega una nueva pregunta al FormArray de preguntas o actualiza una existente\n  agregarPregunta(pregunta: PreguntaDTO) {\n    if (this.modoEdicion() && this.indicePreguntaEditando() >= 0) {\n      // Modo edición: actualizar pregunta existente\n      const index = this.indicePreguntaEditando();\n      this.preguntas.at(index)?.setValue(pregunta);\n\n      // Resetear modo edición\n      this.modoEdicion.set(false);\n      this.indicePreguntaEditando.set(-1);\n      this.preguntaSeleccionada.set(null);\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta actualizada',\n        detail: `Se actualizó la pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    } else {\n      // Modo agregar: nueva pregunta\n      this.preguntas.push(\n        new FormControl(pregunta) as FormControl\n      );\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta agregada',\n        detail: `Se agregó la pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    }\n  }\n\n  // Elimina una pregunta del FormArray por índice\n  eliminarPregunta(index: number) {\n    const preguntaEliminada = this.preguntas.at(index)?.value;\n    this.preguntas.removeAt(index);\n\n    // Mostrar mensaje de confirmación\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Pregunta eliminada',\n      detail: preguntaEliminada ? `Se eliminó la pregunta: \"${preguntaEliminada.texto}\"` : 'Pregunta eliminada correctamente',\n      life: 3000\n    });\n  }\n\n  // Devuelve la presentación textual del tipo de pregunta\n  getTipoPreguntaPresentacion(tipo: TiposRespuestaEnum): string {\n    return tiposPreguntaPresentacion.find(\n      (tipoPresentacion) => tipoPresentacion.tipo === tipo\n    )!?.presentacion;\n  }\n\n  // Muestra un cuadro de confirmación antes de crear la encuesta\n  confirmarCrearEncuesta() {\n    // Validar formulario antes de mostrar confirmación\n    if (!this.form.valid) {\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    this.confirmationService.confirm({\n      message: '¿Estás seguro de que deseas crear esta encuesta?',\n      header: 'Confirmar Creación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-question-circle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Crear Encuesta',\n        severity: 'success',\n      },\n      accept: () => {\n        this.crearEncuesta();\n      },\n    });\n  }\n\n  // Muestra errores específicos de validación\n  private mostrarErroresValidacion() {\n    this.form.markAllAsTouched();\n\n    const errores: string[] = [];\n\n    // Validar nombre de encuesta\n    if (this.nombre.invalid) {\n      if (this.nombre.errors?.['required']) {\n        errores.push('El nombre de la encuesta es obligatorio');\n      }\n    }\n\n    // Validar preguntas\n    if (this.preguntas.invalid) {\n      if (this.preguntas.errors?.['required'] || this.preguntas.length === 0) {\n        errores.push('Debe agregar al menos una pregunta');\n      }\n    }\n\n    // Mostrar errores específicos\n    if (errores.length > 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'Campos requeridos',\n        detail: errores.join('. ') + '. Complete todos los campos antes de continuar.',\n        life: 4000,\n        sticky: false\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error de validación',\n        detail: 'Por favor, revisa los campos del formulario. Si el problema persiste, usa el botón \"Probar Conectividad\" para verificar la conexión con el servidor.',\n        life: 4000\n      });\n    }\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una pregunta\n  confirmarEliminarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    const nombrePregunta = pregunta?.texto || 'esta pregunta';\n\n    this.confirmationService.confirm({\n      message: `¿Estás seguro de que deseas eliminar \"${nombrePregunta}\"?`,\n      header: 'Confirmar Eliminación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Eliminar',\n        severity: 'danger',\n      },\n      accept: () => {\n        this.eliminarPregunta(index);\n      },\n      reject: () => {\n        this.messageService.add({\n          severity: 'info',\n          summary: 'Operación cancelada',\n          detail: 'La pregunta no fue eliminada',\n          life: 2000\n        });\n      }\n    });\n  }\n\n  // Envía la encuesta al backend para su creación\n  crearEncuesta() {\n    // Validación adicional antes de enviar\n    console.log('🔍 Iniciando creación de encuesta...');\n    console.log('📋 Estado del formulario:', {\n      valid: this.form.valid,\n      value: this.form.value,\n      errors: this.form.errors,\n      fechaVencimiento: this.form.value.fechaVencimiento\n    });\n\n    // Verificar que el formulario sea válido\n    if (!this.form.valid) {\n      console.error('❌ Formulario inválido:', this.form.errors);\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    // Activar estado de carga\n    this.creandoEncuesta.set(true);\n\n    // Mostrar mensaje de carga\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Creando encuesta...',\n      detail: 'Por favor espera mientras procesamos tu encuesta',\n      life: 4000\n    });\n\n    // Obtiene los datos del formulario\n\n    const formData = this.form.value;\n\n    // Crear el objeto de encuesta con los campos requeridos por el backend\n    const encuesta: CreateEncuestaDTO = {\n      ...this.form.value,\n      enlaceCorto: '',\n      codigoQR: '',\n      nombre: formData.nombre,\n      fechaVencimiento: formData.fechaVencimiento,\n      preguntas: formData.preguntas || []\n    };\n\n\n    // Si el backend requiere estos campos, los agregamos como strings vacíos\n    // El backend debería generar los valores reales\n    if (encuesta.enlaceCorto === undefined) {\n      encuesta.enlaceCorto = '';\n    }\n    if (encuesta.codigoQR === undefined) {\n      encuesta.codigoQR = '';\n    }\n\n    console.log('📝 Datos de la encuesta antes de procesar:', encuesta);\n\n    // Validar que tenemos datos básicos\n    if (!encuesta.nombre || !encuesta.preguntas || encuesta.preguntas.length === 0) {\n      console.error('❌ Datos de encuesta incompletos:', {\n        nombre: encuesta.nombre,\n        preguntasLength: encuesta.preguntas?.length || 0\n      });\n\n      if (this.fechaVencimiento.value) { //validar fecha de vencimiento\n        const fechaSeleccionada = new Date(this.fechaVencimiento.value);\n        const ahora = new Date();\n        \n        if (fechaSeleccionada  {\n        console.log('✅ Encuesta creada exitosamente:', res);\n        console.log('📊 Estructura de la respuesta:', {\n          id: res.id,\n          codigoRespuesta: res.codigoRespuesta,\n          codigoResultados: res.codigoResultados,\n          tipoId: typeof res.id,\n          tipoCodResp: typeof res.codigoRespuesta,\n          tipoCodRes: typeof res.codigoResultados\n        });\n\n        // Verificar que tenemos todos los datos necesarios\n        if (!res.id || !res.codigoRespuesta || !res.codigoResultados) {\n          console.error('❌ Respuesta incompleta del backend:', res);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error en la respuesta del servidor',\n            detail: 'El servidor no devolvió todos los códigos necesarios',\n            life: 5000\n          });\n          return;\n        }\n\n        // Cerrar el diálogo de confirmación inmediatamente\n        this.confirmationService.close();\n\n        // Limpiar todos los toasts anteriores (incluyendo el de \"Creando encuesta...\")\n        this.messageService.clear();\n\n        // Mensaje de éxito detallado\n        this.messageService.add({\n          severity: 'success',\n          summary: '¡Encuesta creada exitosamente!',\n          detail: `La encuesta \"${encuesta.nombre}\" se ha creado correctamente con ${encuesta.preguntas.length} pregunta${encuesta.preguntas.length > 1 ? 's' : ''}`,\n          life: 4000\n        });\n\n        // Construir la URL de redirección\n        const redirectUrl = `/presentacion-enlaces?id-encuesta=${res.id}&codigo-respuesta=${res.codigoRespuesta}&codigo-resultados=${res.codigoResultados}`;\n        console.log('🔗 URL de redirección:', redirectUrl);\n\n        // Pequeño delay para que el usuario vea el mensaje antes de redirigir\n        setTimeout(() => {\n          console.log('🚀 Redirigiendo a:', redirectUrl);\n          this.router.navigate(['/presentacion-enlaces'], {\n            queryParams: {\n              'id-encuesta': res.id,\n              'codigo-respuesta': res.codigoRespuesta,\n              'codigo-resultados': res.codigoResultados\n            }\n          });\n        }, 1500);\n      },\n      error: (err) => {\n        console.error('❌ Error al crear encuesta:', err);\n        console.error('📊 Detalles del error:', {\n          status: err.status,\n          statusText: err.statusText,\n          message: err.message,\n          error: err.error,\n          url: err.url\n        });\n\n        // Cerrar el diálogo de confirmación en caso de error\n        this.confirmationService.close();\n\n        // Mensaje de error detallado\n        let errorDetail = 'Verifica tu conexión a internet e intenta nuevamente';\n        let errorSummary = 'Error al crear la encuesta';\n\n        if (err.status === 400) {\n          errorDetail = 'Los datos de la encuesta no son válidos';\n          if (err.error && err.error.message) {\n            errorDetail += `: ${err.error.message}`;\n          }\n        } else if (err.status === 500) {\n          errorDetail = 'Error interno del servidor. Intenta más tarde';\n        } else if (err.status === 0) {\n          errorDetail = 'No se pudo conectar con el servidor. Verifica que el backend esté ejecutándose';\n          errorSummary = 'Sin conexión al servidor';\n        } else if (err.status === 404) {\n          errorDetail = 'El endpoint de creación de encuestas no fue encontrado';\n          errorSummary = 'Servicio no encontrado';\n        }\n\n        this.messageService.add({\n          severity: 'error',\n          summary: errorSummary,\n          detail: errorDetail,\n          life: 8000,\n          sticky: true\n        });\n      },\n      complete: () => {\n        // Asegurar que el estado de carga siempre se resetee\n        this.creandoEncuesta.set(false);\n        console.log('🔄 Estado de carga reseteado');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n\n\n\n\n  \n  \n\n  \n    \n      Creá una encuesta\n\n      \n      \n        📝 Instrucciones:\n        1. Ingresa un nombre para tu encuesta\n        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"\n        3. Haz clic en \"Finalizar\" para crear tu encuesta\n      \n    \n      \n        \n        Nombre de la encuesta\n      \n      @if (nombre.invalid && nombre.touched) {\n        Requerido\n      }\n    \n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          \n            {{ pregunta.texto }} ({{\n              getTipoPreguntaPresentacion(pregunta.tipo)\n            }})\n          \n          \n            @for (opcion of pregunta.opciones; track i; let i = $index) {\n              \n                {{ opcion.texto }}\n              \n            }\n          \n          \n            \n          \n        \n      \n    }\n    \n      \n        \n        @if (preguntas.length > 0) {\n          \n        }\n      \n      @if (preguntas.invalid && form.touched) {\n        Debe agregar al menos una pregunta\n      }\n    \n\n    \n    \n      \n        \n        Fecha de Vencimiento (Opcional)\n      \n      \n      \n        Si no especificas una fecha, la encuesta estará disponible indefinidamente\n      \n\n      \n      \n      \n    \n\n    \n      {{ creandoEncuesta() ? 'Creando...' : 'Finalizar' }}\n    \n  \n\n\n\n\n\n\n\n  \n    Selecciona la pregunta que deseas editar:\n\n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          \n            Pregunta {{ idx + 1 }}: {{ pregunta.texto }}\n          \n          \n            Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}\n          \n          @if (pregunta.opciones && pregunta.opciones.length > 0) {\n            \n              Opciones:\n              \n                @for (opcion of pregunta.opciones; track i; let i = $index) {\n                  {{ opcion.texto }}\n                }\n              \n            \n          }\n        \n        \n          \n        \n      \n    }\n\n    @if (preguntas.length === 0) {\n      No hay preguntas disponibles para editar.\n    }\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Creá una encuesta                    📝 Instrucciones:        1. Ingresa un nombre para tu encuesta        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"        3. Haz clic en \"Finalizar\" para crear tu encuesta                                Nombre de la encuesta            @if (nombre.invalid && nombre.touched) {        Requerido      }        @for (pregunta of preguntas.value; track idx; let idx = $index) {                                    {{ pregunta.texto }} ({{              getTipoPreguntaPresentacion(pregunta.tipo)            }})                                @for (opcion of pregunta.opciones; track i; let i = $index) {                              {{ opcion.texto }}                          }                                                            }                          @if (preguntas.length > 0) {                  }            @if (preguntas.invalid && form.touched) {        Debe agregar al menos una pregunta      }                                  Fecha de Vencimiento (Opcional)                          Si no especificas una fecha, la encuesta estará disponible indefinidamente                                      {{ creandoEncuesta() ? \\'Creando...\\' : \\'Finalizar\\' }}            Selecciona la pregunta que deseas editar:    @for (pregunta of preguntas.value; track idx; let idx = $index) {                                    Pregunta {{ idx + 1 }}: {{ pregunta.texto }}                                Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}                    @if (pregunta.opciones && pregunta.opciones.length > 0) {                          Opciones:                              @for (opcion of pregunta.opciones; track i; let i = $index) {                  {{ opcion.texto }}                }                                    }                                            }    @if (preguntas.length === 0) {      No hay preguntas disponibles para editar.    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreacionEncuestaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEncuestaDTO.html":{"url":"interfaces/CreateEncuestaDTO.html","title":"interface - CreateEncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-encuesta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            codigoQR\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enlaceCorto\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoQR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoQR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enlaceCorto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enlaceCorto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     CreatePreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CreatePreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreatePreguntaDTO } from './create-pregunta.dto';\nimport { EncuestaDTO } from './encuesta.dto';\n\n// Interfaz para crear una nueva encuesta, basada en EncuestaDTO pero solo con la propiedad 'nombre'\nexport interface CreateEncuestaDTO extends Pick {\n  preguntas: CreatePreguntaDTO[]; // Lista de preguntas que tendrá la encuesta al momento de crearla\n  enlaceCorto?: string; // Enlace corto opcional (puede ser generado por el backend)\n  codigoQR?: string; // Código QR opcional (puede ser generado por el backend)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatePreguntaDTO.html":{"url":"interfaces/CreatePreguntaDTO.html","title":"interface - CreatePreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-pregunta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            opciones\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         CreateOpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CreateOpcionDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateOpcionDTO } from './create-opcion.dto';\nimport { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz para crear una nueva pregunta, basada en PreguntaDTO pero solo con ciertas propiedades\nexport interface CreatePreguntaDTO extends Pick {\n  opciones: CreateOpcionDTO[] // Lista de opciones para la pregunta (si corresponde)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Encuesta.html":{"url":"interfaces/Encuesta.html","title":"interface - Encuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Encuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:         Pregunta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pregunta[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaDTO.html":{"url":"interfaces/EncuestaDTO.html","title":"interface - EncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/encuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            codigoRespuesta\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoRespuesta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoRespuesta:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     PreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz que representa una encuesta completa\nexport interface EncuestaDTO {\n  id: number; // Identificador único de la encuesta\n\n  nombre: string; // Nombre o título de la encuesta\n\n  preguntas: PreguntaDTO[]; // Lista de preguntas que contiene la encuesta\n\n  codigoRespuesta: string; // Código utilizado para responder la encuesta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaResponse.html":{"url":"interfaces/EncuestaResponse.html","title":"interface - EncuestaResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Encuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Encuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncuestasService.html":{"url":"injectables/EncuestasService.html","title":"injectable - EncuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                crearEncuesta\n                            \n                            \n                                traerEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta(dto: CreateEncuestaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traerEncuesta\n                        \n                    \n                \n            \n            \n                \ntraerEncuesta(idEncuesta: number, codigo: string, tipo: CodigoTipoEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tipo\n                                            \n                                                            CodigoTipoEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/encuestas.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { CreateEncuestaDTO } from '../interfaces/create-encuesta.dto';\nimport { Observable } from 'rxjs';\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\nimport { EncuestaDTO } from '../interfaces/encuesta.dto';\n\n@Injectable({ providedIn: 'root' }) // Hace que el servicio esté disponible en toda la app\nexport class EncuestasService {\n  private httpClient = inject(HttpClient); // Inyección del servicio HttpClient para hacer peticiones HTTP\n\n  // Método para crear una nueva encuesta\n  crearEncuesta(dto: CreateEncuestaDTO): Observable {\n    // Realiza una petición POST al backend para crear la encuesta\n    return this.httpClient.post('/api/v1/encuestas', dto);\n  }\n\n  // Método para obtener una encuesta por ID, código y tipo de código\n  traerEncuesta(\n    idEncuesta: number,\n    codigo: string,\n    tipo: CodigoTipoEnum,\n  ): Observable {\n    // Realiza una petición GET al backend para traer los datos de la encuesta\n    return this.httpClient.get(\n      '/api/v1/encuestas/' + idEncuesta + '?codigo=' + codigo + '&tipo=' + tipo,\n    );\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionOpcionDialogComponent.html":{"url":"components/GestionOpcionDialogComponent.html","title":"component - GestionOpcionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionOpcionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-opcion-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            ReactiveFormsModule\n                            FloatLabelModule\n                                TextoErrorComponent\n                            InputTextModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-opcion-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-opcion-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agregar\n                            \n                            \n                                cerrar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarOpcion\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, effect, inject, input, model, output, signal } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DialogModule } from 'primeng/dialog';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\n\n// Componente para gestionar el diálogo de agregar una opción a una pregunta\n@Component({\n  selector: 'app-gestion-opcion-dialog',\n  imports: [\n    DialogModule,\n    ReactiveFormsModule,\n    FloatLabelModule,\n    TextoErrorComponent,\n    InputTextModule,\n    ButtonModule,\n  ],\n  templateUrl: './gestion-opcion-dialog.component.html',\n  styleUrl: './gestion-opcion-dialog.component.css',\n})\nexport class GestionOpcionDialogComponent {\n  visible = model.required(); // Controla la visibilidad del diálogo\n\n  agregarOpcion = output(); // Evento de salida para agregar una opción\n\n  form: FormGroup; // Formulario reactivo para la opción\n\n  private messageService: MessageService = inject(MessageService); // Servicio para mostrar mensajes\n\n  constructor() {\n    // Inicializa el formulario con un campo de texto requerido\n    this.form = new FormGroup({\n      texto: new FormControl('', Validators.required),\n    });\n\n    // Efecto que resetea el formulario cada vez que el diálogo se hace visible\n    effect(() => {\n      if (this.visible()) {\n        this.form.reset();\n      }\n    });\n  }\n\n  // Getter para el control de texto del formulario\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Método para agregar la opción si el formulario es válido\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const opcion: string = this.form.get('texto')?.value;\n    this.agregarOpcion.emit(opcion); // Emite la opción al componente padre\n    this.cerrar(); // Cierra el diálogo\n  }\n\n  // Método para cerrar el diálogo\n  cerrar() {\n    this.visible.set(false);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la opción\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n        Finalizar\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la opción        @if (texto.invalid && texto.touched) {          Requerido        }                    Finalizar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionOpcionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionPreguntaDialogComponent.html":{"url":"components/GestionPreguntaDialogComponent.html","title":"component - GestionPreguntaDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionPreguntaDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-pregunta-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            DropdownModule\n                            ReactiveFormsModule\n                            InputTextModule\n                            FloatLabelModule\n                            ButtonModule\n                                TextoErrorComponent\n                                SeccionComponent\n                                GestionOpcionDialogComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-pregunta-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-pregunta-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                dialogGestionOpcionVisible\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                opcionSeleccionada\n                            \n                            \n                                preguntaAEditar\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirAgregarOpcion\n                            \n                            \n                                agregar\n                            \n                            \n                                agregarOpcion\n                            \n                            \n                                cargarPreguntaParaEditar\n                            \n                            \n                                cerrar\n                            \n                            \n                                confirmarEliminarOpcion\n                            \n                            \n                                eliminarOpcion\n                            \n                            \n                                esMultipleChoice\n                            \n                            \n                                getTiposPreguntaPresentacion\n                            \n                            \n                                reset\n                            \n                            \n                                resetearOpciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                                \n                                    tipo\n                                \n                                \n                                    opciones\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarPregunta\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirAgregarOpcion\n                        \n                    \n                \n            \n            \n                \nabrirAgregarOpcion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n            \n                \nagregarOpcion(opcion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPreguntaParaEditar\n                        \n                    \n                \n            \n            \n                \ncargarPreguntaParaEditar(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarOpcion\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \neliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTiposPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTiposPreguntaPresentacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetearOpciones\n                        \n                    \n                \n            \n            \n                \nresetearOpciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionOpcionVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opcionSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaAEditar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tipo\n                    \n                \n\n                \n                    \n                        gettipo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:142\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        opciones\n                    \n                \n\n                \n                    \n                        getopciones()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:147\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, model, output, signal } from '@angular/core';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { ButtonModule } from 'primeng/button';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { effect } from '@angular/core';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { GestionOpcionDialogComponent } from '../gestion-opcion-dialog/gestion-opcion-dialog.component';\nimport { CreateOpcionDTO } from '../../interfaces/create-opcion.dto';\nimport { opcionesNoVacias } from '../../validators/opciones-no-vacias.validator';\n\n// Componente para gestionar el diálogo de creación/edición de preguntas\n@Component({\n  selector: 'app-gestion-pregunta-dialog',\n  imports: [\n    DialogModule,\n    DropdownModule,\n    ReactiveFormsModule,\n    InputTextModule,\n    FloatLabelModule,\n    ButtonModule,\n    TextoErrorComponent,\n    SeccionComponent,\n    GestionOpcionDialogComponent,\n  ],\n  templateUrl: './gestion-pregunta-dialog.component.html',\n  styleUrl: './gestion-pregunta-dialog.component.css',\n})\nexport class GestionPreguntaDialogComponent {\n  // Formulario reactivo para la pregunta\n  readonly form: FormGroup;\n\n  // Controla la visibilidad del diálogo\n  visible = model.required();\n\n  // Pregunta a editar (opcional)\n  preguntaAEditar = model(null);\n\n  // Controla la visibilidad del diálogo para agregar opciones\n  dialogGestionOpcionVisible = signal(false);\n\n  // Evento de salida para agregar una pregunta\n  agregarPregunta = output();\n\n  // Opción seleccionada temporalmente para agregar\n  opcionSeleccionada = signal | null>(null);\n\n  // Servicios de mensajes y confirmación de PrimeNG\n  private messageService: MessageService = inject(MessageService);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup(\n      {\n        texto: new FormControl('', Validators.required), // Texto de la pregunta\n        tipo: new FormControl(\n          null,\n          Validators.required,\n        ), // Tipo de pregunta\n        opciones: new FormArray>>(\n          [],\n        ), // Opciones de respuesta (si corresponde)\n      },\n      { validators: [opcionesNoVacias] }, // Validador personalizado para opciones\n    );\n\n    // Efecto que resetea el formulario cuando el diálogo se hace visible\n    effect(() => {\n      if (this.visible()) {\n        const preguntaAEditar = this.preguntaAEditar();\n        if (preguntaAEditar) {\n          this.cargarPreguntaParaEditar(preguntaAEditar);\n        } else {\n          this.reset();\n        }\n      }\n    });\n  }\n\n  // Resetea el formulario y las opciones\n  reset() {\n    this.form.reset();\n    this.resetearOpciones();\n  }\n\n  // Elimina todas las opciones del formulario\n  resetearOpciones() {\n    this.opciones.clear();\n  }\n\n  // Carga los datos de una pregunta existente para editar\n  cargarPreguntaParaEditar(pregunta: PreguntaDTO) {\n    // Resetear primero\n    this.reset();\n\n    // Cargar datos básicos\n    this.texto.setValue(pregunta.texto);\n    this.tipo.setValue(pregunta.tipo);\n\n    // Cargar opciones si existen\n    if (pregunta.opciones && pregunta.opciones.length > 0) {\n      pregunta.opciones.forEach(opcion => {\n        this.opciones.push(\n          new FormControl>({\n            texto: opcion.texto,\n          }) as FormControl>\n        );\n      });\n    }\n  }\n\n  // Devuelve los tipos de pregunta disponibles para el selector\n  getTiposPreguntaPresentacion(): {\n    tipo: TiposRespuestaEnum;\n    presentacion: string;\n  }[] {\n    return tiposPreguntaPresentacion;\n  }\n\n  // Getter para el control de texto\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Getter para el control de tipo\n  get tipo(): FormControl {\n    return this.form.get('tipo') as FormControl;\n  }\n\n  // Getter para el FormArray de opciones\n  get opciones(): FormArray>> {\n    return this.form.get('opciones') as FormArray>\n    >;\n  }\n\n  // Agrega la pregunta si el formulario es válido, si no muestra errores\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const pregunta: PreguntaDTO = this.form.value;\n\n    if (pregunta.tipo === TiposRespuestaEnum.VERDADERO_FALSO) {\n    pregunta.opciones = [\n          { numero: 1, texto: 'Verdadero' },\n          { numero: 2, texto: 'Falso' },\n    ];\n    }\n\n    this.agregarPregunta.emit(pregunta); // Emite la pregunta al componente padre\n    this.cerrar();\n  }\n\n  // Cierra el diálogo\n  cerrar() {\n    this.visible.set(false);\n  }\n\n  // Determina si el tipo de pregunta es de opción múltiple o simple\n  esMultipleChoice(tipo: TiposRespuestaEnum) {\n    return [\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    ].includes(tipo);\n  }\n\n  // Abre el diálogo para agregar una nueva opción\n  abrirAgregarOpcion() {\n    this.dialogGestionOpcionVisible.set(true);\n  }\n\n  // Agrega una nueva opción al FormArray de opciones\n  agregarOpcion(opcion: string) {\n    this.opciones.push(\n      new FormControl>({\n        texto: opcion,\n      }) as FormControl>,\n    );\n  }\n\n  // Elimina una opción por índice\n  eliminarOpcion(index: number) {\n    this.opciones.removeAt(index);\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una opción\n  confirmarEliminarOpcion(index: number) {\n    this.confirmationService.confirm({\n      message: 'Confirmar eliminación?',\n      header: 'Confirmación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Confirmar',\n      },\n      accept: () => {\n        this.eliminarOpcion(index);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la pregunta\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n      @if (tipo.invalid && tipo.touched) {\n        Requerido\n      }\n      @if (tipo.value && esMultipleChoice(tipo.value)) {\n        \n          Opciones\n          @if (opciones.value.length > 0) {\n            \n              @for (opcion of opciones.value; track $index; let idx = $index) {\n                \n                  \n                    {{ opcion.texto }}\n                    \n                      \n                    \n                  \n                \n              }\n            \n          } @else {\n            Aún no hay opciones cargadas\n          }\n          \n        \n        @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {\n          Debe ingresar opciones\n        }\n      }\n      \n        \n          {{ preguntaAEditar() ? 'Actualizar' : 'Agregar' }}\n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la pregunta        @if (texto.invalid && texto.touched) {          Requerido        }                  @if (tipo.invalid && tipo.touched) {        Requerido      }      @if (tipo.value && esMultipleChoice(tipo.value)) {                  Opciones          @if (opciones.value.length > 0) {                          @for (opcion of opciones.value; track $index; let idx = $index) {                                                      {{ opcion.texto }}                                                                                                              }                      } @else {            Aún no hay opciones cargadas          }                          @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {          Debe ingresar opciones        }      }                        {{ preguntaAEditar() ? \\'Actualizar\\' : \\'Agregar\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionPreguntaDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n}\n\n    \n\n    \n        \n  \n    Sistema de Encuestas\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sistema de Encuestas          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionDTO.html":{"url":"interfaces/OpcionDTO.html","title":"interface - OpcionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/opcion.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpcionDTO {\n\n  texto: string;   // Texto que se muestra como opción al usuario\n\n  numero: number;  // Número de orden de la opción dentro de la pregunta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionRespuesta.html":{"url":"interfaces/OpcionRespuesta.html","title":"interface - OpcionRespuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionRespuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pregunta.html":{"url":"interfaces/Pregunta.html","title":"interface - Pregunta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            obligatoria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        obligatoria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        obligatoria:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionRespuesta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionRespuesta[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PreguntaDTO.html":{"url":"interfaces/PreguntaDTO.html","title":"interface - PreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/pregunta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionDTO[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TiposRespuestaEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TiposRespuestaEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TiposRespuestaEnum } from '../enums/tipos-pregunta.enum';\nimport { OpcionDTO } from './opcion.dto';\n\n// Interfaz que representa una pregunta de la encuesta\nexport interface PreguntaDTO {\n  id: number; // Identificador único de la pregunta\n\n  numero: number; // Número de orden de la pregunta en la encuesta\n\n  texto: string; // Texto o enunciado de la pregunta\n\n  tipo: TiposRespuestaEnum; // Tipo de respuesta esperada (abierta, opción, etc.)\n\n  opciones?: OpcionDTO[]; // Opciones disponibles (solo si la pregunta es de tipo opción)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDTO.html":{"url":"interfaces/RegistrarRespuestasDTO.html","title":"interface - RegistrarRespuestasDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDto.html":{"url":"interfaces/RegistrarRespuestasDto.html","title":"interface - RegistrarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDTO.html":{"url":"interfaces/RespuestaPreguntaDTO.html","title":"interface - RespuestaPreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDto.html":{"url":"interfaces/RespuestaPreguntaDto.html","title":"interface - RespuestaPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaUsuario.html":{"url":"interfaces/RespuestaUsuario.html","title":"interface - RespuestaUsuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaUsuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numeroPregunta\n                                        \n                                \n                                \n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numeroPregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numeroPregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RespuestasService.html":{"url":"injectables/RespuestasService.html","title":"injectable - RespuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RespuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportarResultadosCSV\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                obtenerEncuestaParaParticipacion\n                            \n                            \n                                obtenerResultadosEncuesta\n                            \n                            \n                                registrarRespuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportarResultadosCSV\n                        \n                    \n                \n            \n            \n                \nexportarResultadosCSV(idEncuesta: number, codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerEncuestaParaParticipacion\n                        \n                    \n                \n            \n            \n                \nobtenerEncuestaParaParticipacion(id: number, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerResultadosEncuesta\n                        \n                    \n                \n            \n            \n                \nobtenerResultadosEncuesta(codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \nregistrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/respuestas.service.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport type TipoRespuesta = 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO';\n\nexport interface OpcionRespuesta {\n  id: number;\n  numero: number;\n  texto: string;\n}\n\nexport interface Pregunta {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TipoRespuesta;\n  obligatoria: boolean;\n  opciones?: OpcionRespuesta[];\n}\n\nexport interface Encuesta {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  preguntas: Pregunta[];\n}\n\nexport interface RespuestaUsuario {\n  numeroPregunta: number;\n  opciones: number[];\n  texto: string;\n}\n\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;\n  tipo: TipoRespuesta;\n  texto?: string;\n  opciones?: number[];\n}\n\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];\n}\n\nexport interface EncuestaResponse {\n  message: string;\n  data: Encuesta;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Ha ocurrido un error desconocido';\n\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Código de error: ${error.status}\\nMensaje: ${error.message}`;\n      if (error.error) {\n        console.error('Detalles del error del servidor:', error.error);\n      }\n    }\n\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeccionComponent.html":{"url":"components/SeccionComponent.html","title":"component - SeccionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeccionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/seccion/seccion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seccion\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./seccion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./seccion.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftMargin\n                            \n                            \n                                maxWidth\n                            \n                            \n                                minWidth\n                            \n                            \n                                rightMargin\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('70vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('40vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-seccion',\n  imports: [],\n  templateUrl: './seccion.component.html',\n  styleUrl: './seccion.component.css'\n})\nexport class SeccionComponent {\n  minWidth = input('40vw');\n  maxWidth = input('70vw');\n  leftMargin = input('15vw');\n  rightMargin = input('15vw');\n\n  style = computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  });\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeccionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextoErrorComponent.html":{"url":"components/TextoErrorComponent.html","title":"component - TextoErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextoErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/texto-error/texto-error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-texto-error\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./texto-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./texto-error.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-texto-error',\n  imports: [],\n  templateUrl: './texto-error.component.html',\n  styleUrl: './texto-error.component.css'\n})\nexport class TextoErrorComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextoErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizarResultadosComponent.html":{"url":"components/VisualizarResultadosComponent.html","title":"component - VisualizarResultadosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizarResultadosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/resultados/visualizar-resultados.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-visualizar-resultados\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            CardModule\n                            ProgressSpinnerModule\n                            ToastModule\n                \n            \n\n            \n                styleUrls\n                ./visualizar-resultados.component.css\n            \n\n\n\n            \n                templateUrl\n                ./visualizar-resultados.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cargando\n                            \n                            \n                                codigoResultados\n                            \n                            \n                                error\n                            \n                            \n                                exportandoCSV\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                    Private\n                                respuestasService\n                            \n                            \n                                resultados\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                TiposRespuestaEnum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cargarResultados\n                            \n                            \n                                exportarCSV\n                            \n                            \n                                getChartData\n                            \n                            \n                                getChartOptions\n                            \n                            \n                                getPorcentajeOpcion\n                            \n                            \n                                getTotalRespuestasOpcion\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cargarResultados\n                        \n                    \n                \n            \n            \n                \n                        \n                    cargarResultados()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportarCSV\n                        \n                    \n                \n            \n            \n                \nexportarCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartData\n                        \n                    \n                \n            \n            \n                \ngetChartData(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { labels: any; datasets: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartOptions\n                        \n                    \n                \n            \n            \n                \ngetChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { responsive: boolean; maintainAspectRatio: boolean; plugins: { legend: { position: string; labels: { usePointStyle: boolean; padding: number; }; }; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPorcentajeOpcion\n                        \n                    \n                \n            \n            \n                \ngetPorcentajeOpcion(opcion: any, totalRespuestas: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRespuestas\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalRespuestasOpcion\n                        \n                    \n                \n            \n            \n                \ngetTotalRespuestasOpcion(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cargando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportandoCSV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        respuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RespuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiposRespuestaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TiposRespuestaEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n// import { ChartModule } from 'primeng/chart';\nimport { RespuestasService } from '../../services/respuestas.service';\nimport { TiposRespuestaEnum } from '../../enums/tipos-pregunta.enum';\n\n@Component({\n  selector: 'app-visualizar-resultados',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    CardModule,\n    ProgressSpinnerModule,\n    ToastModule\n    // ChartModule\n  ],\n  templateUrl: './visualizar-resultados.component.html',\n  styleUrls: ['./visualizar-resultados.component.css'],\n  providers: [MessageService]\n})\nexport class VisualizarResultadosComponent implements OnInit {\n  // Servicios inyectados\n  private route = inject(ActivatedRoute);\n  public router = inject(Router);\n  private respuestasService = inject(RespuestasService);\n  private messageService = inject(MessageService);\n\n  // Variables de estado\n  resultados: any = null;\n  codigoResultados = '';\n  cargando = true;\n  error = '';\n  exportandoCSV = false;\n\n  // Enum para usar en el template\n  TiposRespuestaEnum = TiposRespuestaEnum;\n\n  ngOnInit() {\n    console.log('VisualizarResultadosComponent ngOnInit ejecutado');\n\n    // Obtener el código de resultados de la URL\n    this.codigoResultados = this.route.snapshot.paramMap.get('codigoResultados') || '';\n    console.log('Código de resultados obtenido de la URL:', this.codigoResultados);\n\n    if (this.codigoResultados) {\n      console.log('Iniciando carga de resultados...');\n      this.cargarResultados();\n    } else {\n      console.log('Código de resultados no válido');\n      this.error = 'Código de resultados no válido';\n      this.cargando = false;\n    }\n  }\n\n  private cargarResultados() {\n    this.cargando = true;\n    this.error = '';\n\n    this.respuestasService.obtenerResultadosEncuesta(this.codigoResultados)\n      .subscribe({\n        next: (response) => {\n          console.log('Resultados cargados:', response);\n          this.resultados = response.data;\n          this.cargando = false;\n        },\n        error: (error) => {\n          console.error('Error al cargar resultados:', error);\n          this.error = 'Error al cargar los resultados. Verifique que el enlace sea válido.';\n          this.cargando = false;\n        }\n      });\n  }\n\n  // Método para obtener el total de respuestas de una pregunta de opciones\n  getTotalRespuestasOpcion(pregunta: any): number {\n    if (!pregunta.opciones) return 0;\n    return pregunta.opciones.reduce((total: number, opcion: any) => total + (opcion.cantidad_respuestas || 0), 0);\n  }\n\n  // Método para calcular el porcentaje de una opción\n  getPorcentajeOpcion(opcion: any, totalRespuestas: number): number {\n    if (totalRespuestas === 0) return 0;\n    return Math.round((opcion.cantidad_respuestas / totalRespuestas) * 100);\n  }\n\n  // Método para generar datos del gráfico para preguntas de opciones\n  getChartData(pregunta: any) {\n    if (!pregunta.opciones || pregunta.opciones.length === 0) return null;\n\n    const labels = pregunta.opciones.map((opcion: any) => opcion.texto);\n    const data = pregunta.opciones.map((opcion: any) => opcion.cantidad_respuestas || 0);\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: [\n            '#667eea',\n            '#764ba2',\n            '#f093fb',\n            '#f5576c',\n            '#4facfe',\n            '#00f2fe',\n            '#43e97b',\n            '#38f9d7'\n          ],\n          borderWidth: 2,\n          borderColor: '#fff'\n        }\n      ]\n    };\n  }\n\n  // Opciones del gráfico\n  getChartOptions() {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 20\n          }\n        }\n      }\n    };\n  }\n\n  // Método para exportar resultados a CSV\n  exportarCSV() {\n    if (!this.resultados || !this.resultados.id) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No hay datos para exportar'\n      });\n      return;\n    }\n\n    this.exportandoCSV = true;\n\n    this.respuestasService.exportarResultadosCSV(this.resultados.id, this.codigoResultados)\n      .subscribe({\n        next: (blob) => {\n          // Crear un enlace temporal para descargar el archivo\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `resultados_encuesta_${this.resultados.id}.csv`;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Exportación exitosa',\n            detail: 'Los resultados se han descargado correctamente'\n          });\n\n          this.exportandoCSV = false;\n        },\n        error: (error) => {\n          console.error('Error al exportar CSV:', error);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error al exportar',\n            detail: 'No se pudo descargar el archivo CSV. Intenta nuevamente.'\n          });\n          this.exportandoCSV = false;\n        }\n      });\n  }\n}\n    \n\n    \n        \n  \n\n  \n  \n    \n    Cargando resultados...\n  \n\n  \n  \n    \n      Error al cargar los resultados\n      {{ error }}\n      \n      \n    \n  \n\n  \n  \n    \n    \n      📊 Resultados de la Encuesta\n      {{ resultados.nombre }}\n      \n        Aquí puedes ver todas las respuestas recopiladas para esta encuesta.\n      \n    \n\n    \n    \n      \n        \n          \n            \n              {{ pregunta.numero }}\n              {{ pregunta.tipo }}\n            \n          \n\n          \n            {{ pregunta.texto }}\n          \n\n          \n            \n            \n              Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})\n               0; else noRespuestasAbiertas\">\n                \n                  {{ respuesta }}\n                \n              \n              \n                No hay respuestas para esta pregunta aún.\n              \n            \n\n            \n            \n              \n                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)\n\n                 0; else noRespuestasOpciones\">\n                  \n                  \n                    \n                      \n                        {{ opcion.texto }}\n                        {{ opcion.cantidad_respuestas || 0 }} respuestas\n                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%\n                      \n                      \n                        \n                        \n                      \n                    \n                  \n                \n\n                \n                  No hay respuestas para esta pregunta aún.\n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./visualizar-resultados.component.css\n                \n                /* Contenedor principal */\n.resultados-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 2rem;\n}\n\n/* Estado de carga */\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  text-align: center;\n}\n\n.loading-spinner {\n  margin-bottom: 1rem;\n}\n\n.loading-container h3 {\n  color: white;\n  font-size: 1.5rem;\n  margin: 0;\n}\n\n/* Estado de error */\n.error-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  padding: 2rem;\n}\n\n.error-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 3rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  max-width: 500px;\n  width: 100%;\n}\n\n.error-card h2 {\n  color: #e74c3c;\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n}\n\n.error-card p {\n  color: #666;\n  font-size: 1.1rem;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n}\n\n/* Contenido de los resultados */\n.resultados-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Encabezado de los resultados */\n.resultados-header {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.resultados-header h1 {\n  color: #333;\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.resultados-header h2 {\n  color: #555;\n  font-size: 1.8rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.resultados-descripcion {\n  color: #666;\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin: 0;\n}\n\n/* Preguntas y resultados */\n.preguntas-resultados {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.pregunta-resultado-container {\n  margin-bottom: 1.5rem;\n}\n\n/* Tarjeta de pregunta resultado */\n::ng-deep .pregunta-resultado-card .p-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  border: none;\n  transition: all 0.3s ease;\n}\n\n::ng-deep .pregunta-resultado-card .p-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);\n}\n\n::ng-deep .pregunta-resultado-card .p-card-body {\n  padding: 2rem;\n}\n\n/* Encabezado de pregunta resultado */\n.pregunta-resultado-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  padding: 1rem 2rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border-radius: 15px 15px 0 0;\n}\n\n.pregunta-numero {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n\n.pregunta-tipo {\n  background: rgba(255, 255, 255, 0.2);\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: capitalize;\n}\n\n/* Título de pregunta */\n.pregunta-titulo {\n  color: #333;\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n/* Contenido de resultados */\n.pregunta-resultados-content {\n  margin-top: 1rem;\n}\n\n/* Respuestas abiertas */\n.respuestas-abiertas h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.respuesta-abierta-item {\n  background: #f8f9fa;\n  border-left: 4px solid #667eea;\n  padding: 1rem;\n  margin-bottom: 0.8rem;\n  border-radius: 0 8px 8px 0;\n}\n\n.respuesta-abierta-item p {\n  margin: 0;\n  color: #333;\n  line-height: 1.5;\n}\n\n/* Respuestas de opciones */\n.respuestas-opciones h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.opciones-estadisticas {\n  margin-bottom: 2rem;\n}\n\n.opcion-estadistica {\n  margin-bottom: 1rem;\n}\n\n.opcion-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.opcion-texto {\n  font-weight: 600;\n  color: #333;\n  flex: 1;\n}\n\n.opcion-cantidad {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.opcion-porcentaje {\n  color: #667eea;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.opcion-barra {\n  background: #e9ecef;\n  height: 8px;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.opcion-progreso {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  height: 100%;\n  border-radius: 4px;\n  transition: width 0.3s ease;\n}\n\n/* Gráfico */\n.grafico-container {\n  margin-top: 2rem;\n  text-align: center;\n}\n\n.grafico-container h5 {\n  color: #667eea;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n::ng-deep .resultado-chart {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n/* Sin respuestas */\n.no-respuestas {\n  color: #999;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  margin: 1rem 0;\n}\n\n/* Acciones */\n.acciones-container {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 3rem;\n  padding: 2rem 0;\n  flex-wrap: wrap;\n}\n\n::ng-deep .accion-button {\n  background: linear-gradient(135deg, #667eea, #764ba2) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3) !important;\n}\n\n::ng-deep .accion-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4) !important;\n}\n\n/* Botón CSV específico */\n::ng-deep .csv-button {\n  background: linear-gradient(135deg, #28a745, #20c997) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3) !important;\n}\n\n::ng-deep .csv-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(40, 167, 69, 0.4) !important;\n  background: linear-gradient(135deg, #20c997, #28a745) !important;\n}\n\n::ng-deep .csv-button:disabled {\n  opacity: 0.6 !important;\n  transform: none !important;\n  cursor: not-allowed !important;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .resultados-container {\n    padding: 1rem;\n  }\n\n  .resultados-header {\n    padding: 1.5rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 2rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.5rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1.5rem;\n  }\n\n  .pregunta-resultado-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.2rem;\n  }\n\n  .opcion-info {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 480px) {\n  .resultados-container {\n    padding: 0.5rem;\n  }\n\n  .resultados-header {\n    padding: 1rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 1.8rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.3rem;\n  }\n\n  .resultados-descripcion {\n    font-size: 1rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.1rem;\n  }\n\n  .pregunta-tipo {\n    font-size: 0.7rem;\n    padding: 0.2rem 0.6rem;\n  }\n\n  .respuesta-abierta-item {\n    padding: 0.8rem;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 250px;\n  }\n\n  ::ng-deep .accion-button {\n    padding: 0.8rem 1.5rem !important;\n    font-size: 1rem !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Cargando resultados...                Error al cargar los resultados      {{ error }}                                    📊 Resultados de la Encuesta      {{ resultados.nombre }}              Aquí puedes ver todas las respuestas recopiladas para esta encuesta.                                                                    {{ pregunta.numero }}              {{ pregunta.tipo }}                                            {{ pregunta.texto }}                                                          Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})               0; else noRespuestasAbiertas\">                                  {{ respuesta }}                                                            No hay respuestas para esta pregunta aún.                                                                                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)                 0; else noRespuestasOpciones\">                                                                                                      {{ opcion.texto }}                        {{ opcion.cantidad_respuestas || 0 }} respuestas                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%                                                                                                                                                                                                          No hay respuestas para esta pregunta aún.                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'ComienzoComponent', 'selector': 'app-comienzo'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizarResultadosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/comienzo/comienzo.component.ts\n            \n            component\n            ComienzoComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n            \n            component\n            CreacionEncuestaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/enlaces/presentacion-enlaces.component.ts\n            \n            component\n            PresentacionEnlacesComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n            \n            component\n            GestionOpcionDialogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n            \n            component\n            GestionPreguntaDialogComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/respuestas/responder-encuesta.component.ts\n            \n            component\n            ResponderEncuestaComponent\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/components/resultados/visualizar-resultados.component.ts\n            \n            component\n            VisualizarResultadosComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/seccion/seccion.component.ts\n            \n            component\n            SeccionComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/texto-error/texto-error.component.ts\n            \n            component\n            TextoErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/enums/tipos-pregunta.enum.ts\n            \n            variable\n            tiposPreguntaPresentacion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-encuesta.dto.ts\n            \n            interface\n            CreateEncuestaDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/interfaces/create-opcion.dto.ts\n            \n            type alias\n            CreateOpcionDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-pregunta.dto.ts\n            \n            interface\n            CreatePreguntaDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/encuesta.dto.ts\n            \n            interface\n            EncuestaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/opcion.dto.ts\n            \n            interface\n            OpcionDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/pregunta.dto.ts\n            \n            interface\n            PreguntaDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RegistrarRespuestasDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RespuestaPreguntaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/encuestas.service.ts\n            \n            injectable\n            EncuestasService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            injectable\n            RespuestasService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            Encuesta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            EncuestaResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            OpcionRespuesta\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            Pregunta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RegistrarRespuestasDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RespuestaPreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            interface\n            RespuestaUsuario\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/services/respuestas.service.ts\n            \n            type alias\n            TipoRespuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            esMultipleChoice\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            tieneItems\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            variable\n            opcionesNoVacias\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ~19.2.16\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @primeng/themes : ^19.1.2\n        \n            angularx-qrcode : ^19.0.0\n        \n            chart.js : ^4.4.9\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^19.1.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodigoTipoEnum   (src/.../codigo-tipo.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/codigo-tipo.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CodigoTipoEnum\n                    \n                \n                        \n                            \n                                 RESULTADOS\n                            \n                        \n                        \n                            \n                                Value : RESULTADOS\n                            \n                        \n                        \n                            \n                                 RESPUESTA\n                            \n                        \n                        \n                            \n                                Value : RESPUESTA\n                            \n                        \n            \n        \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                 VERDADERO_FALSO\n                            \n                        \n                        \n                            \n                                Value : VERDADERO_FALSO\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            esMultipleChoice   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tieneItems   (src/.../opciones-no-vacias.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tieneItems\n                        \n                    \n                \n            \n            \n                \ntieneItems(array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated using Angular CLI version 19.2.11.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateOpcionDTO   (src/.../create-opcion.dto.ts)\n                        \n                        \n                            TipoRespuesta   (src/.../respuestas.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/create-opcion.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateOpcionDTO\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/app/services/respuestas.service.ts\n    \n    \n        \n            \n                \n                    \n                    TipoRespuesta\n                \n            \n            \n                \n                        \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            opcionesNoVacias   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tiposPreguntaPresentacion   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), // Optimiza la detección de cambios en Angular\n    provideRouter(routes), // Proveedor de rutas definidas en app.routes.ts\n    provideAnimationsAsync(), // Habilita animaciones de Angular de forma asíncrona\n    providePrimeNG({\n      theme: {\n        preset: Aura, // Aplica el tema Aura de PrimeNG\n      },\n    }),\n    provideHttpClient() // Proveedor para realizar peticiones HTTP\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        opcionesNoVacias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  formGroup: AbstractControl,\n): ValidationErrors | null => {\n  const group = formGroup as FormGroup;\n  const controlTipo = group.get('tipo'); // Control que indica el tipo de pregunta\n  const controlOpciones = group.get('opciones'); // Control que contiene las opciones\n\n  // Si no hay tipo o no hay opciones, no se valida (no hay error)\n  if (!controlTipo?.value || !controlOpciones?.value) {\n    return null;\n  }\n\n  // Si es una pregunta de opción y no tiene opciones, retorna error\n  if (\n    esMultipleChoice(controlTipo.value) &&\n    !tieneItems(controlOpciones.value)\n  ) {\n    return { opcionesRequeridas: true }; // Error: se requieren opciones\n  }\n\n  return null; // No hay errores de validación\n}\n                    \n                \n\n\n        \n    \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tiposPreguntaPresentacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { tipo: TiposRespuestaEnum.ABIERTA, presentacion: 'Abierta' },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    presentacion: 'Selección Simple',\n  },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n    presentacion: 'Selección Múltiple',\n  },\n  {\n    tipo: TiposRespuestaEnum.VERDADERO_FALSO,\n    presentacion: 'Verdadero o Falso',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
