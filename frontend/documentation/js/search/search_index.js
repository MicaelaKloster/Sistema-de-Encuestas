var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.585,1,1.185]],["body/components/AppComponent.html",[0,0.811,1,1.799,2,1.401,3,0.294,4,0.261,5,1.918,6,1.135,7,1.135,8,0.261,9,2.271,10,1.135,11,2.862,12,3.356,13,2.705,14,2.633,15,2.416,16,2.862,17,1.636,18,4.576,19,4.576,20,3.841,21,3.841,22,1.636,23,3.902,24,1.772,25,3.902,26,0.229,27,0.473,28,4.576,29,2.259,30,3.674,31,4.576,32,1.926,33,5.009,34,5.009,35,5.009,36,5.009,37,5.009,38,3.902,39,5.009,40,2.994,41,2.776,42,3.902,43,2.706,44,2.59,45,0.03,46,1.906,47,2.706,48,2.706,49,2.706,50,2.706,51,3.902,52,0.941,53,2.706,54,1.336,55,1.523,56,0.497,57,0.835,58,2.271,59,2.307,60,2.706,61,1.774,62,1.774,63,2.706,64,2.862,65,4.643,66,0.7,67,3.62,68,2.706,69,1.512,70,1.336,71,0.901,72,4.576,73,1.458,74,2.271,75,2.706,76,1.6,77,1.985,78,2.706,79,2.271,80,2.706,81,0.439,82,1.049,83,1.049,84,2.706,85,1.039,86,2.079,87,1.771,88,0.707,89,2.862,90,2.271,91,0.897,92,0.811,93,2.1,94,0.829,95,1.985,96,1.985,97,2.706,98,5.31,99,2.862,100,2.271,101,1.985,102,1.771,103,1.771,104,1.401,105,1.049,106,2.706,107,0.294,108,0.972,109,0.901,110,2.271,111,2.862,112,2.706,113,2.706,114,2.271,115,1.985,116,2.706,117,2.706,118,2.706,119,2.706,120,2.706,121,5.009,122,2.706,123,3.071,124,4.643,125,1.159,126,4.457,127,5.31,128,5.31,129,2.319,130,2.271,131,1.636,132,2.271,133,3.275,134,2.706,135,1.513,136,0.941,137,2.706,138,1.401,139,2.706,140,2.706,141,1.985,142,1.771,143,2.706,144,2.706,145,2.706,146,2.706,147,2.706,148,2.706,149,0.48,150,2.271,151,2.706,152,2.698,153,2.706,154,3.902,155,3.275,156,3.902,157,3.902,158,3.902,159,0.958,160,3.902,161,3.902,162,3.902,163,3.902,164,3.902,165,3.902,166,3.902,167,3.902,168,3.902,169,3.902,170,3.902,171,3.902,172,3.902,173,3.902,174,1.135,175,1.636,176,1.135,177,2.1,178,1.135,179,1.135,180,0.972,181,1.135,182,0.972,183,1.636,184,0.972,185,1.636,186,1.049,187,1.636,188,0.972,189,0.294,190,0.972,191,1.135,192,1.049,193,1.049,194,1.135,195,1.049,196,0.972,197,1.135,198,0.972,199,0.439,200,1.135,201,0.972,202,1.135,203,1.049,204,1.135,205,0.017,206,0.017]],["title/components/BannerComponent.html",[0,0.585,180,1.185]],["body/components/BannerComponent.html",[0,0.92,1,1.232,2,1.653,3,0.372,4,0.331,5,1.438,6,1.438,7,1.438,8,0.331,10,1.438,14,2.714,15,2.51,17,1.929,22,1.929,24,2.09,45,0.03,55,1.532,66,0.698,67,3.9,69,1.377,71,1.142,73,1.848,83,0.964,85,0.779,86,2.359,88,0.749,89,3.376,91,0.9,93,1.929,94,0.697,95,2.516,96,2.516,104,2.294,107,0.372,108,1.232,111,3.809,131,1.438,135,1.33,136,0.816,138,1.232,159,0.842,174,1.438,175,1.929,176,1.438,177,2.327,178,1.438,179,1.438,180,1.993,181,1.438,182,1.232,183,1.929,184,1.232,185,1.929,186,1.33,187,1.929,188,1.232,189,0.372,190,1.232,191,1.438,192,1.33,193,1.33,194,1.438,195,1.33,196,1.232,197,1.438,198,1.232,199,0.556,200,1.438,201,1.232,202,1.438,203,1.33,204,1.438,205,0.02,206,0.02,207,2.879,208,2.245,209,5.79,210,2.798,211,4.603,212,4.603,213,1.13,214,4.603,215,1.463,216,4.359,217,4.603,218,2.798,219,3.809,220,4.603,221,4.603,222,1.848,223,2.879,224,2.516,225,2.516,226,1.142,227,2.879,228,2.245,229,0.91,230,3.43,231,3.863,232,5.551,233,3.376,234,3.376,235,4.603,236,4.603,237,4.603,238,4.603,239,1.993,240,4.603,241,4.603,242,5.551,243,5.551,244,5.551,245,4.603,246,4.603,247,4.603,248,4.603,249,3.863,250,4.603,251,3.863,252,4.603,253,4.603,254,4.603,255,3.863,256,1.22,257,4.603,258,4.603,259,4.603,260,4.603,261,4.603,262,4.603,263,4.603,264,4.603,265,4.603,266,4.603,267,4.603,268,3.863,269,3.863,270,4.603]],["title/components/CreacionEncuestaComponent.html",[0,0.585,182,1.185]],["body/components/CreacionEncuestaComponent.html",[0,0.442,1,0.392,2,0.678,3,0.365,4,0.105,5,0.458,6,0.458,7,0.458,8,0.105,10,0.458,12,2.698,13,2.175,14,2.07,15,1.915,17,0.792,22,0.792,24,0.858,26,0.419,27,0.229,29,2.537,30,2.698,32,0.932,40,1.633,41,2.646,44,2.19,45,0.03,52,0.595,54,1.659,55,1.313,56,0.493,57,1.037,59,2.684,61,1.76,62,1.818,64,1.385,66,0.701,67,0.715,69,1.386,70,0.539,71,0.363,73,0.588,76,0.646,81,0.709,83,0.951,85,1.121,87,0.715,88,0.724,91,0.64,92,1.05,93,0.792,94,0.746,102,0.715,103,1.236,104,0.896,107,0.118,108,0.392,110,0.916,115,0.801,123,0.588,124,2.095,125,0.623,126,0.916,129,1.903,130,3.088,131,1.654,132,0.916,133,0.916,135,0.423,136,1.073,138,0.678,141,2.698,142,1.236,149,0.94,150,0.916,152,2.248,155,2.496,159,0.825,174,0.458,175,0.792,176,0.458,177,1.247,178,0.458,179,0.458,180,0.392,181,0.458,182,1.068,183,0.792,184,0.392,185,1.046,186,1.303,187,0.792,188,1.068,189,0.676,190,0.392,191,0.458,192,0.423,193,0.968,194,0.458,195,0.423,196,1.068,197,0.458,198,1.068,199,0.306,200,0.458,201,0.392,202,0.458,203,0.423,204,0.458,205,0.008,206,0.008,210,1.345,213,0.268,215,0.825,218,1.345,219,1.831,222,0.588,224,1.385,228,0.715,231,1.585,233,1.385,249,1.585,255,1.585,256,0.789,268,2.496,269,2.496,271,4.919,272,4.919,273,0.916,274,1.831,275,2.496,276,2.496,277,1.831,278,1.831,279,2.496,280,1.889,281,1.889,282,3.361,283,2.496,284,2.496,285,2.175,286,1.831,287,2.496,288,2.496,289,2.496,290,2.974,291,2.974,292,1.585,293,2.974,294,2.974,295,1.889,296,2.496,297,1.889,298,1.889,299,2.974,300,1.889,301,2.974,302,1.385,303,1.386,304,1.524,305,3.088,306,1.889,307,1.092,308,1.092,309,1.889,310,1.468,311,1.092,312,1.092,313,1.092,314,1.889,315,0.992,316,1.092,317,1.092,318,1.889,319,1.092,320,1.889,321,1.092,322,1.092,323,1.889,324,1.602,325,1.092,326,0.835,327,1.092,328,1.585,329,1.092,330,3.503,331,1.092,332,1.092,333,1.585,334,1.092,335,1.946,336,1.092,337,1.633,338,3.204,339,1.092,340,1.236,341,1.092,342,1.092,343,1.889,344,1.092,345,1.092,346,1.092,347,1.092,348,1.092,349,1.092,350,1.092,351,1.092,352,0.801,353,0.801,354,3.312,355,2.894,356,0.801,357,0.715,358,0.916,359,0.801,360,0.715,361,0.916,362,0.916,363,0.715,364,0.715,365,0.715,366,0.646,367,0.801,368,0.916,369,1.117,370,0.801,371,0.801,372,1.092,373,3.061,374,0.801,375,1.092,376,0.916,377,2.181,378,1.385,379,1.585,380,1.092,381,1.092,382,0.916,383,4.173,384,0.363,385,2.465,386,2.465,387,2.496,388,2.82,389,3.946,390,1.092,391,1.114,392,1.068,393,1.889,394,2.496,395,3.312,396,0.801,397,0.916,398,0.916,399,0.801,400,2.583,401,1.385,402,1.092,403,3.935,404,2.82,405,1.092,406,1.092,407,0.982,408,3.679,409,1.092,410,1.831,411,1.092,412,0.715,413,1.092,414,1.092,415,1.092,416,0.801,417,1.092,418,1.092,419,3.137,420,1.092,421,1.585,422,1.092,423,0.801,424,1.092,425,0.916,426,1.092,427,1.092,428,1.092,429,1.889,430,1.092,431,1.889,432,1.092,433,1.092,434,3.363,435,1.092,436,1.092,437,1.092,438,1.092,439,1.092,440,1.092,441,1.092,442,1.585,443,3.061,444,2.582,445,1.476,446,1.585,447,1.889,448,1.889,449,1.889,450,1.889,451,1.092,452,1.889,453,3.232,454,3.472,455,1.889,456,3.232,457,1.092,458,4.145,459,1.585,460,2.496,461,1.092,462,1.092,463,3.622,464,2.698,465,1.889,466,1.092,467,1.092,468,1.585,469,2.496,470,2.537,471,1.585,472,1.092,473,1.831,474,1.889,475,0.916,476,1.092,477,1.092,478,1.092,479,2.894,480,2.974,481,0.801,482,1.092,483,1.585,484,1.092,485,1.889,486,1.092,487,1.53,488,3.503,489,2.496,490,1.092,491,1.092,492,1.092,493,1.092,494,1.092,495,1.092,496,1.889,497,0.916,498,1.889,499,1.092,500,2.496,501,1.092,502,1.092,503,1.585,504,0.392,505,1.092,506,1.092,507,1.092,508,1.092,509,0.851,510,1.585,511,3.312,512,2.974,513,1.831,514,1.889,515,1.585,516,0.831,517,1.889,518,1.585,519,1.585,520,1.585,521,2.125,522,1.585,523,1.585,524,2.496,525,1.092,526,1.092,527,1.585,528,2.496,529,1.585,530,1.585,531,1.585,532,1.585,533,1.585,534,1.092,535,1.633,536,1.889,537,2.095,538,0.801,539,1.092,540,1.092,541,1.092,542,0.916,543,0.392,544,1.092,545,0.423,546,1.092,547,1.092,548,1.092,549,1.092,550,3.361,551,1.889,552,1.092,553,1.585,554,1.092,555,1.889,556,0.916,557,1.889,558,1.092,559,1.889,560,1.092,561,1.092,562,1.092,563,1.092,564,2.496,565,1.321,566,2.095,567,1.889,568,1.092,569,0.916,570,0.916,571,0.916,572,1.092,573,1.092,574,1.092,575,1.092,576,1.092,577,1.889,578,1.092,579,0.423,580,1.225,581,1.092,582,1.092,583,4.369,584,1.092,585,1.092,586,2.095,587,1.092,588,1.889,589,1.092,590,0.916,591,0.715,592,2.974,593,1.092,594,1.092,595,1.092,596,1.092,597,1.092,598,0.392,599,1.092,600,0.423,601,1.092,602,0.392,603,0.916,604,0.916,605,1.092,606,1.889,607,1.092,608,2.496,609,1.092,610,1.889,611,0.916,612,1.889,613,2.974,614,1.092,615,1.092,616,1.092,617,0.801,618,1.092,619,1.092,620,1.092,621,0.916,622,0.916,623,0.423,624,1.889,625,1.889,626,1.092,627,1.092,628,1.889,629,1.092,630,1.092,631,1.889,632,1.585,633,1.889,634,1.092,635,0.851,636,0.501,637,2.974,638,0.916,639,2.974,640,0.801,641,2.974,642,1.092,643,1.092,644,1.092,645,1.092,646,1.092,647,1.092,648,1.092,649,1.092,650,1.092,651,1.889,652,1.092,653,1.092,654,1.092,655,1.092,656,1.092,657,1.092,658,1.092,659,1.092,660,1.092,661,1.092,662,1.092,663,0.423,664,1.092,665,2.095,666,1.889,667,2.496,668,1.092,669,1.092,670,1.092,671,1.092,672,1.092,673,1.092,674,0.392,675,1.092,676,1.092,677,1.092,678,1.092,679,1.092,680,1.092,681,1.385,682,1.092,683,1.889,684,1.092,685,0.916,686,3.361,687,1.092,688,1.092,689,1.092,690,1.889,691,1.092,692,2.496,693,3.946,694,1.092,695,1.092,696,0.916,697,2.974,698,1.092,699,1.092,700,1.092,701,1.889,702,1.092,703,1.092,704,0.916,705,1.092,706,1.092,707,1.092,708,1.092,709,1.092,710,0.916,711,1.092,712,1.092,713,1.889,714,0.801,715,1.092,716,1.092,717,1.092,718,1.092,719,1.092,720,1.092,721,1.889,722,1.889,723,1.236,724,1.889,725,1.889,726,1.889,727,1.889,728,1.889,729,1.889,730,1.385,731,2.974,732,3.503,733,3.81,734,2.407,735,2.181,736,2.974,737,1.889,738,1.889,739,0.678,740,0.629,741,1.889,742,1.889,743,1.385,744,1.889,745,1.889,746,1.889,747,1.889,748,1.385,749,0.464,750,1.117]],["title/interfaces/CreateEncuestaDTO.html",[369,1.951,751,0.207]],["body/interfaces/CreateEncuestaDTO.html",[3,0.477,4,0.424,8,0.424,26,0.373,27,0.654,45,0.03,52,1.128,56,0.661,57,1.965,66,0.634,69,1.431,81,0.713,88,0.654,91,0.713,92,0.956,94,0.59,107,0.477,136,0.956,149,0.779,152,2.368,159,1.325,205,0.024,206,0.024,215,1.079,229,1.166,303,1.658,304,1.357,305,5.113,369,3.191,371,3.224,403,3.69,404,3.69,407,0.921,421,4.903,445,2.599,543,1.938,580,1.797,603,5.113,604,5.113,740,1.944,751,0.275,752,1.166,753,2.877,754,3.69,755,4.531,756,3.959,757,3.986,758,3.69,759,3.224,760,3.191,761,1.258,762,3.69,763,3.69,764,4.396,765,1.463,766,4.396,767,4.396,768,4.396,769,3.69,770,4.396,771,5.398,772,5.398,773,2.877,774,4.396]],["title/interfaces/CreatePreguntaDTO.html",[751,0.207,757,2.16]],["body/interfaces/CreatePreguntaDTO.html",[3,0.522,4,0.464,8,0.464,26,0.408,27,0.69,45,0.03,56,0.522,66,0.522,69,1.512,88,0.583,91,0.781,94,0.765,107,0.522,125,1.008,149,0.853,152,2.592,189,0.619,205,0.025,206,0.025,215,1.181,229,1.276,310,2.814,384,1.602,445,2.845,749,1.574,751,0.302,752,1.276,753,3.149,755,4.784,756,4.181,757,3.73,758,4.039,759,3.529,761,1.377,762,4.039,763,4.039,765,1.602,775,4.039,776,4.109,777,3.529,778,4.812,779,4.039]],["title/interfaces/Encuesta.html",[136,0.585,751,0.207]],["body/interfaces/Encuesta.html",[3,0.315,4,0.28,8,0.28,26,0.246,27,0.497,45,0.03,46,0.896,52,1.109,56,0.592,57,1.266,66,0.725,81,0.994,82,1.591,83,0.859,85,0.931,88,0.791,91,0.665,92,0.967,94,0.639,105,1.126,107,0.665,109,0.966,125,1.186,136,1.109,149,1.098,159,1.007,189,0.701,199,0.981,205,0.018,206,0.018,213,1.168,215,1.007,226,0.966,229,1.088,239,2.033,256,0.77,303,1.576,304,1.684,315,1.432,326,1.42,384,0.966,391,1.168,392,1.042,407,0.608,487,1.126,504,1.042,509,1.174,516,0.966,543,1.042,545,1.126,565,1.473,579,1.591,580,0.966,598,1.042,600,1.126,602,1.042,623,1.126,635,1.666,636,1.643,663,1.591,674,2.033,739,1.042,740,0.966,749,1.504,751,0.379,752,0.77,761,0.831,765,1.584,780,1.042,781,2.005,782,1.596,783,1.72,784,1.217,785,1.561,786,1.473,787,1.473,788,1.473,789,1.126,790,1.72,791,1.684,792,1.995,793,1.501,794,1.042,795,1.042,796,1.709,797,1.266,798,1.126,799,1.217,800,1.126,801,1.217,802,1.857,803,1.217,804,1.217,805,1.72,806,1.217,807,1.217,808,1.217,809,1.217,810,1.217,811,1.217,812,1.042,813,1.042,814,1.959,815,2.005,816,1.217,817,1.366,818,1.709,819,1.174,820,1.709,821,1.473,822,1.042,823,1.217,824,1.126,825,1.126,826,1.126,827,1.126,828,1.126,829,1.126,830,1.217,831,1.361,832,1.217,833,1.217,834,1.217,835,0.966,836,1.217,837,1.217,838,1.72,839,1.126,840,1.591,841,1.473,842,1.217,843,1.217,844,1.217,845,1.126,846,1.217,847,1.217,848,1.126,849,1.217,850,1.126,851,0.966,852,1.217]],["title/interfaces/EncuestaDTO.html",[751,0.207,760,1.951]],["body/interfaces/EncuestaDTO.html",[3,0.501,4,0.446,8,0.446,26,0.392,27,0.674,45,0.03,52,1.141,56,0.672,66,0.648,69,1.225,81,0.903,88,0.75,90,3.879,94,0.62,107,0.501,109,1.538,135,1.792,136,1.124,149,0.819,205,0.024,206,0.024,213,1.135,303,1.681,304,1.957,310,3.059,315,1.355,598,1.66,636,1.643,638,5.201,751,0.29,752,1.225,759,3.39,760,3.29,761,1.322,765,1.538,773,3.024,795,1.66,814,1.66,818,1.66,853,3.879,854,3.879]],["title/interfaces/EncuestaResponse.html",[751,0.207,851,1.099]],["body/interfaces/EncuestaResponse.html",[3,0.32,4,0.284,8,0.284,26,0.25,27,0.502,45,0.03,46,0.909,52,1.089,56,0.52,66,0.725,81,0.997,82,1.607,83,0.868,85,0.941,88,0.792,91,0.672,92,0.972,94,0.644,105,1.142,107,0.667,109,0.981,125,1.192,136,1.12,149,1.101,159,1.018,189,0.695,199,0.984,205,0.018,206,0.018,213,1.178,215,1.018,226,0.981,229,1.099,239,2.043,256,0.781,303,1.455,304,1.28,315,1.411,326,1.424,384,0.981,391,1.178,392,1.058,407,0.617,487,1.142,504,1.058,509,1.186,516,1.733,543,1.058,545,1.142,565,1.489,579,1.607,580,0.981,598,1.058,600,1.142,602,1.058,623,1.142,635,1.673,636,1.582,663,1.607,674,2.043,739,1.058,740,0.981,749,1.509,751,0.38,752,0.781,761,0.843,765,1.597,780,1.058,781,1.142,782,1.606,783,1.738,784,1.235,785,1.57,786,1.489,787,1.489,788,1.489,789,1.142,790,1.738,791,1.693,792,2.011,793,1.509,794,1.058,795,1.058,796,1.722,797,1.28,798,1.142,799,1.235,800,1.142,801,1.235,802,1.869,803,1.235,804,1.235,805,1.738,806,1.235,807,1.235,808,1.235,809,1.235,810,1.235,811,1.235,812,1.058,813,1.058,814,1.97,815,2.018,816,1.235,817,1.38,818,1.722,819,1.186,820,1.722,821,1.489,822,1.058,823,1.235,824,1.142,825,1.142,826,1.142,827,1.142,828,1.142,829,1.142,830,1.235,831,1.373,832,1.235,833,1.235,834,1.235,835,0.981,836,1.235,837,1.235,838,1.738,839,1.142,840,1.607,841,1.97,842,1.235,843,1.235,844,1.235,845,1.142,846,1.235,847,1.235,848,1.142,849,1.235,850,1.142,851,1.38,852,1.235]],["title/injectables/EncuestasService.html",[285,1.951,855,1.951]],["body/injectables/EncuestasService.html",[3,0.404,4,0.359,8,0.359,15,1.445,16,2.733,26,0.316,27,0.589,29,2.671,32,2.4,41,2.605,44,2.458,45,0.03,46,1.67,52,0.959,54,2.671,55,1.801,56,0.587,57,1.67,61,1.445,62,1.445,66,0.622,69,1.618,70,1.839,71,1.24,81,0.604,83,0.781,85,1.103,88,0.695,91,0.604,92,0.861,94,0.819,104,1.338,107,0.404,108,1.338,123,2.914,129,2.268,136,1.054,149,1.054,152,2.618,159,0.915,205,0.021,206,0.021,256,0.988,285,2.874,296,4.08,315,1.35,326,1.385,369,3.391,370,2.733,371,2.733,385,2.733,392,1.338,407,1.018,416,2.733,445,2.203,580,1.618,617,2.733,636,1.435,681,4.363,714,3.565,743,4.206,760,2.203,773,3.181,840,1.885,855,2.874,856,2.733,857,3.127,858,4.993,859,4.862,860,5.411,861,3.726,862,3.726,863,4.862,864,3.726,865,4.993,866,3.726,867,4.813,868,3.726,869,3.968,870,4.08,871,3.726,872,3.127,873,2.733,874,3.726,875,3.726,876,3.726,877,3.127,878,2.733,879,3.726,880,3.726,881,3.726,882,3.726,883,3.127,884,2.733,885,4.862,886,5.411,887,3.726,888,3.726,889,3.726,890,3.726,891,4.862,892,3.127,893,3.726,894,3.726,895,3.726,896,3.726,897,3.726,898,3.726,899,3.726]],["title/components/GestionOpcionDialogComponent.html",[0,0.585,184,1.185]],["body/components/GestionOpcionDialogComponent.html",[0,0.841,1,1.039,2,1.469,3,0.314,4,0.279,5,1.213,6,1.213,7,1.213,8,0.279,10,1.213,13,3.344,14,2.643,15,2.444,17,1.715,22,1.715,24,1.859,26,0.245,27,0.496,29,2.344,32,2.02,40,3.107,41,2.781,44,1.859,45,0.03,52,0.513,55,1.362,56,0.444,59,2.419,61,1.121,62,1.121,66,0.614,69,1.575,70,1.428,71,0.963,76,1.71,81,0.664,85,0.929,86,1.859,88,0.685,91,0.469,92,1.07,93,1.715,94,0.78,107,0.314,108,1.039,123,2.204,125,0.606,129,1.715,131,1.213,135,1.121,138,1.039,141,2.121,149,0.841,174,1.213,175,1.715,176,1.213,177,2.164,178,1.213,179,1.213,180,1.039,181,1.213,182,1.039,183,1.715,184,1.854,185,2.49,186,2.588,187,1.715,188,1.039,189,0.444,190,1.039,191,1.213,192,1.121,193,1.121,194,1.213,195,1.121,196,1.039,197,1.213,198,1.854,199,0.993,200,1.213,201,1.039,202,1.213,203,1.121,204,1.213,205,0.018,206,0.018,215,0.71,218,2.558,222,1.558,274,3.483,277,3.483,278,3.483,286,3.483,302,3.001,335,3.378,337,1.893,340,2.678,352,2.121,353,2.121,355,3.786,356,2.121,357,1.893,359,2.121,360,4.053,366,1.71,367,2.121,373,4.148,374,2.121,377,2.121,378,2.121,379,4.572,388,3.434,391,0.71,396,2.121,399,2.121,400,2.419,401,2.121,407,0.606,410,2.121,412,1.893,419,1.71,423,2.121,443,3.001,444,3.805,453,1.893,454,1.893,456,1.893,463,2.121,464,2.121,470,1.428,473,3.995,481,2.121,509,0.828,513,2.121,521,1.558,535,1.893,538,2.121,542,2.428,591,1.893,714,2.121,730,3.483,750,1.71,793,1.542,822,2.031,831,0.828,845,1.121,848,1.121,878,2.121,900,4.542,901,2.121,902,3.985,903,3.434,904,3.434,905,4.572,906,3.434,907,3.434,908,4.092,909,2.428,910,4.092,911,4.092,912,2.428,913,2.893,914,2.893,915,2.428,916,2.893,917,3.434,918,2.428,919,3.434,920,2.428,921,2.428,922,2.428,923,2.428,924,2.121,925,2.428,926,2.428,927,2.428,928,2.428,929,2.428,930,2.893,931,2.893,932,2.428,933,2.428,934,2.428,935,2.428,936,3.434,937,3.434]],["title/components/GestionPreguntaDialogComponent.html",[0,0.585,188,1.185]],["body/components/GestionPreguntaDialogComponent.html",[0,0.621,1,0.63,2,1.007,3,0.19,4,0.169,5,0.735,6,0.735,7,0.735,8,0.169,10,0.735,12,3.424,13,2.76,14,2.416,15,2.204,17,1.176,22,1.176,24,1.274,26,0.415,27,0.34,29,2.304,32,1.384,40,2.293,41,2.837,44,2.498,45,0.03,52,0.709,54,2.16,55,1.631,56,0.57,57,1.351,59,3.103,61,1.697,62,1.697,66,0.66,69,1.562,70,0.866,71,0.933,76,1.037,81,0.284,83,0.587,85,0.795,86,1.274,88,0.617,91,0.284,92,1.021,93,1.176,94,0.751,102,1.148,103,1.148,104,1.258,107,0.19,108,0.63,115,2.057,125,0.917,129,1.957,131,0.735,135,0.68,138,0.63,142,1.148,149,0.827,159,0.431,174,0.735,175,1.176,176,0.735,177,1.678,178,0.735,179,0.735,180,0.63,181,0.735,182,0.63,183,1.176,184,1.437,185,2.201,186,1.9,187,1.176,188,1.437,189,0.729,190,0.63,191,0.735,192,0.68,193,1.087,194,0.735,195,0.68,196,1.437,197,0.735,198,1.437,199,0.935,200,0.735,201,0.63,202,0.735,203,0.68,204,0.735,205,0.012,206,0.012,210,1.51,213,0.431,215,0.431,218,1.887,222,0.945,234,1.286,256,0.744,274,2.57,277,2.57,278,2.57,286,2.57,292,3.674,302,2.057,303,0.465,310,2.16,315,1.06,324,2.358,326,1.192,328,2.354,330,2.354,335,2.619,337,2.293,338,1.286,340,1.835,352,1.286,353,1.286,354,3.918,355,4.033,356,2.057,357,1.148,358,1.472,359,1.286,360,4.119,361,1.472,362,1.472,363,1.835,364,1.148,365,1.148,366,1.037,367,1.286,370,1.286,373,3.594,374,1.286,377,2.057,378,2.057,382,1.472,384,0.584,386,1.286,391,0.431,395,2.354,396,1.286,397,1.472,398,1.472,399,1.286,400,2.76,401,2.057,407,0.587,410,2.57,412,1.835,419,1.658,434,2.293,442,1.472,443,3.734,444,3.523,445,1.658,446,1.472,453,1.148,454,1.835,456,1.148,459,1.472,460,2.354,463,1.286,464,1.286,468,1.472,470,0.866,473,2.936,481,1.286,483,1.472,488,2.941,497,2.354,504,0.63,509,0.502,510,1.472,511,1.472,513,1.286,515,1.472,516,0.584,519,2.354,520,1.472,521,2.156,522,1.472,523,1.472,524,2.354,527,1.472,528,2.354,529,1.472,530,1.472,531,1.472,532,1.472,533,1.472,535,1.835,538,1.286,566,1.472,569,1.472,570,1.472,571,1.472,586,1.472,591,1.148,635,0.502,723,1.148,730,2.936,732,2.354,733,2.354,734,1.835,735,2.57,739,1.007,740,0.584,748,1.286,749,1.472,750,2.071,776,1.148,777,1.286,791,0.865,793,1.238,794,0.63,796,0.63,800,0.68,812,0.63,813,0.63,819,0.802,822,1.676,831,0.802,850,0.68,878,1.286,900,4.599,901,1.286,902,2.941,903,2.354,904,2.354,905,2.354,906,2.354,907,2.354,909,1.472,912,2.354,915,1.472,917,2.354,918,1.472,919,2.354,920,1.472,921,1.472,922,1.472,923,1.472,924,1.286,925,1.472,926,2.354,927,1.472,928,1.472,929,1.472,932,1.472,933,1.472,934,1.472,935,1.472,936,2.354,937,2.354,938,3.504,939,3.504,940,3.504,941,3.504,942,4.901,943,4.003,944,2.804,945,2.804,946,2.804,947,2.057,948,4.003,949,4.003,950,4.003,951,2.804,952,2.804,953,1.754,954,1.754,955,2.804,956,1.754,957,2.804,958,1.754,959,1.754,960,2.804,961,1.754,962,2.804,963,1.754,964,2.354,965,1.754,966,1.754,967,1.472,968,1.754,969,1.754,970,1.754,971,1.754,972,1.754,973,2.804,974,1.754,975,2.804,976,1.754,977,1.754,978,1.754,979,1.754,980,1.754,981,1.754,982,1.754,983,2.057,984,1.754,985,1.754,986,1.754,987,1.754,988,1.286,989,1.286,990,1.754,991,1.754,992,1.754,993,1.754,994,2.804,995,1.754,996,1.754,997,2.354,998,1.754,999,1.754,1000,1.754,1001,1.472,1002,1.754,1003,2.804,1004,1.754,1005,1.754,1006,1.286,1007,1.472,1008,1.754,1009,1.754,1010,1.472,1011,1.472,1012,1.754,1013,1.754,1014,1.754,1015,1.754,1016,2.804,1017,2.804,1018,2.804,1019,2.804,1020,2.804,1021,2.804,1022,2.354,1023,2.804,1024,2.804,1025,2.804,1026,2.804]],["title/components/NavbarComponent.html",[0,0.585,190,1.185]],["body/components/NavbarComponent.html",[0,0.988,1,1.424,2,1.817,3,0.43,4,0.382,5,1.662,6,1.662,7,1.662,8,0.382,10,1.662,14,2.768,15,2.56,17,2.121,22,2.121,24,2.298,45,0.03,55,1.684,65,4.247,66,0.684,67,3.311,69,1.478,71,1.32,73,2.136,83,1.06,86,2.532,87,3.311,88,0.773,89,3.711,93,2.121,94,0.532,95,2.908,96,2.908,104,1.424,107,0.43,108,1.424,111,4.549,131,1.662,135,1.537,138,1.424,159,0.973,174,1.662,175,2.121,176,1.662,177,2.461,178,1.662,179,1.662,180,1.424,181,1.662,182,1.424,183,2.121,184,1.424,185,2.121,186,1.537,187,2.121,188,1.424,189,0.43,190,2.108,191,1.662,192,1.537,193,1.537,194,1.662,195,1.537,196,1.424,197,1.662,198,1.424,199,0.643,200,1.662,201,1.424,202,1.662,203,1.537,204,1.662,205,0.022,206,0.022,208,2.594,210,3.002,216,3.328,218,3.002,219,4.088,222,2.136,223,3.328,224,2.908,225,2.908,226,1.32,227,3.328,228,2.594,229,1.051,791,1.562,1027,3.328,1028,5.871,1029,4.678,1030,5.06,1031,5.06,1032,5.06,1033,4.247,1034,5.06,1035,5.06]],["title/interfaces/OpcionDTO.html",[751,0.207,1036,2.16]],["body/interfaces/OpcionDTO.html",[3,0.531,4,0.472,8,0.472,26,0.415,27,0.697,45,0.029,52,1.084,56,0.625,66,0.664,81,0.794,88,0.697,107,0.531,189,0.531,199,1.044,205,0.025,206,0.025,210,2.636,315,1.389,391,1.201,407,1.025,617,3.589,674,1.757,751,0.307,752,1.298,793,1.527,815,1.898,819,1.807,820,1.757,821,1.757,1036,3.767,1037,4.108]],["title/interfaces/OpcionRespuesta.html",[751,0.207,817,1.099]],["body/interfaces/OpcionRespuesta.html",[3,0.318,4,0.282,8,0.282,26,0.248,27,0.5,45,0.03,46,0.903,52,1.088,56,0.563,66,0.725,81,0.996,82,1.6,83,0.865,85,0.937,88,0.792,91,0.669,92,0.97,94,0.641,105,1.135,107,0.666,109,0.974,125,1.189,136,1.1,149,1.1,159,1.013,189,0.694,199,1.016,205,0.018,206,0.018,213,1.173,215,1.013,226,0.974,229,1.094,239,2.039,256,0.776,303,1.451,304,1.274,315,1.452,326,1.422,384,0.974,391,1.173,392,1.051,407,0.613,487,1.135,504,1.051,509,1.181,516,0.974,543,1.051,545,1.135,565,1.482,579,1.6,580,0.974,598,1.051,600,1.135,602,1.051,623,1.135,635,1.669,636,1.646,663,1.6,674,2.039,739,1.051,740,0.974,749,1.507,751,0.38,752,0.776,761,0.838,765,1.591,780,1.051,781,1.135,782,1.602,783,1.73,784,1.227,785,1.566,786,1.482,787,1.482,788,1.482,789,1.135,790,1.73,791,1.689,792,2.004,793,1.506,794,1.051,795,1.051,796,1.716,797,1.274,798,1.135,799,1.227,800,1.135,801,1.227,802,1.864,803,1.227,804,1.227,805,1.73,806,1.227,807,1.227,808,1.227,809,1.227,810,1.227,811,1.227,812,1.051,813,1.051,814,1.965,815,2.012,816,1.227,817,1.591,818,1.716,819,1.566,820,1.716,821,1.482,822,1.051,823,1.227,824,1.135,825,1.135,826,1.135,827,1.135,828,1.135,829,1.135,830,1.227,831,1.368,832,1.227,833,1.227,834,1.227,835,0.974,836,1.227,837,1.227,838,1.73,839,1.135,840,1.6,841,1.482,842,1.227,843,1.227,844,1.227,845,1.135,846,1.227,847,1.227,848,1.135,849,1.227,850,1.135,851,0.974,852,1.227]],["title/interfaces/Pregunta.html",[189,0.358,751,0.207]],["body/interfaces/Pregunta.html",[3,0.311,4,0.276,8,0.276,26,0.243,27,0.492,45,0.03,46,1.458,52,1.083,56,0.629,57,1.255,66,0.724,81,0.991,82,1.576,83,0.852,85,0.923,88,0.79,91,0.659,92,0.962,94,0.634,105,1.111,107,0.663,109,0.954,125,1.181,136,1.095,149,1.095,159,0.998,189,0.696,199,1.013,205,0.018,206,0.018,213,1.16,215,0.998,226,0.954,229,1.078,239,2.025,256,0.76,303,1.44,304,1.255,315,1.448,326,1.448,384,0.954,391,1.16,392,1.029,407,0.6,487,1.111,504,1.029,509,1.163,516,0.954,543,1.029,545,1.111,565,1.46,579,1.576,580,0.954,598,1.029,600,1.111,602,1.029,623,1.111,635,1.659,636,1.639,663,1.576,674,2.025,739,1.029,740,0.954,749,1.545,751,0.378,752,0.76,761,0.82,765,1.573,780,1.029,781,1.111,782,1.587,783,1.704,784,1.202,785,1.553,786,1.46,787,1.46,788,1.46,789,1.111,790,1.704,791,1.676,792,1.981,793,1.495,794,1.029,795,1.029,796,1.697,797,1.255,798,1.111,799,1.202,800,1.111,801,1.202,802,2.025,803,1.202,804,1.202,805,1.704,806,1.202,807,1.202,808,1.202,809,1.202,810,1.202,811,1.202,812,1.029,813,1.029,814,1.949,815,1.993,816,1.202,817,1.711,818,1.697,819,1.553,820,1.697,821,1.46,822,1.029,823,1.202,824,1.111,825,1.111,826,1.111,827,1.111,828,1.993,829,1.111,830,1.202,831,1.352,832,1.202,833,1.202,834,1.202,835,0.954,836,1.202,837,1.202,838,1.704,839,1.111,840,1.576,841,1.46,842,1.202,843,1.202,844,1.202,845,1.111,846,1.202,847,1.202,848,1.111,849,1.202,850,1.111,851,0.954,852,1.202]],["title/interfaces/PreguntaDTO.html",[310,1.629,751,0.207]],["body/interfaces/PreguntaDTO.html",[3,0.478,4,0.425,8,0.425,26,0.374,27,0.655,45,0.03,52,1.036,56,0.679,57,1.669,66,0.7,69,1.434,81,0.715,88,0.771,91,0.715,103,2.885,107,0.478,125,0.924,136,0.958,149,0.781,189,0.679,199,1.015,205,0.024,206,0.024,213,1.082,229,1.169,310,2.669,315,1.446,324,3.285,326,1.446,364,2.885,365,2.885,635,1.261,636,1.617,749,1.536,751,0.276,752,1.169,761,1.261,777,3.233,785,1.261,793,1.434,814,1.583,818,1.583,819,1.745,820,1.583,821,1.583,824,1.709,825,1.709,831,1.261,854,3.7,1036,3.99,1038,3.7,1039,4.409]],["title/interfaces/RegistrarRespuestasDTO.html",[751,0.207,797,1.019]],["body/interfaces/RegistrarRespuestasDTO.html",[3,0.322,4,0.286,8,0.286,26,0.251,27,0.504,45,0.03,46,0.915,52,1.059,56,0.452,66,0.726,81,0.998,82,1.615,83,0.873,85,0.945,88,0.793,91,0.676,92,0.974,94,0.646,105,1.15,107,0.668,109,0.987,125,1.194,136,1.103,149,1.103,159,1.022,189,0.696,199,0.985,205,0.018,206,0.018,213,1.182,215,1.022,226,0.987,229,1.104,239,2.182,256,0.786,303,1.458,304,1.285,315,1.413,326,1.426,384,0.987,391,1.182,392,1.065,407,0.621,487,1.15,504,1.065,509,1.192,516,0.987,543,1.065,545,1.15,565,1.496,579,1.615,580,0.987,598,1.065,600,1.15,602,1.065,623,1.15,635,1.676,636,1.585,663,1.615,674,2.047,739,1.065,740,0.987,749,1.511,751,0.381,752,0.786,761,0.849,765,1.602,780,1.065,781,1.15,782,1.76,783,1.746,784,1.243,785,1.573,786,1.496,787,1.496,788,1.496,789,1.15,790,1.746,791,1.697,792,2.018,793,1.512,794,1.065,795,1.065,796,1.729,797,1.486,798,1.15,799,1.243,800,1.15,801,1.243,802,1.875,803,1.243,804,1.243,805,1.746,806,1.243,807,1.243,808,1.243,809,1.243,810,1.243,811,1.243,812,1.065,813,1.065,814,1.975,815,2.024,816,1.243,817,1.386,818,1.729,819,1.192,820,1.729,821,1.496,822,1.065,823,1.243,824,1.15,825,1.15,826,1.15,827,1.15,828,1.15,829,1.15,830,1.243,831,1.377,832,1.243,833,1.243,834,1.243,835,0.987,836,1.243,837,1.243,838,1.746,839,1.15,840,1.615,841,1.496,842,1.243,843,1.243,844,1.243,845,1.15,846,1.243,847,1.243,848,1.15,849,1.243,850,1.15,851,0.987,852,1.243]],["title/interfaces/RegistrarRespuestasDto.html",[751,0.207,797,1.019]],["body/interfaces/RegistrarRespuestasDto.html",[3,0.322,4,0.286,8,0.286,26,0.251,27,0.504,45,0.03,46,0.915,52,1.059,56,0.452,66,0.726,81,0.998,82,1.615,83,0.873,85,0.945,88,0.793,91,0.676,92,0.974,94,0.646,105,1.15,107,0.668,109,0.987,125,1.194,136,1.103,149,1.103,159,1.022,189,0.696,199,0.985,205,0.018,206,0.018,213,1.182,215,1.022,226,0.987,229,1.104,239,2.182,256,0.786,303,1.458,304,1.285,315,1.413,326,1.426,384,0.987,391,1.182,392,1.065,407,0.621,487,1.15,504,1.065,509,1.192,516,0.987,543,1.065,545,1.15,565,1.496,579,1.615,580,0.987,598,1.065,600,1.15,602,1.065,623,1.15,635,1.676,636,1.585,663,1.615,674,2.047,739,1.065,740,0.987,749,1.511,751,0.381,752,0.786,761,0.849,765,1.602,780,1.065,781,1.15,782,1.76,783,1.746,784,1.243,785,1.573,786,1.496,787,1.496,788,1.496,789,1.15,790,1.746,791,1.697,792,2.018,793,1.512,794,1.065,795,1.065,796,1.729,797,1.486,798,1.15,799,1.243,800,1.15,801,1.243,802,1.875,803,1.243,804,1.243,805,1.746,806,1.243,807,1.243,808,1.243,809,1.243,810,1.243,811,1.243,812,1.065,813,1.065,814,1.975,815,2.024,816,1.243,817,1.386,818,1.729,819,1.192,820,1.729,821,1.496,822,1.065,823,1.243,824,1.15,825,1.15,826,1.15,827,1.15,828,1.15,829,1.15,830,1.243,831,1.377,832,1.243,833,1.243,834,1.243,835,0.987,836,1.243,837,1.243,838,1.746,839,1.15,840,1.615,841,1.496,842,1.243,843,1.243,844,1.243,845,1.15,846,1.243,847,1.243,848,1.15,849,1.243,850,1.15,851,0.987,852,1.243]],["title/interfaces/RespuestaPreguntaDTO.html",[751,0.207,782,1.019]],["body/interfaces/RespuestaPreguntaDTO.html",[3,0.311,4,0.276,8,0.276,26,0.243,27,0.492,45,0.03,46,0.885,52,1.083,56,0.589,57,1.587,66,0.724,81,0.991,82,1.576,83,0.852,85,0.923,88,0.79,91,0.659,92,0.962,94,0.634,105,1.111,107,0.663,109,0.954,125,1.181,136,1.095,149,1.095,159,0.998,189,0.692,199,1.013,205,0.018,206,0.018,213,1.16,215,0.998,226,0.954,229,1.078,239,2.025,256,0.76,303,1.44,304,1.255,315,1.448,326,1.448,384,0.954,391,1.16,392,1.029,407,0.6,487,1.111,504,1.029,509,1.163,516,0.954,543,1.029,545,1.111,565,1.46,579,1.576,580,0.954,598,1.029,600,1.111,602,1.029,623,1.111,635,1.659,636,1.571,663,1.576,674,2.025,739,1.029,740,0.954,749,1.545,751,0.378,752,0.76,761,0.82,765,1.573,780,1.029,781,1.111,782,1.676,783,2.276,784,1.202,785,1.659,786,1.846,787,1.846,788,1.846,789,1.111,790,1.704,791,1.676,792,1.981,793,1.495,794,1.029,795,1.029,796,1.697,797,1.255,798,1.111,799,1.202,800,1.111,801,1.202,802,1.846,803,1.202,804,1.202,805,1.704,806,1.202,807,1.202,808,1.202,809,1.202,810,1.202,811,1.202,812,1.029,813,1.029,814,1.949,815,1.993,816,1.202,817,1.353,818,1.697,819,1.163,820,1.697,821,1.46,822,1.029,823,1.202,824,1.111,825,1.111,826,1.111,827,1.111,828,1.111,829,1.111,830,1.202,831,1.352,832,1.202,833,1.202,834,1.202,835,0.954,836,1.202,837,1.202,838,1.704,839,1.111,840,1.576,841,1.46,842,1.202,843,1.202,844,1.202,845,1.111,846,1.202,847,1.202,848,1.111,849,1.202,850,1.111,851,0.954,852,1.202]],["title/interfaces/RespuestaPreguntaDto.html",[751,0.207,782,1.019]],["body/interfaces/RespuestaPreguntaDto.html",[3,0.314,4,0.279,8,0.279,26,0.246,27,0.496,45,0.03,46,0.894,52,1.085,56,0.592,57,1.595,66,0.725,81,0.994,82,1.589,83,0.858,85,0.93,88,0.791,91,0.665,92,0.966,94,0.638,105,1.124,107,0.665,109,0.965,125,1.186,136,1.098,149,1.098,159,1.006,189,0.693,199,1.015,205,0.018,206,0.018,213,1.167,215,1.006,226,0.965,229,1.086,239,2.032,256,0.768,303,1.445,304,1.265,315,1.45,326,1.45,384,0.965,391,1.167,392,1.041,407,0.607,487,1.124,504,1.041,509,1.172,516,0.965,543,1.041,545,1.124,565,1.471,579,1.589,580,0.965,598,1.041,600,1.124,602,1.041,623,1.124,635,1.665,636,1.576,663,1.589,674,2.032,739,1.041,740,0.965,749,1.548,751,0.379,752,0.768,761,0.829,765,1.582,780,1.041,781,1.124,782,1.682,783,2.285,784,1.215,785,1.56,786,1.471,787,1.471,788,1.471,789,1.124,790,1.718,791,1.682,792,1.993,793,1.501,794,1.041,795,1.041,796,1.707,797,1.265,798,1.124,799,1.215,800,1.124,801,1.215,802,2.032,803,1.215,804,1.215,805,1.718,806,1.215,807,1.215,808,1.215,809,1.215,810,1.215,811,1.215,812,1.041,813,1.041,814,1.957,815,2.003,816,1.215,817,1.364,818,1.707,819,1.172,820,1.707,821,1.471,822,1.041,823,1.215,824,1.124,825,1.124,826,1.124,827,1.124,828,1.124,829,1.124,830,1.215,831,1.36,832,1.215,833,1.215,834,1.215,835,0.965,836,1.215,837,1.215,838,1.718,839,1.124,840,1.589,841,1.471,842,1.215,843,1.215,844,1.215,845,1.124,846,1.215,847,1.215,848,1.124,849,1.215,850,1.124,851,0.965,852,1.215]],["title/interfaces/RespuestaUsuario.html",[751,0.207,835,1.099]],["body/interfaces/RespuestaUsuario.html",[3,0.318,4,0.282,8,0.282,26,0.248,27,0.5,45,0.03,46,0.903,52,1.088,56,0.563,66,0.725,81,0.996,82,1.6,83,0.865,85,0.937,88,0.792,91,0.669,92,0.97,94,0.641,105,1.135,107,0.666,109,0.974,125,1.189,136,1.1,149,1.1,159,1.013,189,0.694,199,1.016,205,0.018,206,0.018,213,1.173,215,1.013,226,0.974,229,1.094,239,2.039,256,0.776,303,1.451,304,1.274,315,1.452,326,1.422,384,0.974,391,1.173,392,1.051,407,0.613,487,1.135,504,1.051,509,1.181,516,0.974,543,1.051,545,1.135,565,1.482,579,1.6,580,0.974,598,1.051,600,1.135,602,1.051,623,1.135,635,1.669,636,1.58,663,1.6,674,2.039,739,1.051,740,0.974,749,1.551,751,0.38,752,0.776,761,0.838,765,1.591,780,1.051,781,1.135,782,1.602,783,1.73,784,1.227,785,1.566,786,1.482,787,1.482,788,1.482,789,1.135,790,1.73,791,1.689,792,2.004,793,1.506,794,1.051,795,1.051,796,1.716,797,1.274,798,1.135,799,1.227,800,1.135,801,1.227,802,1.864,803,1.227,804,1.227,805,1.73,806,1.227,807,1.227,808,1.227,809,1.227,810,1.227,811,1.227,812,1.051,813,1.051,814,1.965,815,2.012,816,1.227,817,1.374,818,1.716,819,1.181,820,1.716,821,1.482,822,1.051,823,1.227,824,1.135,825,1.135,826,1.135,827,1.135,828,1.135,829,1.135,830,1.227,831,1.368,832,1.227,833,1.227,834,1.227,835,1.374,836,2.176,837,1.227,838,1.73,839,1.135,840,1.6,841,1.482,842,1.227,843,1.227,844,1.227,845,1.135,846,1.227,847,1.227,848,1.135,849,1.227,850,1.135,851,0.974,852,1.227]],["title/injectables/RespuestasService.html",[855,1.951,1040,2.16]],["body/injectables/RespuestasService.html",[3,0.371,4,0.33,8,0.33,16,2.508,26,0.29,27,0.556,29,2.939,32,2.267,41,2.705,44,2.627,45,0.03,52,1.14,54,2.854,55,1.925,56,0.628,57,1.785,61,1.326,62,1.326,69,1.693,70,1.688,71,1.138,79,2.87,81,0.555,85,1.042,86,1.553,92,0.982,94,0.696,104,1.228,107,0.371,108,1.228,123,1.842,125,0.716,129,2.424,136,0.814,138,1.228,189,0.371,199,0.555,205,0.02,206,0.02,228,2.237,229,0.907,256,0.907,303,0.907,304,1.055,315,1.422,326,0.776,407,0.716,444,2.237,470,2.939,479,2.508,516,1.138,521,1.842,565,1.228,611,3.854,632,2.87,636,1.47,640,4.066,681,3.803,685,3.854,734,2.237,749,0.839,782,1.055,797,1.711,817,1.138,819,0.978,828,1.326,831,0.978,835,1.138,841,1.228,851,1.138,855,2.715,856,2.508,858,4.653,865,5.258,869,2.508,870,3.854,872,2.87,873,2.508,877,2.87,884,2.508,1006,2.508,1040,3.005,1041,2.87,1042,4.593,1043,4.593,1044,4.593,1045,4.593,1046,4.593,1047,4.593,1048,3.419,1049,4.593,1050,5.544,1051,3.419,1052,4.593,1053,5.186,1054,3.419,1055,4.593,1056,3.419,1057,4.593,1058,5.544,1059,3.419,1060,3.419,1061,4.593,1062,3.419,1063,3.419,1064,6.084,1065,3.419,1066,3.419,1067,3.419,1068,3.419,1069,3.419,1070,3.419,1071,3.419,1072,3.419,1073,3.419,1074,2.87,1075,3.419,1076,5.186,1077,3.419,1078,2.87,1079,2.87,1080,3.419,1081,3.419,1082,2.87,1083,2.87,1084,3.419,1085,3.419,1086,3.419,1087,3.419,1088,3.419,1089,4.593,1090,3.419,1091,3.419,1092,3.419,1093,3.419]],["title/components/SeccionComponent.html",[0,0.585,196,1.185]],["body/components/SeccionComponent.html",[0,0.93,1,1.258,2,1.676,3,0.38,4,0.338,5,1.468,6,1.468,7,1.468,8,0.338,10,1.468,14,2.722,15,2.518,17,1.468,22,1.957,24,2.12,26,0.297,27,0.565,41,2.648,45,0.03,55,1.553,61,2.26,62,2.26,66,0.664,69,0.929,71,1.166,83,1.1,86,2.12,88,0.565,92,0.93,93,1.957,94,0.704,100,4.698,101,3.423,104,1.885,107,0.38,108,1.258,129,1.957,131,1.468,135,1.358,138,1.258,174,1.468,175,1.957,176,1.468,177,2.347,178,1.468,179,1.468,180,1.258,181,1.468,182,1.258,183,1.957,184,1.258,185,1.957,186,1.358,187,1.957,188,1.258,189,0.38,190,1.258,191,1.468,192,1.358,193,1.358,194,1.468,195,1.358,196,2.01,197,1.468,198,1.258,199,0.568,200,1.468,201,1.258,202,1.468,203,1.358,204,1.468,205,0.021,206,0.021,208,2.292,215,1.374,337,2.292,407,0.978,423,2.569,475,2.94,509,1.336,602,1.676,622,3.917,761,1.336,779,2.94,1033,3.917,1094,2.94,1095,5.598,1096,4.667,1097,4.667,1098,4.698,1099,4.667,1100,5.249,1101,4.667,1102,4.667,1103,4.667,1104,4.667,1105,4.667,1106,4.667,1107,5.249,1108,5.249,1109,5.249,1110,5.249,1111,4.405,1112,5.598,1113,3.503,1114,4.667,1115,3.503,1116,4.667,1117,3.503,1118,3.503,1119,5.249,1120,3.917,1121,4.698,1122,4.667,1123,3.917,1124,4.667,1125,4.698,1126,3.917,1127,4.667,1128,4.667,1129,4.667,1130,3.503,1131,4.667,1132,4.667,1133,4.667,1134,5.249,1135,4.667,1136,3.503,1137,3.503,1138,3.503,1139,3.503]],["title/components/TextoErrorComponent.html",[0,0.585,198,1.185]],["body/components/TextoErrorComponent.html",[0,0.996,1,1.449,2,1.838,3,0.438,4,0.389,5,1.692,6,1.692,7,1.692,8,0.389,10,1.692,14,2.775,15,2.566,17,1.692,22,2.145,24,2.325,45,0.03,55,1.703,66,0.641,69,1.07,71,1.343,83,1.072,86,2.325,91,0.959,92,1.104,93,2.145,99,3.753,101,3.753,104,2.122,107,0.438,108,1.449,131,1.692,135,1.565,138,1.449,174,1.692,175,2.145,176,1.692,177,2.477,178,1.692,179,1.692,180,1.449,181,1.692,182,1.449,183,2.145,184,1.449,185,2.145,186,1.565,187,2.145,188,1.449,189,0.438,190,1.449,191,1.692,192,1.565,193,1.565,194,1.692,195,1.565,196,1.449,197,1.692,198,2.122,199,1.027,200,1.692,201,1.449,202,1.692,203,1.565,204,1.692,205,0.023,206,0.023,208,2.641,210,2.757,213,1.256,366,2.386,391,1.451,470,2.917,924,3.753,1140,3.387,1141,3.387,1142,5.118,1143,5.118,1144,5.118,1145,5.118,1146,5.118,1147,5.118,1148,4.295,1149,5.118,1150,5.118,1151,5.118,1152,5.118,1153,5.118,1154,5.118]],["title/components/VisualizarResultadosComponent.html",[0,0.585,201,1.185]],["body/components/VisualizarResultadosComponent.html",[0,0.451,1,0.403,2,0.694,3,0.276,4,0.108,5,0.811,6,0.47,7,0.47,8,0.108,10,0.47,11,1.418,13,2.208,14,2.09,15,1.933,17,0.811,20,2.138,21,2.138,22,0.811,26,0.095,27,0.234,29,2.559,30,2.222,32,0.954,41,2.542,44,1.92,45,0.03,46,1.054,52,0.451,54,1.258,55,1.137,56,0.459,57,0.786,58,2.138,59,1.791,61,1.933,62,1.933,64,1.418,66,0.632,69,1.256,70,0.554,71,0.373,73,0.604,74,0.942,76,0.663,77,0.823,81,0.182,83,0.782,85,0.439,87,0.734,88,0.485,91,0.314,92,0.783,93,0.811,94,0.696,99,1.418,102,0.734,104,0.403,107,0.122,108,0.403,109,0.373,123,1.84,125,0.235,129,1.853,131,0.47,135,0.435,136,0.749,138,2.232,142,3.1,149,0.451,152,0.604,174,1.068,175,0.811,176,0.47,177,1.27,178,0.47,179,0.47,180,0.403,181,0.47,182,0.403,183,0.811,184,0.403,185,0.811,186,1.837,187,0.811,188,0.403,189,0.632,190,0.403,191,0.47,192,0.435,193,0.435,194,0.47,195,0.435,196,0.403,197,0.47,198,0.403,199,0.314,200,0.47,201,1.088,202,1.772,203,0.435,204,0.47,205,0.009,206,0.009,218,1.372,222,0.604,239,1.969,251,1.623,256,0.513,285,1.791,303,0.676,315,1.075,324,2.012,326,0.439,333,1.623,338,0.823,340,1.265,364,0.734,365,0.734,368,0.942,376,0.942,385,2.506,386,1.418,387,0.942,391,0.625,407,0.782,416,1.418,419,1.791,434,4.079,453,2.236,454,2.236,456,2.236,458,2.138,470,2.854,471,1.623,479,1.418,489,1.623,503,0.942,509,0.321,518,3.135,521,2.277,556,3.548,590,0.942,591,1.667,621,0.942,635,1.069,636,0.297,640,1.869,665,2.542,696,0.942,704,0.942,710,0.942,723,0.734,734,1.265,735,1.869,743,0.823,748,0.823,749,0.917,750,2.02,769,1.623,773,1.265,781,0.75,785,0.729,789,0.75,791,0.597,793,0.297,796,0.694,819,0.321,826,0.75,827,0.435,841,0.915,869,1.869,892,0.942,989,3.802,997,2.542,1001,0.942,1006,1.418,1022,2.542,1029,0.942,1040,1.982,1074,1.623,1078,2.542,1079,3.358,1082,0.942,1083,1.623,1098,0.942,1111,0.942,1120,2.138,1121,3.711,1123,3.358,1125,4.852,1126,0.942,1148,1.623,1155,1.122,1156,4.741,1157,0.942,1158,1.934,1159,2.548,1160,1.934,1161,2.548,1162,2.548,1163,1.934,1164,2.548,1165,1.934,1166,3.417,1167,2.548,1168,2.548,1169,2.548,1170,3.029,1171,3.029,1172,3.029,1173,1.934,1174,3.029,1175,1.934,1176,1.934,1177,3.417,1178,1.122,1179,1.122,1180,1.122,1181,1.934,1182,1.122,1183,3.735,1184,1.934,1185,1.122,1186,2.548,1187,1.934,1188,1.934,1189,1.934,1190,1.934,1191,5.696,1192,3.029,1193,3.417,1194,1.122,1195,3.735,1196,1.122,1197,1.122,1198,1.122,1199,1.122,1200,1.122,1201,1.122,1202,1.122,1203,1.122,1204,1.122,1205,1.122,1206,1.934,1207,1.122,1208,1.122,1209,1.934,1210,1.122,1211,1.122,1212,1.122,1213,1.122,1214,1.122,1215,1.122,1216,1.122,1217,0.823,1218,1.122,1219,1.122,1220,1.122,1221,3.029,1222,1.122,1223,1.934,1224,1.122,1225,1.122,1226,1.122,1227,2.548,1228,3.029,1229,1.122,1230,2.548,1231,2.548,1232,1.934,1233,1.122,1234,1.122,1235,1.934,1236,1.122,1237,1.122,1238,1.122,1239,3.735,1240,1.122,1241,1.934,1242,1.122,1243,1.122,1244,1.934,1245,1.122,1246,3.029,1247,1.122,1248,1.934,1249,1.122,1250,2.542,1251,2.548,1252,1.934,1253,1.122,1254,4.738,1255,3.735,1256,1.122,1257,1.122,1258,1.122,1259,1.122,1260,1.122,1261,1.122,1262,1.122,1263,1.122,1264,1.122,1265,5.346,1266,1.122,1267,1.122,1268,2.548,1269,1.122,1270,1.122,1271,1.934,1272,1.122,1273,1.122,1274,1.122,1275,1.122,1276,1.122,1277,1.122,1278,1.122,1279,1.122,1280,1.122,1281,1.122,1282,1.122,1283,1.122,1284,1.122,1285,1.122,1286,1.122,1287,1.122,1288,1.122,1289,1.934,1290,1.934,1291,1.934,1292,1.934,1293,1.934,1294,1.934,1295,1.934,1296,4.59,1297,4.421,1298,1.122,1299,5.269,1300,4.001,1301,4.001,1302,5.184,1303,2.548,1304,3.735,1305,5.184,1306,3.029,1307,3.029,1308,4.738,1309,3.735,1310,4.869,1311,3.417,1312,4.001,1313,1.934,1314,4.421,1315,1.122,1316,5.542,1317,1.122,1318,5.346,1319,1.934,1320,6.146,1321,5.782,1322,4.227,1323,4.869,1324,3.029,1325,4.227,1326,2.548,1327,5.184,1328,4.738,1329,3.417,1330,1.934,1331,4.227,1332,4.227,1333,1.934,1334,1.934,1335,3.029,1336,2.548,1337,1.122,1338,3.029,1339,1.122,1340,2.548,1341,4.001,1342,2.548,1343,3.735,1344,3.029,1345,1.934,1346,1.122,1347,1.934,1348,1.934,1349,2.548,1350,3.029,1351,1.122,1352,4.869,1353,1.934,1354,3.417,1355,1.934,1356,1.934,1357,1.122,1358,1.122,1359,1.122,1360,4.59,1361,3.029,1362,4.985,1363,1.122,1364,4.272,1365,5.09,1366,4.001,1367,3.417,1368,3.029,1369,3.029,1370,3.029,1371,3.029,1372,1.122,1373,3.417,1374,2.548,1375,2.548,1376,2.548,1377,2.548,1378,1.122,1379,2.548,1380,1.934,1381,1.934,1382,3.029,1383,1.122,1384,1.122,1385,3.417,1386,1.122,1387,1.122,1388,2.548,1389,1.934,1390,1.122,1391,2.548,1392,1.934,1393,2.548,1394,1.934,1395,2.548,1396,1.122,1397,1.122,1398,1.122,1399,1.122,1400,3.029,1401,1.122,1402,1.122,1403,1.122,1404,1.122,1405,1.122,1406,1.122,1407,1.934,1408,1.122,1409,2.548,1410,1.122,1411,1.122,1412,1.122,1413,1.934,1414,2.548,1415,2.548,1416,5.82,1417,1.934,1418,1.934,1419,1.934,1420,1.934,1421,1.934,1422,1.934,1423,1.122,1424,1.934,1425,1.934,1426,1.934,1427,1.934,1428,1.934,1429,1.122,1430,1.122,1431,1.122,1432,1.122,1433,1.122,1434,1.122,1435,1.934,1436,1.122,1437,1.623,1438,1.122,1439,1.122,1440,1.122,1441,1.122,1442,1.122,1443,1.122]],["title/coverage.html",[1444,3.764]],["body/coverage.html",[0,1.151,1,1.365,8,0.367,9,3.191,45,0.03,56,0.593,136,0.674,180,1.365,182,1.365,184,1.365,186,1.91,188,1.365,189,0.593,190,1.365,192,1.474,195,1.474,196,1.365,198,1.365,201,1.365,205,0.022,206,0.022,207,3.191,271,3.191,272,3.191,273,4.134,285,2.248,310,1.877,360,3.223,363,2.488,366,2.248,369,2.248,400,2.248,434,4.45,751,0.413,753,3.575,754,3.191,757,2.488,760,2.248,775,3.191,776,2.488,780,2.316,782,1.52,797,1.52,802,1.365,817,1.266,835,1.266,851,1.266,853,3.191,855,2.912,857,3.191,900,3.613,901,3.613,947,2.789,983,2.789,1027,3.191,1036,2.488,1037,3.191,1038,3.191,1040,2.488,1041,3.191,1094,3.191,1140,3.191,1141,3.191,1156,3.191,1157,3.191,1250,4.586,1444,3.191,1445,3.803,1446,3.803,1447,3.803,1448,3.803,1449,3.191,1450,5.464,1451,3.191,1452,6.244,1453,5.464,1454,3.803,1455,3.803,1456,3.803,1457,3.803,1458,3.803,1459,3.803,1460,3.803,1461,3.803,1462,3.803,1463,3.803,1464,3.803,1465,2.789,1466,2.789,1467,6.134,1468,3.191,1469,4.926,1470,5.464,1471,4.926,1472,3.803,1473,4.926,1474,4.926,1475,4.007,1476,4.007,1477,4.926,1478,3.191,1479,3.803,1480,3.803]],["title/dependencies.html",[1481,2.322,1482,3.327]],["body/dependencies.html",[45,0.03,71,1.626,73,2.632,77,3.584,205,0.025,206,0.025,357,3.197,873,3.584,988,3.584,1482,4.101,1483,4.887,1484,4.887,1485,6.586,1486,4.887,1487,5.753,1488,4.828,1489,4.887,1490,4.887,1491,5.753,1492,4.887,1493,4.887,1494,4.887,1495,4.887,1496,4.887,1497,4.887,1498,4.887,1499,4.887,1500,4.887,1501,4.887,1502,4.887,1503,4.887]],["title/miscellaneous/enumerations.html",[1504,1.257,1505,3.327]],["body/miscellaneous/enumerations.html",[26,0.423,45,0.029,62,2.541,138,2.092,205,0.026,206,0.026,324,3.138,635,1.667,785,1.667,786,2.092,787,2.092,788,2.092,867,4.89,1465,3.663,1466,4.274,1504,2.269,1505,4.192,1506,4.995,1507,5.827,1508,4.192,1509,4.995]],["title/miscellaneous/functions.html",[1504,1.257,1510,3.327]],["body/miscellaneous/functions.html",[26,0.427,44,2.659,45,0.029,46,1.807,54,2.889,55,1.948,56,0.546,57,1.807,205,0.026,206,0.026,324,3.153,326,1.143,798,1.952,947,4.293,964,4.226,1475,3.693,1476,4.54,1478,4.913,1504,2.287,1510,4.226,1511,4.913,1512,5.035]],["title/index.html",[26,0.234,1513,2.767,1514,2.767]],["body/index.html",[0,1.027,2,1.551,4,0.416,45,0.023,61,2.07,203,1.674,205,0.023,206,0.023,400,2.553,425,3.624,553,3.624,1364,5.319,1437,3.624,1488,3.624,1515,4.318,1516,5.796,1517,4.318,1518,5.339,1519,5.081,1520,6.221,1521,3.624,1522,4.318,1523,5.339,1524,5.796,1525,6.221,1526,6.338,1527,4.318,1528,5.339,1529,4.318,1530,4.318,1531,4.318,1532,5.339,1533,4.318,1534,4.318,1535,4.318,1536,4.318,1537,4.318,1538,5.339,1539,5.339,1540,4.318,1541,4.318,1542,4.318,1543,5.796,1544,4.318,1545,4.318,1546,4.318,1547,4.318,1548,4.318,1549,4.318,1550,4.318,1551,5.796,1552,4.318,1553,4.318,1554,4.318,1555,4.318,1556,4.318,1557,4.318,1558,4.318,1559,4.318,1560,4.318,1561,4.318,1562,5.339,1563,5.796,1564,4.318,1565,4.318,1566,4.318,1567,4.318,1568,4.318,1569,4.318,1570,5.796,1571,4.318,1572,6.338,1573,4.318,1574,5.339,1575,4.318,1576,4.318,1577,4.318,1578,4.318,1579,4.318,1580,4.318,1581,4.318,1582,4.318,1583,4.318,1584,4.318,1585,4.318,1586,4.318,1587,4.318,1588,4.318,1589,4.318,1590,3.167,1591,4.318,1592,4.318]],["title/modules.html",[1593,3.764]],["body/modules.html",[45,0.027,205,0.027,206,0.027,1593,4.461]],["title/overview.html",[1590,3.289]],["body/overview.html",[2,1.889,45,0.026,205,0.026,206,0.026,723,3.443,752,1.395,856,3.859,1590,3.859,1594,5.262,1595,5.262]],["title/properties.html",[27,0.48,1481,2.322]],["body/properties.html",[27,0.64,45,0.028,205,0.027,206,0.027,1521,4.438,1596,5.288]],["title/miscellaneous/typealiases.html",[1504,1.257,1597,3.964]],["body/miscellaneous/typealiases.html",[26,0.435,45,0.029,56,0.557,205,0.026,206,0.026,753,3.359,756,3.765,776,3.874,780,1.843,785,1.469,786,1.843,787,1.843,788,1.843,802,2.126,1468,4.968,1504,2.331,1598,5.133,1599,5.133,1600,5.133]],["title/miscellaneous/variables.html",[1217,2.907,1504,1.257]],["body/miscellaneous/variables.html",[11,2.868,26,0.331,45,0.03,56,0.634,61,2.147,62,2.147,66,0.691,81,0.814,88,0.474,91,0.814,92,0.889,94,0.525,104,1.404,114,3.282,125,1.051,129,2.321,149,0.693,189,0.544,193,2.265,205,0.022,206,0.022,213,1.231,225,2.868,226,1.302,233,2.868,234,2.868,326,1.403,335,3.623,363,3.282,391,1.231,394,4.21,412,3.282,419,3.274,470,2.733,521,2.702,535,2.559,537,3.282,749,1.434,750,3.453,785,1.119,791,1.207,793,1.037,794,1.404,795,1.404,812,1.404,813,1.404,829,1.516,831,1.119,839,1.516,883,3.282,884,2.868,967,3.282,983,3.679,988,2.868,989,4.061,1007,3.282,1010,3.282,1011,3.282,1217,2.868,1449,3.282,1451,4.21,1465,2.868,1466,3.679,1475,2.868,1476,3.679,1504,1.776,1508,3.282,1511,3.282,1519,4.21,1601,3.911,1602,3.911,1603,3.911,1604,3.911,1605,3.911,1606,3.911,1607,3.911,1608,5.016,1609,3.911,1610,3.911,1611,3.911,1612,3.911,1613,3.911,1614,3.911,1615,3.911,1616,3.911,1617,3.911,1618,5.016,1619,3.911,1620,3.911,1621,3.911,1622,3.911,1623,3.911,1624,3.911,1625,3.911,1626,3.911,1627,3.911,1628,3.911,1629,3.911,1630,3.911,1631,3.911,1632,3.911,1633,3.911,1634,3.911,1635,3.911,1636,3.911,1637,3.911,1638,3.911]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":434,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1596,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1336,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15",{"_index":1378,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.15.0",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1383,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.2rem",{"_index":1441,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3",{"_index":1420,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3rem",{"_index":1384,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.3s",{"_index":1370,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.4",{"_index":1422,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.5rem",{"_index":1354,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6",{"_index":1431,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.6rem",{"_index":1442,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.7rem",{"_index":1440,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.8rem",{"_index":1385,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.95",{"_index":1326,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0.9rem",{"_index":1402,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["0/1",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["00f2fe",{"_index":1259,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1",{"_index":338,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["1).padstart(2",{"_index":433,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["1.1rem",{"_index":1343,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.2rem",{"_index":1382,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.3rem",{"_index":1389,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.4",{"_index":1390,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5",{"_index":1397,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.5rem",{"_index":1322,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.6",{"_index":1345,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1.8rem",{"_index":1340,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["1/1",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1250,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1298,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["10px",{"_index":1333,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["11",{"_index":1594,"title":{},"body":{"overview.html":{}}}],["1200px",{"_index":1346,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["126",{"_index":1418,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["12px",{"_index":1376,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["14",{"_index":1595,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":682,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["15px",{"_index":1329,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["167",{"_index":1427,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["19.0.0",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["19.1.2",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["19.2.0",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["19.2.11",{"_index":1522,"title":{},"body":{"index.html":{}}}],["19.2.16",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["1rem",{"_index":1316,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2",{"_index":723,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1351,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2/6",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1266,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2000",{"_index":578,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["2025",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["20c997",{"_index":1425,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["20px",{"_index":1386,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["234",{"_index":1419,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["250px",{"_index":1443,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["255",{"_index":1325,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["25px",{"_index":1367,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["28a745",{"_index":1424,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2px",{"_index":1375,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["2rem",{"_index":1302,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3",{"_index":725,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["3000",{"_index":480,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["300px",{"_index":1438,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["30px",{"_index":1334,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["33",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":1350,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["35px",{"_index":1377,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["38f9d7",{"_index":1261,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["3rem",{"_index":1330,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4.4.9",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":698,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["4000",{"_index":464,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["400px",{"_index":1410,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["404",{"_index":711,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["43e97b",{"_index":1260,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["480px",{"_index":1439,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4facfe",{"_index":1258,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["4px",{"_index":1395,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["500",{"_index":702,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["5000",{"_index":649,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["500px",{"_index":1337,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["555",{"_index":1359,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["600",{"_index":1360,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["60vh",{"_index":1313,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["666",{"_index":1342,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["667eea",{"_index":1254,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["69",{"_index":1428,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["7.0.0",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1353,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["764ba2",{"_index":1255,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["768px",{"_index":1436,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["8000",{"_index":715,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["8px",{"_index":1366,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["999",{"_index":1411,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["abierta",{"_index":785,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["abiertas",{"_index":789,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["abre",{"_index":442,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["abrir",{"_index":465,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abriragregaropcion",{"_index":943,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["abrirdialog",{"_index":290,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abrirdialogeditar",{"_index":291,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["abstractcontrol",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceder",{"_index":1093,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["accept",{"_index":533,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["acceptbuttonprops",{"_index":532,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accessors",{"_index":302,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["accion",{"_index":1414,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["acciones",{"_index":1413,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["activar",{"_index":594,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["activatedroute",{"_index":1213,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["actual",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["actualiz",{"_index":491,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualiza",{"_index":482,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizada",{"_index":490,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["actualizar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["actualizarestadoencuesta",{"_index":859,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id",{"_index":861,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id:number",{"_index":893,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["additional",{"_index":1582,"title":{},"body":{"index.html":{}}}],["adicional",{"_index":228,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{}}}],["agreg",{"_index":495,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agrega",{"_index":460,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregada",{"_index":494,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregamos",{"_index":616,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregar",{"_index":444,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{}}}],["agregar/editar",{"_index":380,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agregaropcion",{"_index":905,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregaropcion(opcion",{"_index":955,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta",{"_index":292,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["agregarpregunta(pregunta",{"_index":309,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["agrupa",{"_index":847,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["ahora",{"_index":630,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["al",{"_index":407,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["alias",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1308,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["allowed",{"_index":1433,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["almacena",{"_index":381,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["altamirano",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["ancho",{"_index":1136,"title":{},"body":{"components/SeccionComponent.html":{}}}],["anchos",{"_index":1099,"title":{},"body":{"components/SeccionComponent.html":{}}}],["angular",{"_index":1519,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":872,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["angular/compiler",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":357,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{},"dependencies.html":{}}}],["angularx",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["animaciones",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anteriores",{"_index":654,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["antes",{"_index":511,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["análisis",{"_index":248,"title":{},"body":{"components/BannerComponent.html":{}}}],["anónima",{"_index":235,"title":{},"body":{"components/BannerComponent.html":{}}}],["api/v1/encuestas",{"_index":891,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["aplica",{"_index":839,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["aplicar",{"_index":1132,"title":{},"body":{"components/SeccionComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["app.component.css",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes.ts",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1532,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":1290,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["archivo",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["array",{"_index":798,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/functions.html":{}}}],["artifacts",{"_index":1555,"title":{},"body":{"index.html":{}}}],["asegurar",{"_index":716,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["asigna",{"_index":1237,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["asociados",{"_index":1152,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["asíncrona",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aura",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":1347,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["automatically",{"_index":1533,"title":{},"body":{"index.html":{}}}],["available",{"_index":1546,"title":{},"body":{"index.html":{}}}],["aún",{"_index":1022,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["backend",{"_index":580,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["background",{"_index":1299,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["backgroundcolor",{"_index":1253,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["banner",{"_index":209,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["banner.component.css",{"_index":221,"title":{},"body":{"components/BannerComponent.html":{}}}],["banner.component.html",{"_index":220,"title":{},"body":{"components/BannerComponent.html":{}}}],["bannercomponent",{"_index":180,"title":{"components/BannerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["barra",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["basada",{"_index":762,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["between",{"_index":1381,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bienvenida",{"_index":212,"title":{},"body":{"components/BannerComponent.html":{}}}],["blob",{"_index":1082,"title":{},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["body",{"_index":1379,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["booleano",{"_index":811,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["border",{"_index":1327,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["bordercolor",{"_index":1263,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["borderwidth",{"_index":1262,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["botones",{"_index":216,"title":{},"body":{"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["bottom",{"_index":1265,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["botón",{"_index":387,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["box",{"_index":1331,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["browser",{"_index":1488,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1551,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1552,"title":{},"body":{"index.html":{}}}],["button",{"_index":1415,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:disabled",{"_index":1429,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["button:hover:not(:disabled",{"_index":1421,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["buttonmodule",{"_index":218,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["básicos",{"_index":998,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cada",{"_index":845,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["calcular",{"_index":1247,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambiar",{"_index":1288,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambiarestadoencuesta",{"_index":1170,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cambios",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":542,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["campos",{"_index":550,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelada",{"_index":576,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cancelar",{"_index":529,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cantidad",{"_index":1401,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["capitalize",{"_index":1387,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card",{"_index":1323,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["card:hover",{"_index":1372,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cardmodule",{"_index":1161,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["carga",{"_index":386,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargadas",{"_index":1023,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargados",{"_index":1234,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargando",{"_index":1166,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cargar",{"_index":997,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cargarpreguntaparaeditar",{"_index":944,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarpreguntaparaeditar(pregunta",{"_index":957,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["cargarresultados",{"_index":1171,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["caso",{"_index":692,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["catcherror",{"_index":1062,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["catcherror(this.handleerror",{"_index":1067,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["center",{"_index":1310,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["cerrar",{"_index":473,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cerrardialogseleccion",{"_index":293,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["chart",{"_index":1409,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["chart.js",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["checkbox",{"_index":810,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["choose",{"_index":1578,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":481,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ciertas",{"_index":778,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{}}}],["circle",{"_index":526,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["class",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cli",{"_index":1520,"title":{},"body":{"index.html":{}}}],["clic",{"_index":727,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["clip",{"_index":1356,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["closable",{"_index":520,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["closeonescape",{"_index":522,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["code",{"_index":1538,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":681,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["codigoqr",{"_index":604,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["codigorespuesta",{"_index":638,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["codigoresultados",{"_index":640,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["codigotipoenum",{"_index":867,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":1318,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["column",{"_index":1307,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["come",{"_index":1576,"title":{},"body":{"index.html":{}}}],["comienza",{"_index":267,"title":{},"body":{"components/BannerComponent.html":{}}}],["command",{"_index":1570,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["como",{"_index":617,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionDTO.html":{}}}],["comparte",{"_index":264,"title":{},"body":{"components/BannerComponent.html":{}}}],["compile",{"_index":1553,"title":{},"body":{"index.html":{}}}],["completa",{"_index":598,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["complete",{"_index":553,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["completo",{"_index":852,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["componen",{"_index":833,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["componente",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"overview.html":{}}}],["computa",{"_index":1131,"title":{},"body":{"components/SeccionComponent.html":{}}}],["computed",{"_index":1119,"title":{},"body":{"components/SeccionComponent.html":{}}}],["con",{"_index":215,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{}}}],["concreta",{"_index":834,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["conectar",{"_index":707,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conectividad",{"_index":563,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["conexión",{"_index":564,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["configurables",{"_index":1101,"title":{},"body":{"components/SeccionComponent.html":{}}}],["configurar",{"_index":475,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/SeccionComponent.html":{}}}],["confirmación",{"_index":488,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmar",{"_index":519,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmarcrearencuesta",{"_index":294,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminaropcion",{"_index":945,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminaropcion(index",{"_index":960,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["confirmareliminarpregunta",{"_index":295,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmareliminarpregunta(index",{"_index":314,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["confirmationservice",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["confirmdialogmodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["consistentes",{"_index":1104,"title":{},"body":{"components/SeccionComponent.html":{}}}],["console.error",{"_index":592,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.error('detalles",{"_index":1090,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["console.error('error",{"_index":1083,"title":{},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["console.log",{"_index":583,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["console.log('código",{"_index":1223,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('iniciando",{"_index":1225,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('resultados",{"_index":1233,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["console.log('visualizarresultadoscomponent",{"_index":1219,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["const",{"_index":419,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["construir",{"_index":664,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["container",{"_index":1296,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contenedor",{"_index":1098,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["contenido",{"_index":1148,"title":{},"body":{"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["content",{"_index":1312,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["contiene",{"_index":795,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["continuar",{"_index":554,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["control",{"_index":412,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["controla",{"_index":377,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controles",{"_index":397,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["controlopciones",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlopciones?.value",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controltipo?.value",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copy",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["correctamente",{"_index":503,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["corresponde",{"_index":384,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["corto",{"_index":770,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["coverage",{"_index":1444,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cre",{"_index":231,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["crea",{"_index":263,"title":{},"body":{"components/BannerComponent.html":{}}}],["creacion",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["creacionencuestacomponent",{"_index":182,"title":{"components/CreacionEncuestaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["creación",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creación/edición",{"_index":986,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["creada",{"_index":631,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creado",{"_index":660,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["creando",{"_index":268,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["creandoencuesta",{"_index":282,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["crear",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["crearencuesta",{"_index":296,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta(dto",{"_index":863,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["crearla",{"_index":768,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["create",{"_index":758,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["createencuestadto",{"_index":369,"title":{"interfaces/CreateEncuestaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["createopciondto",{"_index":776,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["createpreguntadto",{"_index":757,"title":{"interfaces/CreatePreguntaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["css",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["csv",{"_index":1079,"title":{},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["cuadro",{"_index":510,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["cuando",{"_index":850,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["cuerpo",{"_index":899,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["cuestión",{"_index":265,"title":{},"body":{"components/BannerComponent.html":{}}}],["currentroute",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":1432,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["código",{"_index":773,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["códigos",{"_index":648,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["cómo",{"_index":844,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["danger",{"_index":572,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["data",{"_index":841,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["datasets",{"_index":1184,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["date",{"_index":421,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["date(formdata.fechavencimiento",{"_index":607,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["date(this.fechavencimiento.value",{"_index":629,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datetime",{"_index":424,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["datos",{"_index":256,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["day",{"_index":435,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["day}t${hours}:${minutes",{"_index":441,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ddthh:mm",{"_index":428,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["de",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":739,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["debemos",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["debería",{"_index":620,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["decisiones",{"_index":247,"title":{},"body":{"components/BannerComponent.html":{}}}],["decorador",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["deep",{"_index":1365,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["definen",{"_index":1150,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["definidas",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definidos",{"_index":1135,"title":{},"body":{"components/SeccionComponent.html":{}}}],["definir",{"_index":1097,"title":{},"body":{"components/SeccionComponent.html":{}}}],["del",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["delay",{"_index":673,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dentro",{"_index":815,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["dependencies",{"_index":1482,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["desarrollado",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["descargado",{"_index":1285,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["descargar",{"_index":1271,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["describe",{"_index":823,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["descripcion",{"_index":781,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["descripción",{"_index":832,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["description",{"_index":208,"title":{},"body":{"components/BannerComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["desea",{"_index":517,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["deseas",{"_index":746,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["deshabilitada",{"_index":1287,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["design",{"_index":1434,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["detail",{"_index":458,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["detailed",{"_index":1587,"title":{},"body":{"index.html":{}}}],["detallado",{"_index":249,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["detalles",{"_index":684,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["detección",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determina",{"_index":1009,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["development",{"_index":1523,"title":{},"body":{"index.html":{}}}],["devolvi",{"_index":647,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["devuelve",{"_index":504,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["dialog",{"_index":443,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["dialog.component",{"_index":361,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.css",{"_index":904,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.html",{"_index":903,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts",{"_index":901,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:103",{"_index":969,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":958,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":966,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:137",{"_index":977,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:142",{"_index":979,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:147",{"_index":981,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":954,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:179",{"_index":959,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:184",{"_index":965,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:192",{"_index":953,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:197",{"_index":956,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:206",{"_index":963,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":961,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":910,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":911,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":914,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":908,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":971,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":952,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":976,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":916,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":970,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":912,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":974,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:64",{"_index":972,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":951,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":913,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["dialog.component.ts:97",{"_index":968,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialog/gestion",{"_index":360,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["dialoggestionopcionvisible",{"_index":939,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dialoggestionpreguntavisible",{"_index":283,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["dialogmodule",{"_index":277,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["dialogseleccionpreguntavisible",{"_index":284,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["diferentes",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dinámica",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":1306,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["directive",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["directory",{"_index":1557,"title":{},"body":{"index.html":{}}}],["diseña",{"_index":236,"title":{},"body":{"components/BannerComponent.html":{}}}],["display",{"_index":1304,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["disponible",{"_index":879,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["disponibles",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["dist",{"_index":1556,"title":{},"body":{"index.html":{}}}],["diálogo",{"_index":379,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["document.body.appendchild(link",{"_index":1278,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.body.removechild(link",{"_index":1280,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["document.createelement('a",{"_index":1274,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["documentation",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["donde",{"_index":1146,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["dropdownmodule",{"_index":938,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["dto",{"_index":840,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["dynamic",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1238,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["e2e",{"_index":1573,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1575,"title":{},"body":{"index.html":{}}}],["e74c3c",{"_index":1339,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["e9ecef",{"_index":1403,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ease",{"_index":1371,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["edición",{"_index":383,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["edita",{"_index":467,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editando",{"_index":393,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editar",{"_index":395,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["editarla",{"_index":462,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta",{"_index":297,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["editarpregunta(index",{"_index":318,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["efecto",{"_index":925,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["effect",{"_index":917,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eficiente",{"_index":241,"title":{},"body":{"components/BannerComponent.html":{}}}],["ejecutado",{"_index":1220,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ejecutándose",{"_index":709,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["el",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["elegir",{"_index":816,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["element",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["elimin",{"_index":501,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["elimina",{"_index":497,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminación",{"_index":569,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminada",{"_index":500,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminar",{"_index":566,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion",{"_index":946,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminaropcion(index",{"_index":962,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["eliminarpregunta",{"_index":298,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["eliminarpregunta(index",{"_index":320,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["emilia",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["emite",{"_index":932,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["en",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":1348,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["encontrado",{"_index":713,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encontrar",{"_index":472,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta",{"_index":136,"title":{"interfaces/Encuesta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["encuesta'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["encuesta.codigoqr",{"_index":625,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.css",{"_index":281,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.html",{"_index":280,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts",{"_index":273,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta.component.ts:100",{"_index":322,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:113",{"_index":307,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:123",{"_index":308,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:139",{"_index":319,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:171",{"_index":312,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:176",{"_index":311,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:211",{"_index":321,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:225",{"_index":325,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:232",{"_index":313,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:261",{"_index":327,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:300",{"_index":316,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:334",{"_index":317,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:48",{"_index":336,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:51",{"_index":341,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:52",{"_index":345,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:53",{"_index":329,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:54",{"_index":334,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:57",{"_index":332,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:60",{"_index":344,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:63",{"_index":331,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:66",{"_index":342,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:67",{"_index":339,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:70",{"_index":306,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:85",{"_index":347,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:90",{"_index":349,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.component.ts:95",{"_index":351,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.dto",{"_index":371,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"injectables/EncuestasService.html":{}}}],["encuesta.dto.ts",{"_index":754,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"coverage.html":{}}}],["encuesta.enlacecorto",{"_index":624,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.fechavencimiento",{"_index":612,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.nombre",{"_index":658,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta.preguntas.length",{"_index":661,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuesta/creacion",{"_index":272,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["encuesta=${res.id}&codigo",{"_index":669,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["encuestadto",{"_index":760,"title":{"interfaces/EncuestaDTO.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["encuestaresponse",{"_index":851,"title":{"interfaces/EncuestaResponse.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["encuestas",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["encuestasservice",{"_index":285,"title":{"injectables/EncuestasService.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["end",{"_index":1572,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":712,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["enlace",{"_index":769,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlacecorto",{"_index":603,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["enlaces",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["enlaces'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enlaces.component.ts",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["enlaces?id",{"_index":668,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["entrada",{"_index":1134,"title":{},"body":{"components/SeccionComponent.html":{}}}],["entre",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enum",{"_index":827,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enumerations",{"_index":1505,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/codigo",{"_index":874,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["enums/tipos",{"_index":364,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["enunciado",{"_index":824,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["enviadas",{"_index":849,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["enviamos",{"_index":896,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["enviar",{"_index":582,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["envía",{"_index":579,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["err",{"_index":683,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error",{"_index":690,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.error.message",{"_index":701,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.message",{"_index":689,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.status",{"_index":686,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.statustext",{"_index":688,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["err.url",{"_index":691,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["error",{"_index":470,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["error.component",{"_index":367,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["error.component.css",{"_index":1154,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.html",{"_index":1153,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["error.component.ts",{"_index":1141,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["error.error",{"_index":1089,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["error/texto",{"_index":366,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["errordetail",{"_index":693,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores",{"_index":535,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["errores.join",{"_index":552,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.length",{"_index":549,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('debe",{"_index":548,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errores.push('el",{"_index":541,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errors",{"_index":587,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["errorsummary",{"_index":697,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["es",{"_index":831,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"miscellaneous/variables.html":{}}}],["escrita",{"_index":803,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["esmultiplechoice",{"_index":947,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(controltipo.value",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esmultiplechoice(tipo",{"_index":964,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/functions.html":{}}}],["esmultiplechoice(tipo.value",{"_index":1019,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["específica",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["específico",{"_index":1423,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["específicos",{"_index":536,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["espera",{"_index":596,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["esperada",{"_index":825,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["est",{"_index":392,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["esta",{"_index":518,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["establecer",{"_index":741,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["estadistica",{"_index":1399,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estadisticas",{"_index":1398,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estado",{"_index":385,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estadoencuesta",{"_index":1167,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["estadísticas",{"_index":251,"title":{},"body":{"components/BannerComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["estamos",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["estar",{"_index":544,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["este",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["estefanía",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["estilo",{"_index":1149,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["estilos",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/SeccionComponent.html":{}}}],["estos",{"_index":615,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["estructura",{"_index":634,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["estructurar",{"_index":1103,"title":{},"body":{"components/SeccionComponent.html":{}}}],["están",{"_index":257,"title":{},"body":{"components/BannerComponent.html":{}}}],["etc",{"_index":1039,"title":{},"body":{"interfaces/PreguntaDTO.html":{}}}],["event",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["event.url",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evento",{"_index":922,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["example",{"_index":1526,"title":{},"body":{"index.html":{}}}],["exclamation",{"_index":570,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["execute",{"_index":1564,"title":{},"body":{"index.html":{}}}],["existen",{"_index":1001,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["existente",{"_index":483,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["existentes",{"_index":451,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["exitosa",{"_index":1283,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exitosamente",{"_index":632,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/RespuestasService.html":{}}}],["export",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportación",{"_index":1282,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportandocsv",{"_index":1168,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportar",{"_index":1078,"title":{},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["exportarcsv",{"_index":1172,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["exportarresultadoscsv",{"_index":1042,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["exportarresultadoscsv(idencuesta",{"_index":1047,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["extends",{"_index":755,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["f093fb",{"_index":1256,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f5576c",{"_index":1257,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["f8f9fa",{"_index":1394,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["false",{"_index":556,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["falso",{"_index":813,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":557,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fecha",{"_index":403,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["fechaseleccionada",{"_index":628,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["fechavencimiento",{"_index":305,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["fff",{"_index":1264,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["files",{"_index":1537,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1357,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["filter",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["finalizar",{"_index":388,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["flex",{"_index":1305,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["floatlabel",{"_index":275,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["floatlabelmodule",{"_index":902,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["following",{"_index":1569,"title":{},"body":{"index.html":{}}}],["font",{"_index":1320,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["footer",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["form",{"_index":286,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["form.haserror(\"opcionesrequeridas",{"_index":1025,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["form.touched",{"_index":738,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["forma",{"_index":233,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":354,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formatear",{"_index":422,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol",{"_index":355,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formcontrol(null",{"_index":402,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formcontrol(pregunta",{"_index":493,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata",{"_index":601,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.fechavencimiento",{"_index":606,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.nombre",{"_index":605,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formdata.preguntas",{"_index":609,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formgroup",{"_index":335,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":276,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["formulario",{"_index":373,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["formularios",{"_index":1144,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["formularon",{"_index":457,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["framework",{"_index":1577,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1515,"title":{},"body":{"index.html":{}}}],["fue",{"_index":577,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["function",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1510,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":1361,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["generado",{"_index":772,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["generar",{"_index":621,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["generate",{"_index":1543,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1517,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["gestionar",{"_index":920,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gestionopciondialogcomponent",{"_index":184,"title":{"components/GestionOpcionDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["gestionpreguntadialogcomponent",{"_index":188,"title":{"components/GestionPreguntaDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["getchartdata",{"_index":1173,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartdata(pregunta",{"_index":1181,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getchartoptions",{"_index":1174,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getfechaminima",{"_index":299,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getfechavencimiento",{"_index":350,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getnombre",{"_index":348,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getopciones",{"_index":980,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["getporcentajeopcion",{"_index":1175,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getporcentajeopcion(opcion",{"_index":1192,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["getpreguntas",{"_index":346,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["getter",{"_index":410,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["gettexto",{"_index":915,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["getting",{"_index":1513,"title":{"index.html":{}},"body":{}}],["gettipo",{"_index":978,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettipopreguntapresentacion",{"_index":300,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(pregunta.tipo",{"_index":747,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipopreguntapresentacion(tipo",{"_index":323,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["gettipospreguntapresentacion",{"_index":948,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["gettotalrespuestasopcion",{"_index":1176,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gettotalrespuestasopcion(pregunta",{"_index":1195,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gradient(135deg",{"_index":1301,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["grafico",{"_index":1407,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["group",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('opciones",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('tipo",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gráfico",{"_index":1251,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["gráficos",{"_index":250,"title":{},"body":{"components/BannerComponent.html":{}}}],["h1",{"_index":1349,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h2",{"_index":1338,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h3",{"_index":1317,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h4",{"_index":1392,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["h5",{"_index":1408,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ha",{"_index":659,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["habilita",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["habilitación",{"_index":897,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["habilitada",{"_index":743,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["habilitar",{"_index":895,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["habilitar/deshabilitar",{"_index":892,"title":{},"body":{"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["hace",{"_index":878,"title":{},"body":{"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["hacer",{"_index":882,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["han",{"_index":1284,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["handleerror",{"_index":1043,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["handleerror(error",{"_index":1049,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["hay",{"_index":750,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["haz",{"_index":726,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["header",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["height",{"_index":1297,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["helpbuilding",{"_index":1550,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1405,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["hijos",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["hours",{"_index":437,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["http",{"_index":884,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1531,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":858,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["httperrorresponse",{"_index":1050,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["icon",{"_index":523,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["id",{"_index":636,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["id_pregunta",{"_index":783,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["idencuesta",{"_index":869,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["identificador",{"_index":854,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"interfaces/PreguntaDTO.html":{}}}],["identifier",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":790,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["idx",{"_index":733,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["ignacio",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":1158,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/PreguntaDTO.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["importa",{"_index":223,"title":{},"body":{"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["importados",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["important",{"_index":1416,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["includes",{"_index":1540,"title":{},"body":{"index.html":{}}}],["includes(tipo",{"_index":1012,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["including",{"_index":1586,"title":{},"body":{"index.html":{}}}],["incluyendo",{"_index":655,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incompleta",{"_index":646,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["incorporada",{"_index":405,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["indefinida",{"_index":744,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":829,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["indicepreguntaeditando",{"_index":287,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["información",{"_index":1087,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["information",{"_index":1585,"title":{},"body":{"index.html":{}}}],["ingresa",{"_index":722,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["ingresado",{"_index":838,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["ingresar",{"_index":1026,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["inicializa",{"_index":396,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["iniciando",{"_index":584,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inicio",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(activatedroute",{"_index":1209,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(confirmationservice",{"_index":328,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inject(encuestasservice",{"_index":333,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(httpclient",{"_index":870,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["inject(messageservice",{"_index":340,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["inject(respuestasservice",{"_index":1206,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["inject(router",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["injectable",{"_index":855,"title":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["injectables",{"_index":856,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"overview.html":{}}}],["inmediatamente",{"_index":650,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["input",{"_index":423,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["input('15vw",{"_index":1112,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('40vw",{"_index":1116,"title":{},"body":{"components/SeccionComponent.html":{}}}],["input('70vw",{"_index":1114,"title":{},"body":{"components/SeccionComponent.html":{}}}],["inputs",{"_index":906,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["inputtextmodule",{"_index":274,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["insights",{"_index":243,"title":{},"body":{"components/BannerComponent.html":{}}}],["instanceof",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["instrucciones",{"_index":721,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["intenta",{"_index":704,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["intentar",{"_index":695,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["interface",{"_index":751,"title":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"coverage.html":{}}}],["interfaces",{"_index":752,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"overview.html":{}}}],["interfaces/create",{"_index":370,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaces/encuesta.dto",{"_index":876,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["interfaces/pregunta.dto",{"_index":362,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["interfaces/respuesta.dto",{"_index":1064,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["interfaz",{"_index":761,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{}}}],["interno",{"_index":703,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inválido",{"_index":593,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["inyección",{"_index":881,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["inyectados",{"_index":376,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["iscreationpage",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["ishomepage",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["ispresentacionenlacespage",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["isresponderencuestapage",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["isresultadospage",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["italic",{"_index":1412,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["item",{"_index":1393,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["items",{"_index":1309,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["jos",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["judith",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":1311,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["karma",{"_index":1565,"title":{},"body":{"index.html":{}}}],["kloster",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["la",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":528,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["labels",{"_index":1183,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["las",{"_index":791,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["laterales",{"_index":1139,"title":{},"body":{"components/SeccionComponent.html":{}}}],["left",{"_index":1126,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["leftmargin",{"_index":1107,"title":{},"body":{"components/SeccionComponent.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["libremente",{"_index":804,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["life",{"_index":463,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["limpiar",{"_index":652,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["linde",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":1344,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["linear",{"_index":1300,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link",{"_index":1273,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.click",{"_index":1279,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.download",{"_index":1276,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["link.href",{"_index":1275,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["list",{"_index":1545,"title":{},"body":{"index.html":{}}}],["lista",{"_index":765,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["literal",{"_index":967,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1303,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["local",{"_index":425,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"index.html":{}}}],["los",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["lógica",{"_index":227,"title":{},"body":{"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["maia",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":1187,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["manera",{"_index":240,"title":{},"body":{"components/BannerComponent.html":{}}}],["mantener",{"_index":1085,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["map",{"_index":1063,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["map(response",{"_index":1068,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["margin",{"_index":1125,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maría",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round((opcion.cantidad_respuestas",{"_index":1249,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["max",{"_index":1123,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["maxwidth",{"_index":1108,"title":{},"body":{"components/SeccionComponent.html":{}}}],["media",{"_index":1435,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["mejores",{"_index":246,"title":{},"body":{"components/BannerComponent.html":{}}}],["menos",{"_index":408,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mensaje",{"_index":487,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["mensajes",{"_index":924,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/TextoErrorComponent.html":{}}}],["message",{"_index":516,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["messagemodule",{"_index":279,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["messageservice",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["metadatos",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["micaela",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["mientras",{"_index":597,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["min",{"_index":1120,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["minutes",{"_index":439,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["minutos",{"_index":266,"title":{},"body":{"components/BannerComponent.html":{}}}],["minwidth",{"_index":1109,"title":{},"body":{"components/SeccionComponent.html":{}}}],["miscellaneous",{"_index":1504,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":427,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["model",{"_index":918,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["model(null",{"_index":975,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["model.required",{"_index":921,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["modify",{"_index":1536,"title":{},"body":{"index.html":{}}}],["modo",{"_index":389,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modoedicion",{"_index":288,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["modules",{"_index":1593,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":767,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["month",{"_index":431,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["more",{"_index":1584,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["mostrarerroresvalidacion",{"_index":301,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["muestra",{"_index":210,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"components/TextoErrorComponent.html":{}}}],["márgenes",{"_index":1100,"title":{},"body":{"components/SeccionComponent.html":{}}}],["más",{"_index":705,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["máxima",{"_index":259,"title":{},"body":{"components/BannerComponent.html":{}}}],["máximo",{"_index":1138,"title":{},"body":{"components/SeccionComponent.html":{}}}],["método",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["mínima",{"_index":417,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["mínimo",{"_index":1137,"title":{},"body":{"components/SeccionComponent.html":{}}}],["módulos",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["múltiple",{"_index":794,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":1544,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["navbar.component.css",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":190,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["navegación",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/NavbarComponent.html":{}}}],["navegar",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1530,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["navigateto(route",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":468,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["necesario",{"_index":1088,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["necesarios",{"_index":224,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["needs",{"_index":1581,"title":{},"body":{"index.html":{}}}],["new",{"_index":400,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1231,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["ng",{"_index":1364,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":1177,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["nico",{"_index":818,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["nombre",{"_index":304,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["nombre.invalid",{"_index":728,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombre.touched",{"_index":729,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nombrepregunta",{"_index":567,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["none",{"_index":1368,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasabiertas",{"_index":1294,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["norespuestasopciones",{"_index":1295,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["now",{"_index":420,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["now.getfullyear",{"_index":430,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["nueva",{"_index":445,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["nuevamente",{"_index":696,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["null",{"_index":989,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":973,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["number",{"_index":315,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numero",{"_index":819,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["numeropregunta",{"_index":836,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["número",{"_index":820,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["o",{"_index":213,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/TextoErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":843,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["objeto",{"_index":602,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{}}}],["obligatoria",{"_index":828,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["observable",{"_index":865,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["obtener",{"_index":416,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["obtenerencuestaparaparticipacion",{"_index":1044,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerencuestaparaparticipacion(id",{"_index":1052,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta",{"_index":1045,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenerresultadosencuesta(codigoresultados",{"_index":1055,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenida",{"_index":1069,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtenido",{"_index":1224,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["obtiene",{"_index":600,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["obtén",{"_index":242,"title":{},"body":{"components/BannerComponent.html":{}}}],["one",{"_index":1579,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":1159,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opacity",{"_index":1430,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["opcion.cantidad_respuestas",{"_index":1246,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["opcion.dto",{"_index":777,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{}}}],["opcion.dto.ts",{"_index":1468,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["opcion.texto",{"_index":735,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["opcion_multiple_seleccion_multiple",{"_index":787,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcion_multiple_seleccion_simple",{"_index":786,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["opcional",{"_index":740,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["opciondto",{"_index":1036,"title":{"interfaces/OpcionDTO.html":{}},"body":{"interfaces/OpcionDTO.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["opciones",{"_index":749,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["opciones.touched",{"_index":1024,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value",{"_index":1021,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opciones.value.length",{"_index":1020,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opcionesnovacias",{"_index":983,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opcionesrequeridas",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opcionrespuesta",{"_index":817,"title":{"interfaces/OpcionRespuesta.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["opcionseleccionada",{"_index":941,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["opción",{"_index":793,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1529,"title":{},"body":{"index.html":{}}}],["operación",{"_index":575,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["optimiza",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1559,"title":{},"body":{"index.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["orden",{"_index":821,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["original",{"_index":611,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/RespuestasService.html":{}}}],["otros",{"_index":1086,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["outlined",{"_index":531,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["output",{"_index":919,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["outputs",{"_index":907,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["overflow",{"_index":1404,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["overview",{"_index":1590,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1341,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["package",{"_index":1481,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":1191,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["padre",{"_index":933,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["page",{"_index":1592,"title":{},"body":{"index.html":{}}}],["pantalla",{"_index":211,"title":{},"body":{"components/BannerComponent.html":{}}}],["para",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["parte",{"_index":898,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["payload",{"_index":1058,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pequeño",{"_index":672,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["performance",{"_index":1560,"title":{},"body":{"index.html":{}}}],["permite",{"_index":1096,"title":{},"body":{"components/SeccionComponent.html":{}}}],["permitida",{"_index":418,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["permitiendo",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pero",{"_index":763,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{}}}],["persiste",{"_index":560,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["personalizadas",{"_index":237,"title":{},"body":{"components/BannerComponent.html":{}}}],["personalizado",{"_index":991,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["personalizados",{"_index":1143,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["peticiones",{"_index":883,"title":{},"body":{"injectables/EncuestasService.html":{},"miscellaneous/variables.html":{}}}],["petición",{"_index":886,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["pi",{"_index":524,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["pick",{"_index":756,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":1066,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":1076,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pipe(filter(event",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1549,"title":{},"body":{"index.html":{}}}],["plantilla",{"_index":1151,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["plugins",{"_index":1188,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["poder",{"_index":461,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["por",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["porcentaje",{"_index":1248,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["portada",{"_index":214,"title":{},"body":{"components/BannerComponent.html":{}}}],["posible",{"_index":694,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["posibles",{"_index":799,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["position",{"_index":1189,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["post",{"_index":887,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["powerful",{"_index":1541,"title":{},"body":{"index.html":{}}}],["pregunta",{"_index":189,"title":{"interfaces/Pregunta.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pregunta${encuesta.preguntas.length",{"_index":662,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["pregunta.dto",{"_index":759,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{}}}],["pregunta.dto.ts",{"_index":775,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{}}}],["pregunta.enum",{"_index":365,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.enum.ts",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pregunta.id",{"_index":1073,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pregunta.numero",{"_index":1074,"title":{},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones",{"_index":734,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.foreach(opcion",{"_index":1002,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["pregunta.opciones.length",{"_index":748,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.map((opcion",{"_index":1252,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.opciones.reduce((total",{"_index":1245,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.respuestas_abiertas?.length",{"_index":1293,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pregunta.texto",{"_index":479,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta.tipo",{"_index":1006,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pregunta?.texto",{"_index":568,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaaeditar",{"_index":942,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["preguntadto",{"_index":310,"title":{"interfaces/PreguntaDTO.html":{}},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["preguntaeliminada",{"_index":498,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaeliminada.texto",{"_index":502,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas",{"_index":303,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["preguntas.invalid",{"_index":737,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.length",{"_index":736,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntas.value",{"_index":731,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["preguntaseleccionada",{"_index":289,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["presentacion",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["presentacionenlacescomponent",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["presentación",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["preservar",{"_index":1084,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preset",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primeicons",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":988,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["primeng/api",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/button",{"_index":222,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primeng/card",{"_index":1214,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/confirmdialog",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng/dialog",{"_index":359,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/dropdown",{"_index":982,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/floatlabel",{"_index":353,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/inputtext",{"_index":352,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["primeng/message",{"_index":372,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["primeng/progressspinner",{"_index":1215,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["primeng/themes",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["primeng/toast",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["primera",{"_index":270,"title":{},"body":{"components/BannerComponent.html":{}}}],["primero",{"_index":459,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["principal",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["principales",{"_index":217,"title":{},"body":{"components/BannerComponent.html":{}}}],["private",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["probar",{"_index":562,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["problema",{"_index":559,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesada",{"_index":610,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["procesar",{"_index":626,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["proceso",{"_index":599,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["production",{"_index":1558,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":1406,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["progressspinnermodule",{"_index":1162,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["project",{"_index":1516,"title":{},"body":{"index.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"properties.html":{}}}],["propiedad",{"_index":764,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["propiedades",{"_index":779,"title":{},"body":{"interfaces/CreatePreguntaDTO.html":{},"components/SeccionComponent.html":{}}}],["protegidos",{"_index":258,"title":{},"body":{"components/BannerComponent.html":{}}}],["proveedor",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":877,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["providehttpclient",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1169,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["pudo",{"_index":471,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["pueda",{"_index":1092,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["puede",{"_index":543,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["puedes",{"_index":1291,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["página",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["qr",{"_index":774,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["qrcode",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["qu",{"_index":390,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["que",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["quedar",{"_index":742,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["queryparams",{"_index":680,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["question",{"_index":525,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["radio",{"_index":807,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["radius",{"_index":1328,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["reactiveformsmodule",{"_index":278,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reactivo",{"_index":374,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["readonly",{"_index":940,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["real",{"_index":253,"title":{},"body":{"components/BannerComponent.html":{}}}],["reales",{"_index":623,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["realiza",{"_index":885,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["realizar",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recopila",{"_index":238,"title":{},"body":{"components/BannerComponent.html":{}}}],["recopiladas",{"_index":1292,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["redirección",{"_index":666,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirecturl",{"_index":667,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigiendo",{"_index":678,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["redirigir",{"_index":676,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reference",{"_index":1591,"title":{},"body":{"index.html":{}}}],["references",{"_index":1588,"title":{},"body":{"index.html":{}}}],["registrarrespuestas",{"_index":1046,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestas(id",{"_index":1057,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestasdto",{"_index":797,"title":{"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["reject",{"_index":574,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rejectbuttonprops",{"_index":527,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reload",{"_index":1534,"title":{},"body":{"index.html":{}}}],["representa",{"_index":814,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["requerida",{"_index":409,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requerido",{"_index":730,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["requeridos",{"_index":551,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requiera",{"_index":1147,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["requiere",{"_index":614,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["requieren",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":909,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["res",{"_index":633,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigorespuesta",{"_index":639,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.codigoresultados",{"_index":641,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["res.id",{"_index":637,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["reservados",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":949,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetea",{"_index":926,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["reseteado",{"_index":720,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resetear",{"_index":446,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["resetearopciones",{"_index":950,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["resetee",{"_index":718,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resources",{"_index":1583,"title":{},"body":{"index.html":{}}}],["responde",{"_index":837,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["responder",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/EncuestaDTO.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["responderencuestacomponent",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["responderla",{"_index":830,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["respondida",{"_index":846,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["respondiendo",{"_index":784,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["response",{"_index":1232,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.data",{"_index":1236,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["response.id",{"_index":1070,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["response.nombre",{"_index":1071,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["response.preguntas.map((pregunta",{"_index":1072,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["responsetype",{"_index":1081,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["responsive",{"_index":1186,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["respuesta",{"_index":635,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["respuesta=${res.codigorespuesta}&codigo",{"_index":670,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["respuestapreguntadto",{"_index":782,"title":{"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestas",{"_index":239,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["respuestasservice",{"_index":1040,"title":{"injectables/RespuestasService.html":{}},"body":{"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["respuestausuario",{"_index":835,"title":{"interfaces/RespuestaUsuario.html":{}},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["resultado",{"_index":1362,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["resultados.component.css",{"_index":1164,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.html",{"_index":1165,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts",{"_index":1157,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["resultados.component.ts:128",{"_index":1185,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:145",{"_index":1180,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:191",{"_index":1178,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:29",{"_index":1210,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:30",{"_index":1211,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:31",{"_index":1207,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:32",{"_index":1205,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:33",{"_index":1200,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:36",{"_index":1208,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:37",{"_index":1199,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:38",{"_index":1198,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:39",{"_index":1201,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:40",{"_index":1203,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:41",{"_index":1202,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:42",{"_index":1204,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:45",{"_index":1212,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:47",{"_index":1197,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:64",{"_index":1179,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:87",{"_index":1196,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:93",{"_index":1194,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.component.ts:99",{"_index":1182,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados.nombre",{"_index":1289,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["resultados=${res.codigoresultados",{"_index":671,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["resultados_encuesta_${this.resultados.id}.csv",{"_index":1277,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["results",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retornar",{"_index":1091,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["return",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{}}}],["revisa",{"_index":558,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["rgba(0",{"_index":1335,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(102",{"_index":1417,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(255",{"_index":1324,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["rgba(40",{"_index":1426,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["right",{"_index":1128,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rightmargin",{"_index":1110,"title":{},"body":{"components/SeccionComponent.html":{}}}],["rocha",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["root'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["roszezuk",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["routermodule",{"_index":219,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1525,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1567,"title":{},"body":{"index.html":{}}}],["running",{"_index":1528,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["rutas",{"_index":225,"title":{},"body":{"components/BannerComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":873,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/RespuestasService.html":{}}}],["rápido",{"_index":262,"title":{},"body":{"components/BannerComponent.html":{}}}],["s",{"_index":663,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["salida",{"_index":923,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["scaffolding",{"_index":1539,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1547,"title":{},"body":{"index.html":{}}}],["se",{"_index":391,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":590,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion",{"_index":1095,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["seccion.component.css",{"_index":1106,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion.component.html",{"_index":1105,"title":{},"body":{"components/SeccionComponent.html":{}}}],["seccion/seccion.component",{"_index":358,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seccioncomponent",{"_index":196,"title":{"components/SeccionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["secciones",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{},"components/SeccionComponent.html":{}}}],["secondary",{"_index":530,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seguridad",{"_index":260,"title":{},"body":{"components/BannerComponent.html":{}}}],["seguro",{"_index":255,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["selecciona",{"_index":745,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["seleccionable",{"_index":806,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["seleccionables",{"_index":809,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["seleccionada",{"_index":382,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["seleccionadas",{"_index":792,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["selección",{"_index":394,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["ser",{"_index":771,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["serveonce",{"_index":1527,"title":{},"body":{"index.html":{}}}],["server",{"_index":1524,"title":{},"body":{"index.html":{}}}],["services/encuestas.service",{"_index":368,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["services/respuestas.service",{"_index":1216,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["servicio",{"_index":714,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{}}}],["servicios",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["servidor",{"_index":565,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["settimeout",{"_index":677,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["severity",{"_index":454,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["shadow",{"_index":1332,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["shouldshowheaderfooter",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["siempre",{"_index":717,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["signal",{"_index":337,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/SeccionComponent.html":{}}}],["signal(false",{"_index":330,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["signal(null",{"_index":343,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["siguiente",{"_index":496,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["simple",{"_index":234,"title":{},"body":{"components/BannerComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["sin",{"_index":710,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sistema",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["size",{"_index":1321,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["sola",{"_index":805,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["solid",{"_index":1396,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["solo",{"_index":229,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{}}}],["son",{"_index":699,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["space",{"_index":1380,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["speed",{"_index":1561,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1315,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["src/.../app.config.ts",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../codigo",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":1599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../opciones",{"_index":1511,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../respuesta.dto.ts",{"_index":1600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tipos",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/banner/banner.component.ts",{"_index":207,"title":{},"body":{"components/BannerComponent.html":{},"coverage.html":{}}}],["src/app/components/creacion",{"_index":271,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"coverage.html":{}}}],["src/app/components/enlaces/presentacion",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["src/app/components/gestion",{"_index":900,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/respuestas/responder",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["src/app/components/resultados/visualizar",{"_index":1156,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts",{"_index":1094,"title":{},"body":{"components/SeccionComponent.html":{},"coverage.html":{}}}],["src/app/components/seccion/seccion.component.ts:16",{"_index":1117,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:17",{"_index":1115,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:18",{"_index":1113,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:19",{"_index":1118,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/seccion/seccion.component.ts:25",{"_index":1130,"title":{},"body":{"components/SeccionComponent.html":{}}}],["src/app/components/texto",{"_index":1140,"title":{},"body":{"components/TextoErrorComponent.html":{},"coverage.html":{}}}],["src/app/enums/codigo",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/tipos",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/create",{"_index":753,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/encuesta.dto.ts",{"_index":853,"title":{},"body":{"interfaces/EncuestaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/opcion.dto.ts",{"_index":1037,"title":{},"body":{"interfaces/OpcionDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/pregunta.dto.ts",{"_index":1038,"title":{},"body":{"interfaces/PreguntaDTO.html":{},"coverage.html":{}}}],["src/app/interfaces/respuesta.dto.ts",{"_index":780,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/encuestas.service.ts",{"_index":857,"title":{},"body":{"injectables/EncuestasService.html":{},"coverage.html":{}}}],["src/app/services/encuestas.service.ts:10",{"_index":871,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:13",{"_index":864,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:27",{"_index":868,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/encuestas.service.ts:39",{"_index":862,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/app/services/respuestas.service.ts",{"_index":1041,"title":{},"body":{"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/app/services/respuestas.service.ts:15",{"_index":1060,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:17",{"_index":1054,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:39",{"_index":1059,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:44",{"_index":1056,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:68",{"_index":1048,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/services/respuestas.service.ts:74",{"_index":1051,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/app/validators/opciones",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":1160,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["start",{"_index":1437,"title":{},"body":{"components/VisualizarResultadosComponent.html":{},"index.html":{}}}],["started",{"_index":1514,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":685,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"injectables/RespuestasService.html":{}}}],["statustext",{"_index":687,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["sticky",{"_index":555,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["store",{"_index":1554,"title":{},"body":{"index.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{}}}],["string(now.getdate()).padstart(2",{"_index":436,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.gethours()).padstart(2",{"_index":438,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getminutes()).padstart(2",{"_index":440,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["string(now.getmonth",{"_index":432,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["strings",{"_index":618,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["style",{"_index":1111,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["styles",{"_index":1155,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["styleurl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{}}}],["styleurls",{"_index":1163,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["su",{"_index":581,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["subscribe",{"_index":1230,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["subscribe((event",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":489,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["such",{"_index":1548,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1580,"title":{},"body":{"index.html":{}}}],["summary",{"_index":456,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["sus",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["suscribirse",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["súper",{"_index":261,"title":{},"body":{"components/BannerComponent.html":{}}}],["table",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["tarde",{"_index":706,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tarjeta",{"_index":1363,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tema",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["temporal",{"_index":1270,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["temporalmente",{"_index":987,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tendr",{"_index":766,"title":{},"body":{"interfaces/CreateEncuestaDTO.html":{}}}],["tenemos",{"_index":645,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tener",{"_index":801,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["test",{"_index":1566,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1574,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1571,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1563,"title":{},"body":{"index.html":{}}}],["text",{"_index":1314,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["texto",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["texto.invalid",{"_index":936,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["texto.touched",{"_index":937,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["textoerror",{"_index":1142,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["textoerrorcomponent",{"_index":198,"title":{"components/TextoErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["textual",{"_index":505,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["theme",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.agregaropcion.emit(opcion",{"_index":931,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.agregarpregunta.emit(pregunta",{"_index":1008,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargando",{"_index":1228,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cargarpreguntaparaeditar(preguntaaeditar",{"_index":993,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.cargarresultados",{"_index":1226,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.cerrar",{"_index":934,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.codigoresultados",{"_index":1221,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.confirmationservice.close",{"_index":651,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":515,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.creandoencuesta.set(false",{"_index":719,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.creandoencuesta.set(true",{"_index":595,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.crearencuesta",{"_index":534,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.currentroute",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/presentacion",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/responder",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentroute.includes('/resultados",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialoggestionopcionvisible.set(true",{"_index":1013,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.dialoggestionpreguntavisible.set(true",{"_index":450,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(false",{"_index":474,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.dialogseleccionpreguntavisible.set(true",{"_index":466,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.eliminaropcion(index",{"_index":1015,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.eliminarpregunta(index",{"_index":573,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.encuestasservice.actualizarestadoencuesta(this.idencuesta",{"_index":1286,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.error",{"_index":1227,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.estadoencuesta",{"_index":1239,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.exportandocsv",{"_index":1268,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.fechavencimiento.value",{"_index":627,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form",{"_index":399,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.errors",{"_index":588,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('fechavencimiento",{"_index":415,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('nombre",{"_index":413,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('opciones",{"_index":1005,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('preguntas",{"_index":411,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.form.get('texto",{"_index":929,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.get('texto')?.value",{"_index":930,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{}}}],["this.form.get('tipo",{"_index":1004,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.markallastouched",{"_index":538,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.reset",{"_index":928,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.valid",{"_index":513,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value",{"_index":586,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.form.value.fechavencimiento",{"_index":589,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.httpclient.get",{"_index":890,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/${idencuesta}/csv/${codigoresultados",{"_index":1080,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/estructura/${token",{"_index":1065,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.httpclient.get(`/api/v1/encuestas/resultados/${codigoresultados",{"_index":1077,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.httpclient.patch",{"_index":894,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.post('/api/v1/encuestas",{"_index":888,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.httpclient.post(`/api/v1/respuestas/${id}/${codigo",{"_index":1075,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.idencuesta",{"_index":1241,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.indicepreguntaeditando",{"_index":485,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set",{"_index":448,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.indicepreguntaeditando.set(index",{"_index":477,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.iscreationpage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ispresentacionenlacespage",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresponderencuestapage",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isresultadospage",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.leftmargin",{"_index":1127,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.maxwidth",{"_index":1124,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.messageservice.add",{"_index":453,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["this.messageservice.clear",{"_index":656,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.minwidth",{"_index":1122,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.modoedicion",{"_index":484,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(false",{"_index":447,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.modoedicion.set(true",{"_index":476,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.mostrarerroresvalidacion",{"_index":514,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.errors?.['required",{"_index":540,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.nombre.invalid",{"_index":539,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.opciones.clear",{"_index":996,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.push",{"_index":1003,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.opciones.removeat(index",{"_index":1014,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntaaeditar",{"_index":992,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.preguntas.at(index)?.setvalue(pregunta",{"_index":486,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.at(index)?.value",{"_index":469,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.errors?.['required",{"_index":547,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.invalid",{"_index":546,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.length",{"_index":452,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.push",{"_index":492,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntas.removeat(index",{"_index":499,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(null",{"_index":449,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.preguntaseleccionada.set(pregunta",{"_index":478,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.reset",{"_index":994,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.resetearopciones",{"_index":995,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.respuestasservice.exportarresultadoscsv(this.resultados.id",{"_index":1269,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.respuestasservice.obtenerresultadosencuesta(this.codigoresultados",{"_index":1229,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados",{"_index":1235,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados.id",{"_index":1267,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados?.habilitada",{"_index":1240,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.resultados?.id",{"_index":1242,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.rightmargin",{"_index":1129,"title":{},"body":{"components/SeccionComponent.html":{}}}],["this.route.snapshot.parammap.get('codigoresultados",{"_index":1222,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["this.router.events",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/presentacion",{"_index":679,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["this.router.navigate([route",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["this.texto.setvalue(pregunta.texto",{"_index":999,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.tipo.setvalue(pregunta.tipo",{"_index":1000,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible",{"_index":927,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["this.visible.set(false",{"_index":935,"title":{},"body":{"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["throwerror",{"_index":1061,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["tiempo",{"_index":252,"title":{},"body":{"components/BannerComponent.html":{}}}],["tiene",{"_index":226,"title":{},"body":{"components/BannerComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/NavbarComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["tieneitems",{"_index":1478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tieneitems(array",{"_index":1512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tieneitems(controlopciones.value",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["til",{"_index":1102,"title":{},"body":{"components/SeccionComponent.html":{}}}],["tipo",{"_index":326,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tipo.enum",{"_index":875,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["tipo.enum.ts",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tipo.invalid",{"_index":1016,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.touched",{"_index":1017,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipo.value",{"_index":1018,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["tipocodres",{"_index":644,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipocodresp",{"_index":643,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipoid",{"_index":642,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion",{"_index":507,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tipopresentacion.tipo",{"_index":508,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiporespuesta",{"_index":802,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tipos",{"_index":800,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["tipospreguntapresentacion",{"_index":363,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tipospreguntapresentacion.find",{"_index":506,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["tiposrespuestaenum",{"_index":324,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/PreguntaDTO.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["tiposrespuestaenum.abierta",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_multiple",{"_index":1010,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_simple",{"_index":1011,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["tiposrespuestaenum.verdadero_falso",{"_index":1007,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":1388,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["toastmodule",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["toasts",{"_index":653,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["toda",{"_index":880,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["todas",{"_index":796,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["todos",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["token",{"_index":1053,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["tomar",{"_index":245,"title":{},"body":{"components/BannerComponent.html":{}}}],["tools",{"_index":1542,"title":{},"body":{"index.html":{}}}],["top",{"_index":1391,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["total",{"_index":1244,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["totalmente",{"_index":254,"title":{},"body":{"components/BannerComponent.html":{}}}],["totalrespuestas",{"_index":1193,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["track",{"_index":732,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["traer",{"_index":889,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta",{"_index":860,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["traerencuesta(idencuesta",{"_index":866,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["transfer",{"_index":842,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["transform",{"_index":1373,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transition",{"_index":1369,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["translatey",{"_index":1374,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["transparent",{"_index":1358,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["triangle",{"_index":571,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["true",{"_index":521,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":269,"title":{},"body":{"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["tus",{"_index":232,"title":{},"body":{"components/BannerComponent.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"injectables/RespuestasService.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1597,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":613,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["título",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["un",{"_index":509,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["una",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{},"interfaces/CreatePreguntaDTO.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaDTO.html":{},"interfaces/EncuestaResponse.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/PreguntaDTO.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":608,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["unit",{"_index":1562,"title":{},"body":{"index.html":{}}}],["url",{"_index":665,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["usa",{"_index":561,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usando",{"_index":724,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["usar",{"_index":1218,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["use",{"_index":1568,"title":{},"body":{"index.html":{}}}],["usepointstyle",{"_index":1190,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["using",{"_index":1518,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":674,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionDTO.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["utilidades",{"_index":375,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["utilizado",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EncuestaDTO.html":{}}}],["utilizando",{"_index":1133,"title":{},"body":{"components/SeccionComponent.html":{}}}],["vacias.validator",{"_index":985,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["vacias.validator.ts",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vacío",{"_index":545,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["vacíos",{"_index":619,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valid",{"_index":585,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["valida",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validación",{"_index":537,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":990,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["validadores",{"_index":398,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validar",{"_index":512,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validationerrors",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":356,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators.minlength(1",{"_index":406,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["validators.required",{"_index":401,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["validators/opciones",{"_index":984,"title":{},"body":{"components/GestionPreguntaDialogComponent.html":{}}}],["valiosos",{"_index":244,"title":{},"body":{"components/BannerComponent.html":{}}}],["valores",{"_index":622,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/SeccionComponent.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["variable",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1217,"title":{"miscellaneous/variables.html":{}},"body":{"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["varias",{"_index":808,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["vea",{"_index":675,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vecimiento",{"_index":414,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["vencimiento",{"_index":404,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"interfaces/CreateEncuestaDTO.html":{}}}],["ver",{"_index":826,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"components/VisualizarResultadosComponent.html":{}}}],["verdadero",{"_index":812,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/variables.html":{}}}],["verdadero_falso",{"_index":788,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["verifica",{"_index":708,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["verificar",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{}}}],["verifique",{"_index":1243,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["version",{"_index":1521,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":848,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["visibilidad",{"_index":378,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{}}}],["visible",{"_index":822,"title":{},"body":{"interfaces/Encuesta.html":{},"interfaces/EncuestaResponse.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"interfaces/OpcionRespuesta.html":{},"interfaces/Pregunta.html":{},"interfaces/RegistrarRespuestasDTO.html":{},"interfaces/RegistrarRespuestasDto.html":{},"interfaces/RespuestaPreguntaDTO.html":{},"interfaces/RespuestaPreguntaDto.html":{},"interfaces/RespuestaUsuario.html":{}}}],["visit",{"_index":1589,"title":{},"body":{"index.html":{}}}],["vista",{"_index":230,"title":{},"body":{"components/BannerComponent.html":{}}}],["vistas",{"_index":1145,"title":{},"body":{"components/TextoErrorComponent.html":{}}}],["visualizar",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["visualizarresultadoscomponent",{"_index":201,"title":{"components/VisualizarResultadosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"coverage.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válido",{"_index":591,"title":{},"body":{"components/CreacionEncuestaComponent.html":{},"components/GestionOpcionDialogComponent.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["válidos",{"_index":700,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["warn",{"_index":455,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["webkit",{"_index":1355,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["weight",{"_index":1352,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["whenever",{"_index":1535,"title":{},"body":{"index.html":{}}}],["white",{"_index":1319,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["width",{"_index":1121,"title":{},"body":{"components/SeccionComponent.html":{},"components/VisualizarResultadosComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1272,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1281,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["wrap",{"_index":1400,"title":{},"body":{"components/VisualizarResultadosComponent.html":{}}}],["xito",{"_index":657,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["y",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BannerComponent.html":{},"components/CreacionEncuestaComponent.html":{},"injectables/EncuestasService.html":{},"components/GestionPreguntaDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/RespuestasService.html":{},"components/SeccionComponent.html":{},"components/TextoErrorComponent.html":{},"components/VisualizarResultadosComponent.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":429,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["yyyy",{"_index":426,"title":{},"body":{"components/CreacionEncuestaComponent.html":{}}}],["zone.js",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            ConfirmDialogModule\n                            ToastModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentRoute\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isCreationPage\n                            \n                            \n                                isHomePage\n                            \n                            \n                                isPresentacionEnlacesPage\n                            \n                            \n                                isResponderEncuestaPage\n                            \n                            \n                                isResultadosPage\n                            \n                            \n                                navigateTo\n                            \n                            \n                                shouldShowHeaderFooter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isCreationPage\n                        \n                    \n                \n            \n            \n                \nisCreationPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHomePage\n                        \n                    \n                \n            \n            \n                \nisHomePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPresentacionEnlacesPage\n                        \n                    \n                \n            \n            \n                \nisPresentacionEnlacesPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResponderEncuestaPage\n                        \n                    \n                \n            \n            \n                \nisResponderEncuestaPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isResultadosPage\n                        \n                    \n                \n            \n            \n                \nisResultadosPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldShowHeaderFooter\n                        \n                    \n                \n            \n            \n                \nshouldShowHeaderFooter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Sistema de Encuestas'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router, RouterOutlet, NavigationEnd } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { CommonModule } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\n// Decorador que define los metadatos del componente principal de la aplicación\n@Component({\n  selector: 'app-root', // Selector utilizado en el HTML para este componente\n  imports: [RouterOutlet, ConfirmDialogModule, ToastModule, CommonModule], // Módulos importados para el template\n  templateUrl: './app.component.html', // Ruta del archivo de template HTML\n  styleUrl: './app.component.css', // Ruta del archivo de estilos CSS\n  providers: [ConfirmationService, MessageService], // Servicios disponibles para el componente y sus hijos\n})\nexport class AppComponent {\n  title = 'Sistema de Encuestas'; // Título de la aplicación\n  currentRoute = ''; // Ruta actual para navegación dinámica\n\n  private router = inject(Router);\n\n  constructor() {\n    // Suscribirse a los cambios de ruta para actualizar la navegación\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentRoute = event.url;\n      });\n  }\n\n  // Método para verificar si estamos en la página de inicio\n  isHomePage(): boolean {\n    return this.currentRoute === '/' || this.currentRoute === '';\n  }\n\n  // Método para verificar si estamos en la página de creación\n  isCreationPage(): boolean {\n    return this.currentRoute === '/creacion';\n  }\n\n  // Método para verificar si estamos en la página de presentación de enlaces\n  isPresentacionEnlacesPage(): boolean {\n    return this.currentRoute.includes('/presentacion-enlaces');\n  }\n\n  // Método para verificar si estamos en la página de responder encuesta\n  isResponderEncuestaPage(): boolean {\n    return this.currentRoute.includes('/responder/');\n  }\n\n  // Método para verificar si estamos en la página de resultados\n  isResultadosPage(): boolean {\n    return this.currentRoute.includes('/resultados/');\n  }\n\n  // Método para verificar si debemos mostrar header y footer\n  shouldShowHeaderFooter(): boolean {\n    return !this.isPresentacionEnlacesPage() &&\n           !this.isResponderEncuestaPage() &&\n           !this.isResultadosPage() &&\n           !this.isCreationPage();\n  }\n\n  // Método para navegar a una ruta específica\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      Sistema de Encuestas\n    \n    \n      \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n\n        \n        \n          \n            \n            Inicio\n          \n        \n        \n          \n            \n            Crear Encuesta\n          \n        \n      \n    \n  \n\n\n\n\n  \n  \n\n\n\n\n  \n    \n      \n        Sistema de Encuestas\n        &copy; 2025 Todos los derechos reservados\n      \n\n      \n        Desarrollado por:\n        \n          Estefanía Altamirano\n          Micaela Kloster\n          Ignacio José Rocha\n          Maia Judith Roszezuk\n          María Emilia Van de Linde\n        \n      \n    \n  \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Sistema de Encuestas                                                                Crear Encuesta                                                                    Inicio                                                                    Inicio                                                            Crear Encuesta                                                      Sistema de Encuestas        © 2025 Todos los derechos reservados                    Desarrollado por:                  Estefanía Altamirano          Micaela Kloster          Ignacio José Rocha          Maia Judith Roszezuk          María Emilia Van de Linde                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerComponent.html":{"url":"components/BannerComponent.html","title":"component - BannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/banner/banner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Banner.\nMuestra la pantalla de bienvenida o portada de la aplicación,\ncon botones de navegación principales.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-banner\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./banner.component.html\n            \n\n\n\n            \n                styleUrl\n                ./banner.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n/**\n * Componente Banner.\n * Muestra la pantalla de bienvenida o portada de la aplicación,\n * con botones de navegación principales.\n */\n@Component({\n  selector: 'app-banner',\n  // Importa los módulos necesarios para los botones y la navegación por rutas\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './banner.component.html',\n  styleUrl: './banner.component.css'\n})\nexport class BannerComponent {\n  // Este componente no tiene lógica adicional, solo muestra la vista del banner.\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n  \n\n  \n  \n    \n      \n      \n        \n          \n        \n      \n\n      \n      \n        Creá tus encuestas\n        de forma simple y anónima\n      \n\n      \n      \n        Diseña encuestas personalizadas, recopila respuestas de manera eficiente\n        y obtén insights valiosos para tomar mejores decisiones.\n      \n\n      \n      \n        \n          \n            📊\n            Análisis Detallado\n            Obtén insights valiosos con gráficos y estadísticas en tiempo real\n          \n          \n            🔒\n            Totalmente Seguro\n            Tus datos y respuestas están protegidos con la máxima seguridad\n          \n          \n            ⚡\n            Súper Rápido\n            Crea y comparte encuestas en cuestión de minutos\n          \n        \n        ¡Comienza creando tu primera encuesta!\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                  Creá tus encuestas        de forma simple y anónima                          Diseña encuestas personalizadas, recopila respuestas de manera eficiente        y obtén insights valiosos para tomar mejores decisiones.                                                📊            Análisis Detallado            Obtén insights valiosos con gráficos y estadísticas en tiempo real                                🔒            Totalmente Seguro            Tus datos y respuestas están protegidos con la máxima seguridad                                ⚡            Súper Rápido            Crea y comparte encuestas en cuestión de minutos                          ¡Comienza creando tu primera encuesta!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreacionEncuestaComponent.html":{"url":"components/CreacionEncuestaComponent.html","title":"component - CreacionEncuestaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreacionEncuestaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-creacion-encuesta\n            \n\n\n            \n                imports\n                \n                            InputTextModule\n                            FloatLabel\n                            FormsModule\n                                SeccionComponent\n                            ButtonModule\n                            DialogModule\n                                GestionPreguntaDialogComponent\n                            ReactiveFormsModule\n                                TextoErrorComponent\n                            RouterModule\n                            MessageModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./creacion-encuesta.component.html\n            \n\n\n\n            \n                styleUrl\n                ./creacion-encuesta.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                creandoEncuesta\n                            \n                            \n                                dialogGestionPreguntaVisible\n                            \n                            \n                                dialogSeleccionPreguntaVisible\n                            \n                            \n                                    Private\n                                encuestasService\n                            \n                            \n                                form\n                            \n                            \n                                indicePreguntaEditando\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                modoEdicion\n                            \n                            \n                                preguntaSeleccionada\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirDialog\n                            \n                            \n                                abrirDialogEditar\n                            \n                            \n                                agregarPregunta\n                            \n                            \n                                cerrarDialogSeleccion\n                            \n                            \n                                confirmarCrearEncuesta\n                            \n                            \n                                confirmarEliminarPregunta\n                            \n                            \n                                crearEncuesta\n                            \n                            \n                                editarPregunta\n                            \n                            \n                                eliminarPregunta\n                            \n                            \n                                getFechaMinima\n                            \n                            \n                                getTipoPreguntaPresentacion\n                            \n                            \n                                    Private\n                                mostrarErroresValidacion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    preguntas\n                                \n                                \n                                    nombre\n                                \n                                \n                                    fechaVencimiento\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialog\n                        \n                    \n                \n            \n            \n                \nabrirDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDialogEditar\n                        \n                    \n                \n            \n            \n                \nabrirDialogEditar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n            \n                \nagregarPregunta(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrarDialogSeleccion\n                        \n                    \n                \n            \n            \n                \ncerrarDialogSeleccion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarCrearEncuesta\n                        \n                    \n                \n            \n            \n                \nconfirmarCrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarPregunta\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:300\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editarPregunta\n                        \n                    \n                \n            \n            \n                \neditarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarPregunta\n                        \n                    \n                \n            \n            \n                \neliminarPregunta(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFechaMinima\n                        \n                    \n                \n            \n            \n                \ngetFechaMinima()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTipoPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTipoPreguntaPresentacion(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mostrarErroresValidacion\n                        \n                    \n                \n            \n            \n                \n                        \n                    mostrarErroresValidacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creandoEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogSeleccionPreguntaVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EncuestasService\n\n                    \n                \n                \n                    \n                        Default value : inject(EncuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indicePreguntaEditando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(-1)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modoEdicion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        preguntas\n                    \n                \n\n                \n                    \n                        getpreguntas()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nombre\n                    \n                \n\n                \n                    \n                        getnombre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fechaVencimiento\n                    \n                \n\n                \n                    \n                        getfechaVencimiento()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/creacion-encuesta/creacion-encuesta.component.ts:95\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { GestionPreguntaDialogComponent } from '../gestion-pregunta-dialog/gestion-pregunta-dialog.component';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { EncuestasService } from '../../services/encuestas.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CreateEncuestaDTO } from '../../interfaces/create-encuesta.dto';\nimport { MessageModule } from 'primeng/message';\n\n@Component({\n  selector: 'app-creacion-encuesta',\n  imports: [\n    InputTextModule,\n    FloatLabel,\n    FormsModule,\n    SeccionComponent,\n    ButtonModule,\n    DialogModule,\n    GestionPreguntaDialogComponent,\n    ReactiveFormsModule,\n    TextoErrorComponent,\n    RouterModule,\n    MessageModule,\n  ],\n  templateUrl: './creacion-encuesta.component.html',\n  styleUrl: './creacion-encuesta.component.css',\n})\nexport class CreacionEncuestaComponent {\n  // Formulario reactivo principal para la creación de la encuesta\n  form: FormGroup;\n\n  // Servicios y utilidades inyectados\n  private messageService: MessageService = inject(MessageService);\n  private router: Router = inject(Router);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n  private encuestasService: EncuestasService = inject(EncuestasService);\n\n  // Controla la visibilidad del diálogo para agregar/editar preguntas\n  dialogGestionPreguntaVisible = signal(false);\n\n  // Almacena la pregunta seleccionada para edición (si corresponde)\n  preguntaSeleccionada = signal(null);\n\n  // Controla el estado de carga del botón finalizar\n  creandoEncuesta = signal(false);\n\n  // Controla si estamos en modo edición y qué pregunta se está editando\n  modoEdicion = signal(false);\n  indicePreguntaEditando = signal(-1);\n\n  // Controla la visibilidad del diálogo de selección de preguntas para editar\n  dialogSeleccionPreguntaVisible = signal(false);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup({\n      nombre: new FormControl('', Validators.required), // Nombre de la encuesta\n      fechaVencimiento: new FormControl(null), // Fecha de vencimiento incorporada\n      preguntas: new FormArray>(\n        [],\n        [Validators.required, Validators.minLength(1)] // Al menos una pregunta requerida\n      ),\n    });\n  }\n\n  // Getter para el FormArray de preguntas\n  get preguntas(): FormArray> {\n    return this.form.get('preguntas') as FormArray>;\n  }\n\n  // Getter para el control del nombre de la encuesta\n  get nombre(): FormControl {\n    return this.form.get('nombre') as FormControl;\n  }\n\n    // Getter para fecha de vecimiento\n  get fechaVencimiento(): FormControl {\n    return this.form.get('fechaVencimiento') as FormControl;\n  }\n  \n  // Método para obtener la fecha mínima permitida (fecha actual)\n  getFechaMinima(): string {\n    const now = new Date();\n    // Formatear la fecha para el input datetime-local (YYYY-MM-DDTHH:MM)\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n  \n  // Abre el dialog para agregar una nueva pregunta\n  abrirDialog() {\n    // Resetear modo edición\n    this.modoEdicion.set(false);\n    this.indicePreguntaEditando.set(-1);\n    this.preguntaSeleccionada.set(null);\n\n    this.dialogGestionPreguntaVisible.set(true);\n  }\n\n  // Abre el dialog para editar preguntas existentes\n  abrirDialogEditar() {\n    if (this.preguntas.length === 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'No se formularon preguntas',\n        detail: 'Primero agrega una pregunta para poder editarla',\n        life: 4000\n      });\n      return;\n    }\n\n    // Abrir dialog de selección de preguntas\n    this.dialogSeleccionPreguntaVisible.set(true);\n  }\n\n  // Edita una pregunta específica por índice\n  editarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    if (!pregunta) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No se pudo encontrar la pregunta a editar',\n        life: 4000\n      });\n      return;\n    }\n\n    // Cerrar dialog de selección\n    this.dialogSeleccionPreguntaVisible.set(false);\n\n    // Configurar modo edición\n    this.modoEdicion.set(true);\n    this.indicePreguntaEditando.set(index);\n    this.preguntaSeleccionada.set(pregunta);\n\n    // Abrir el dialog de edición\n    this.dialogGestionPreguntaVisible.set(true);\n\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Modo edición',\n      detail: `Editando: \"${pregunta.texto}\"`,\n      life: 3000\n    });\n  }\n\n  // Cierra el dialog de selección de preguntas\n  cerrarDialogSeleccion() {\n    this.dialogSeleccionPreguntaVisible.set(false);\n  }\n\n  // Agrega una nueva pregunta al FormArray de preguntas o actualiza una existente\n  agregarPregunta(pregunta: PreguntaDTO) {\n    if (this.modoEdicion() && this.indicePreguntaEditando() >= 0) {\n      // Modo edición: actualizar pregunta existente\n      const index = this.indicePreguntaEditando();\n      this.preguntas.at(index)?.setValue(pregunta);\n\n      // Resetear modo edición\n      this.modoEdicion.set(false);\n      this.indicePreguntaEditando.set(-1);\n      this.preguntaSeleccionada.set(null);\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta actualizada',\n        detail: `Se actualizó la pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    } else {\n      // Modo agregar: nueva pregunta\n      this.preguntas.push(\n        new FormControl(pregunta) as FormControl\n      );\n\n      // Mostrar mensaje de confirmación\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Pregunta agregada',\n        detail: `Se agregó la siguiente pregunta: \"${pregunta.texto}\"`,\n        life: 3000\n      });\n    }\n  }\n\n  // Elimina una pregunta del FormArray por índice\n  eliminarPregunta(index: number) {\n    const preguntaEliminada = this.preguntas.at(index)?.value;\n    this.preguntas.removeAt(index);\n\n    // Mostrar mensaje de confirmación\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Pregunta eliminada',\n      detail: preguntaEliminada ? `Se eliminó la siguiente pregunta: \"${preguntaEliminada.texto}\"` : 'Pregunta eliminada correctamente',\n      life: 3000\n    });\n  }\n\n  // Devuelve la presentación textual del tipo de pregunta\n  getTipoPreguntaPresentacion(tipo: TiposRespuestaEnum): string {\n    return tiposPreguntaPresentacion.find(\n      (tipoPresentacion) => tipoPresentacion.tipo === tipo\n    )!?.presentacion;\n  }\n\n  // Muestra un cuadro de confirmación antes de crear la encuesta\n  confirmarCrearEncuesta() {\n    // Validar formulario antes de mostrar confirmación\n    if (!this.form.valid) {\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    this.confirmationService.confirm({\n      message: '¿Está seguro de que desea crear esta encuesta?',\n      header: 'Confirmar Creación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-question-circle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Crear Encuesta',\n        severity: 'success',\n      },\n      accept: () => {\n        this.crearEncuesta();\n      },\n    });\n  }\n\n  // Muestra errores específicos de validación\n  private mostrarErroresValidacion() {\n    this.form.markAllAsTouched();\n\n    const errores: string[] = [];\n\n    // Validar nombre de encuesta\n    if (this.nombre.invalid) {\n      if (this.nombre.errors?.['required']) {\n        errores.push('El campo -Nombre de la encuesta- no puede estar vacío');\n      }\n    }\n\n    // Validar preguntas\n    if (this.preguntas.invalid) {\n      if (this.preguntas.errors?.['required'] || this.preguntas.length === 0) {\n        errores.push('Debe agregar al menos una pregunta');\n      }\n    }\n\n    // Mostrar errores específicos\n    if (errores.length > 0) {\n      this.messageService.add({\n        severity: 'warn',\n        summary: 'Campos requeridos',\n        detail: errores.join('. ') + '. Complete todos los campos antes de continuar.',\n        life: 4000,\n        sticky: false\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error de validación',\n        detail: 'Por favor, revisa los campos del formulario. Si el problema persiste, usa el botón \"Probar Conectividad\" para verificar la conexión con el servidor.',\n        life: 4000\n      });\n    }\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una pregunta\n  confirmarEliminarPregunta(index: number) {\n    const pregunta = this.preguntas.at(index)?.value;\n    const nombrePregunta = pregunta?.texto || 'esta pregunta';\n\n    this.confirmationService.confirm({\n      message: `¿Está seguro de que desea eliminar \"${nombrePregunta}\"?`,\n      header: 'Confirmar Eliminación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Eliminar',\n        severity: 'danger',\n      },\n      accept: () => {\n        this.eliminarPregunta(index);\n      },\n      reject: () => {\n        this.messageService.add({\n          severity: 'info',\n          summary: 'Operación cancelada',\n          detail: 'La pregunta no fue eliminada',\n          life: 2000\n        });\n      }\n    });\n  }\n\n  // Envía la encuesta al backend para su creación\n  crearEncuesta() {\n    // Validación adicional antes de enviar\n    console.log('🔍 Iniciando creación de encuesta...');\n    console.log('📋 Estado del formulario:', {\n      valid: this.form.valid,\n      value: this.form.value,\n      errors: this.form.errors,\n      fechaVencimiento: this.form.value.fechaVencimiento\n    });\n\n    // Verificar que el formulario sea válido\n    if (!this.form.valid) {\n      console.error('❌ Formulario inválido:', this.form.errors);\n      this.mostrarErroresValidacion();\n      return;\n    }\n\n    // Activar estado de carga\n    this.creandoEncuesta.set(true);\n\n    // Mostrar mensaje de carga\n    this.messageService.add({\n      severity: 'info',\n      summary: 'Creando encuesta...',\n      detail: 'Por favor espera mientras se completa el proceso de creación...',\n      life: 4000\n    });\n\n    // Obtiene los datos del formulario\n\n    const formData = this.form.value;\n\n    // Crear el objeto de encuesta con los campos requeridos por el backend\n    const encuesta: CreateEncuestaDTO = {\n      ...this.form.value,\n      enlaceCorto: '',\n      codigoQR: '',\n      nombre: formData.nombre,\n      fechaVencimiento: formData.fechaVencimiento ? new Date(formData.fechaVencimiento) : undefined,\n      preguntas: formData.preguntas || []\n    };\n\n    console.log('📅 Fecha de vencimiento procesada:', {\n      original: formData.fechaVencimiento,\n      procesada: encuesta.fechaVencimiento,\n      tipo: typeof encuesta.fechaVencimiento\n    });\n\n\n    // Si el backend requiere estos campos, los agregamos como strings vacíos\n    // El backend debería generar los valores reales\n    if (encuesta.enlaceCorto === undefined) {\n      encuesta.enlaceCorto = '';\n    }\n    if (encuesta.codigoQR === undefined) {\n      encuesta.codigoQR = '';\n    }\n\n    console.log('📝 Datos de la encuesta antes de procesar:', encuesta);\n\n    // Validar fecha de vencimiento primero\n    if (this.fechaVencimiento.value) {\n      const fechaSeleccionada = new Date(this.fechaVencimiento.value);\n      const ahora = new Date();\n\n      if (fechaSeleccionada  {\n        console.log('✅ Encuesta creada exitosamente:', res);\n        console.log('📊 Estructura de la respuesta:', {\n          id: res.id,\n          codigoRespuesta: res.codigoRespuesta,\n          codigoResultados: res.codigoResultados,\n          tipoId: typeof res.id,\n          tipoCodResp: typeof res.codigoRespuesta,\n          tipoCodRes: typeof res.codigoResultados\n        });\n\n        // Verificar que tenemos todos los datos necesarios\n        if (!res.id || !res.codigoRespuesta || !res.codigoResultados) {\n          console.error('❌ Respuesta incompleta del backend:', res);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error en la respuesta del servidor',\n            detail: 'El servidor no devolvió todos los códigos necesarios',\n            life: 5000\n          });\n          return;\n        }\n\n        // Cerrar el dialog de confirmación inmediatamente\n        this.confirmationService.close();\n\n        // Limpiar todos los toasts anteriores (incluyendo el de \"Creando encuesta...\")\n        this.messageService.clear();\n\n        // Mensaje de éxito detallado\n        this.messageService.add({\n          severity: 'success',\n          summary: '¡Encuesta creada exitosamente!',\n          detail: `La encuesta \"${encuesta.nombre}\" se ha creado correctamente con ${encuesta.preguntas.length} pregunta${encuesta.preguntas.length > 1 ? 's' : ''}`,\n          life: 4000\n        });\n\n        // Construir la URL de redirección\n        const redirectUrl = `/presentacion-enlaces?id-encuesta=${res.id}&codigo-respuesta=${res.codigoRespuesta}&codigo-resultados=${res.codigoResultados}`;\n        console.log('🔗 URL de redirección:', redirectUrl);\n\n        // Pequeño delay para que el usuario vea el mensaje antes de redirigir\n        setTimeout(() => {\n          console.log('🚀 Redirigiendo a:', redirectUrl);\n          this.router.navigate(['/presentacion-enlaces'], {\n            queryParams: {\n              'id-encuesta': res.id,\n              'codigo-respuesta': res.codigoRespuesta,\n              'codigo-resultados': res.codigoResultados\n            }\n          });\n        }, 1500);\n      },\n      error: (err) => {\n        console.error('❌ Error al crear encuesta:', err);\n        console.error('📊 Detalles del error:', {\n          status: err.status,\n          statusText: err.statusText,\n          message: err.message,\n          error: err.error,\n          url: err.url\n        });\n\n        // Cerrar el dialog de confirmación en caso de error\n        this.confirmationService.close();\n\n        // Mensaje de error detallado\n        let errorDetail = 'Posible problema de conexión. Intentar nuevamente';\n        let errorSummary = 'Error al crear la encuesta';\n\n        if (err.status === 400) {\n          errorDetail = 'Los datos de la encuesta no son válidos';\n          if (err.error && err.error.message) {\n            errorDetail += `: ${err.error.message}`;\n          }\n        } else if (err.status === 500) {\n          errorDetail = 'Error interno del servidor. Intenta más tarde';\n        } else if (err.status === 0) {\n          errorDetail = 'No se pudo conectar con el servidor. Verifica que el backend esté ejecutándose';\n          errorSummary = 'Sin conexión al servidor';\n        } else if (err.status === 404) {\n          errorDetail = 'El endpoint de creación de encuestas no fue encontrado';\n          errorSummary = 'Servicio no encontrado';\n        }\n\n        this.messageService.add({\n          severity: 'error',\n          summary: errorSummary,\n          detail: errorDetail,\n          life: 8000,\n          sticky: true\n        });\n      },\n      complete: () => {\n        // Asegurar que el estado de carga siempre se resetee\n        this.creandoEncuesta.set(false);\n        console.log('🔄 Estado de carga reseteado');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n\n\n\n\n  \n  \n\n  \n    \n      Creá una encuesta\n\n      \n      \n        📝 Instrucciones:\n        1. Ingresa un nombre para tu encuesta\n        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"\n        3. Haz clic en \"Finalizar\" para crear tu encuesta\n      \n    \n      \n        \n        Nombre de la encuesta\n      \n      @if (nombre.invalid && nombre.touched) {\n        Requerido\n      }\n    \n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          {{ pregunta.texto }}\n          \n            @for (opcion of pregunta.opciones; track i; let i = $index) {\n              \n                {{ opcion.texto }}\n              \n            }\n          \n          \n            \n          \n        \n      \n    }\n    \n      \n        \n        @if (preguntas.length > 0) {\n          \n        }\n      \n      @if (preguntas.invalid && form.touched) {\n        Debe agregar al menos una pregunta\n      }\n    \n\n    \n    \n      \n        \n        Fecha de Vencimiento (Opcional)\n      \n      \n      \n        En caso de no establecer una fecha, la encuesta quedará habilitada de forma indefinida.\n      \n\n      \n      \n      \n    \n\n    \n      {{ creandoEncuesta() ? 'Creando...' : 'Finalizar' }}\n    \n  \n\n\n\n\n\n\n\n  \n    Selecciona la pregunta que deseas editar:\n\n    @for (pregunta of preguntas.value; track idx; let idx = $index) {\n      \n        \n          \n            Pregunta {{ idx + 1 }}: {{ pregunta.texto }}\n          \n          \n            Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}\n          \n          @if (pregunta.opciones && pregunta.opciones.length > 0) {\n            \n              Opciones:\n              \n                @for (opcion of pregunta.opciones; track i; let i = $index) {\n                  {{ opcion.texto }}\n                }\n              \n            \n          }\n        \n        \n          \n        \n      \n    }\n\n    @if (preguntas.length === 0) {\n      No hay preguntas disponibles para editar.\n    }\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Creá una encuesta                    📝 Instrucciones:        1. Ingresa un nombre para tu encuesta        2. Agrega al menos una pregunta usando el botón \"Agregar Pregunta\"        3. Haz clic en \"Finalizar\" para crear tu encuesta                                Nombre de la encuesta            @if (nombre.invalid && nombre.touched) {        Requerido      }        @for (pregunta of preguntas.value; track idx; let idx = $index) {                        {{ pregunta.texto }}                      @for (opcion of pregunta.opciones; track i; let i = $index) {                              {{ opcion.texto }}                          }                                                            }                          @if (preguntas.length > 0) {                  }            @if (preguntas.invalid && form.touched) {        Debe agregar al menos una pregunta      }                                  Fecha de Vencimiento (Opcional)                          En caso de no establecer una fecha, la encuesta quedará habilitada de forma indefinida.                                      {{ creandoEncuesta() ? \\'Creando...\\' : \\'Finalizar\\' }}            Selecciona la pregunta que deseas editar:    @for (pregunta of preguntas.value; track idx; let idx = $index) {                                    Pregunta {{ idx + 1 }}: {{ pregunta.texto }}                                Tipo: {{ getTipoPreguntaPresentacion(pregunta.tipo) }}                    @if (pregunta.opciones && pregunta.opciones.length > 0) {                          Opciones:                              @for (opcion of pregunta.opciones; track i; let i = $index) {                  {{ opcion.texto }}                }                                    }                                            }    @if (preguntas.length === 0) {      No hay preguntas disponibles para editar.    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreacionEncuestaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEncuestaDTO.html":{"url":"interfaces/CreateEncuestaDTO.html","title":"interface - CreateEncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-encuesta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            codigoQR\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enlaceCorto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fechaVencimiento\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoQR\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoQR:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enlaceCorto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enlaceCorto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaVencimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaVencimiento:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     CreatePreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CreatePreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreatePreguntaDTO } from './create-pregunta.dto';\nimport { EncuestaDTO } from './encuesta.dto';\n\n// Interfaz para crear una nueva encuesta, basada en EncuestaDTO pero solo con la propiedad 'nombre'\nexport interface CreateEncuestaDTO extends Pick {\n  preguntas: CreatePreguntaDTO[]; // Lista de preguntas que tendrá la encuesta al momento de crearla\n  enlaceCorto?: string; // Enlace corto opcional (puede ser generado por el backend)\n  codigoQR?: string; // Código QR opcional (puede ser generado por el backend)\n  fechaVencimiento?: Date; // Fecha de vencimiento opcional\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatePreguntaDTO.html":{"url":"interfaces/CreatePreguntaDTO.html","title":"interface - CreatePreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/create-pregunta.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            opciones\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         CreateOpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CreateOpcionDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateOpcionDTO } from './create-opcion.dto';\nimport { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz para crear una nueva pregunta, basada en PreguntaDTO pero solo con ciertas propiedades\nexport interface CreatePreguntaDTO extends Pick {\n  opciones: CreateOpcionDTO[] // Lista de opciones para la pregunta (si corresponde)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Encuesta.html":{"url":"interfaces/Encuesta.html","title":"interface - Encuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Encuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            descripcion\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        descripcion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        descripcion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:         Pregunta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pregunta[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaDTO.html":{"url":"interfaces/EncuestaDTO.html","title":"interface - EncuestaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/encuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            codigoRespuesta\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            preguntas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        codigoRespuesta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codigoRespuesta:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preguntas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preguntas:     PreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PreguntaDTO } from './pregunta.dto';\n\n// Interfaz que representa una encuesta completa\nexport interface EncuestaDTO {\n  id: number; // Identificador único de la encuesta\n\n  nombre: string; // Nombre o título de la encuesta\n\n  preguntas: PreguntaDTO[]; // Lista de preguntas que contiene la encuesta\n\n  codigoRespuesta: string; // Código utilizado para responder la encuesta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncuestaResponse.html":{"url":"interfaces/EncuestaResponse.html","title":"interface - EncuestaResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncuestaResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Encuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Encuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncuestasService.html":{"url":"injectables/EncuestasService.html","title":"injectable - EncuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarEstadoEncuesta\n                            \n                            \n                                crearEncuesta\n                            \n                            \n                                traerEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \nactualizarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \ncrearEncuesta(dto: CreateEncuestaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traerEncuesta\n                        \n                    \n                \n            \n            \n                \ntraerEncuesta(idEncuesta: number, codigo: string, tipo: CodigoTipoEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/encuestas.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tipo\n                                            \n                                                            CodigoTipoEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/encuestas.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { CreateEncuestaDTO } from '../interfaces/create-encuesta.dto';\nimport { Observable } from 'rxjs';\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\nimport { EncuestaDTO } from '../interfaces/encuesta.dto';\n\n@Injectable({ providedIn: 'root' }) // Hace que el servicio esté disponible en toda la app\nexport class EncuestasService {\n  private httpClient = inject(HttpClient); // Inyección del servicio HttpClient para hacer peticiones HTTP\n\n  // Método para crear una nueva encuesta\n  crearEncuesta(dto: CreateEncuestaDTO): Observable {\n    // Realiza una petición POST al backend para crear la encuesta\n    return this.httpClient.post('/api/v1/encuestas', dto);\n  }\n\n  // Método para obtener una encuesta por ID, código y tipo de código\n  traerEncuesta(\n    idEncuesta: number,\n    codigo: string,\n    tipo: CodigoTipoEnum,\n  ): Observable {\n    // Realiza una petición GET al backend para traer los datos de la encuesta\n    return this.httpClient.get(\n      '/api/v1/encuestas/' + idEncuesta + '?codigo=' + codigo + '&tipo=' + tipo,\n    );\n  }\n\n  // Método para habilitar/deshabilitar una encuesta\n  actualizarEstadoEncuesta(id:number, habilitada: boolean){\n    return this.httpClient.patch(\n      'api/v1/encuestas/' + id +'/habilitar',\n      {habilitada}, // Enviamos el estado de habilitación como parte del cuerpo de la petición\n    )\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionOpcionDialogComponent.html":{"url":"components/GestionOpcionDialogComponent.html","title":"component - GestionOpcionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionOpcionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-opcion-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            ReactiveFormsModule\n                            FloatLabelModule\n                                TextoErrorComponent\n                            InputTextModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-opcion-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-opcion-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agregar\n                            \n                            \n                                cerrar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarOpcion\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarOpcion\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, effect, inject, input, model, output, signal } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { DialogModule } from 'primeng/dialog';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\n\n// Componente para gestionar el diálogo de agregar una opción a una pregunta\n@Component({\n  selector: 'app-gestion-opcion-dialog',\n  imports: [\n    DialogModule,\n    ReactiveFormsModule,\n    FloatLabelModule,\n    TextoErrorComponent,\n    InputTextModule,\n    ButtonModule,\n  ],\n  templateUrl: './gestion-opcion-dialog.component.html',\n  styleUrl: './gestion-opcion-dialog.component.css',\n})\nexport class GestionOpcionDialogComponent {\n  visible = model.required(); // Controla la visibilidad del diálogo\n\n  agregarOpcion = output(); // Evento de salida para agregar una opción\n\n  form: FormGroup; // Formulario reactivo para la opción\n\n  private messageService: MessageService = inject(MessageService); // Servicio para mostrar mensajes\n\n  constructor() {\n    // Inicializa el formulario con un campo de texto requerido\n    this.form = new FormGroup({\n      texto: new FormControl('', Validators.required),\n    });\n\n    // Efecto que resetea el formulario cada vez que el diálogo se hace visible\n    effect(() => {\n      if (this.visible()) {\n        this.form.reset();\n      }\n    });\n  }\n\n  // Getter para el control de texto del formulario\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Método para agregar la opción si el formulario es válido\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const opcion: string = this.form.get('texto')?.value;\n    this.agregarOpcion.emit(opcion); // Emite la opción al componente padre\n    this.cerrar(); // Cierra el diálogo\n  }\n\n  // Método para cerrar el diálogo\n  cerrar() {\n    this.visible.set(false);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la opción\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n        Finalizar\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la opción        @if (texto.invalid && texto.touched) {          Requerido        }                    Finalizar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionOpcionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GestionPreguntaDialogComponent.html":{"url":"components/GestionPreguntaDialogComponent.html","title":"component - GestionPreguntaDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GestionPreguntaDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-gestion-pregunta-dialog\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            DropdownModule\n                            ReactiveFormsModule\n                            InputTextModule\n                            FloatLabelModule\n                            ButtonModule\n                                TextoErrorComponent\n                                SeccionComponent\n                                GestionOpcionDialogComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./gestion-pregunta-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./gestion-pregunta-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                            \n                                    Private\n                                confirmationService\n                            \n                            \n                                dialogGestionOpcionVisible\n                            \n                            \n                                    Readonly\n                                form\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                opcionSeleccionada\n                            \n                            \n                                preguntaAEditar\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirAgregarOpcion\n                            \n                            \n                                agregar\n                            \n                            \n                                agregarOpcion\n                            \n                            \n                                cargarPreguntaParaEditar\n                            \n                            \n                                cerrar\n                            \n                            \n                                confirmarEliminarOpcion\n                            \n                            \n                                eliminarOpcion\n                            \n                            \n                                esMultipleChoice\n                            \n                            \n                                getTiposPreguntaPresentacion\n                            \n                            \n                                reset\n                            \n                            \n                                resetearOpciones\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                agregarPregunta\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texto\n                                \n                                \n                                    tipo\n                                \n                                \n                                    opciones\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        agregarPregunta\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirAgregarOpcion\n                        \n                    \n                \n            \n            \n                \nabrirAgregarOpcion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregar\n                        \n                    \n                \n            \n            \n                \nagregar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        agregarOpcion\n                        \n                    \n                \n            \n            \n                \nagregarOpcion(opcion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPreguntaParaEditar\n                        \n                    \n                \n            \n            \n                \ncargarPreguntaParaEditar(pregunta: PreguntaDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            PreguntaDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cerrar\n                        \n                    \n                \n            \n            \n                \ncerrar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmarEliminarOpcion\n                        \n                    \n                \n            \n            \n                \nconfirmarEliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \neliminarOpcion(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTiposPreguntaPresentacion\n                        \n                    \n                \n            \n            \n                \ngetTiposPreguntaPresentacion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetearOpciones\n                        \n                    \n                \n            \n            \n                \nresetearOpciones()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarPregunta\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfirmationService\n\n                    \n                \n                \n                    \n                        Default value : inject(ConfirmationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogGestionOpcionVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opcionSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntaAEditar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : model(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texto\n                    \n                \n\n                \n                    \n                        gettexto()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tipo\n                    \n                \n\n                \n                    \n                        gettipo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:142\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        opciones\n                    \n                \n\n                \n                    \n                        getopciones()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts:147\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, model, output, signal } from '@angular/core';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport {\n  tiposPreguntaPresentacion,\n  TiposRespuestaEnum,\n} from '../../enums/tipos-pregunta.enum';\nimport {\n  FormArray,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FloatLabelModule } from 'primeng/floatlabel';\nimport { ButtonModule } from 'primeng/button';\nimport { PreguntaDTO } from '../../interfaces/pregunta.dto';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { TextoErrorComponent } from '../texto-error/texto-error.component';\nimport { effect } from '@angular/core';\nimport { SeccionComponent } from '../seccion/seccion.component';\nimport { GestionOpcionDialogComponent } from '../gestion-opcion-dialog/gestion-opcion-dialog.component';\nimport { CreateOpcionDTO } from '../../interfaces/create-opcion.dto';\nimport { opcionesNoVacias } from '../../validators/opciones-no-vacias.validator';\n\n// Componente para gestionar el dialog de creación/edición de preguntas\n@Component({\n  selector: 'app-gestion-pregunta-dialog',\n  imports: [\n    DialogModule,\n    DropdownModule,\n    ReactiveFormsModule,\n    InputTextModule,\n    FloatLabelModule,\n    ButtonModule,\n    TextoErrorComponent,\n    SeccionComponent,\n    GestionOpcionDialogComponent,\n  ],\n  templateUrl: './gestion-pregunta-dialog.component.html',\n  styleUrl: './gestion-pregunta-dialog.component.css',\n})\nexport class GestionPreguntaDialogComponent {\n  // Formulario reactivo para la pregunta\n  readonly form: FormGroup;\n\n  // Controla la visibilidad del dialog\n  visible = model.required();\n\n  // Pregunta a editar (opcional)\n  preguntaAEditar = model(null);\n\n  // Controla la visibilidad del dialog para agregar opciones\n  dialogGestionOpcionVisible = signal(false);\n\n  // Evento de salida para agregar una pregunta\n  agregarPregunta = output();\n\n  // Opción seleccionada temporalmente para agregar\n  opcionSeleccionada = signal | null>(null);\n\n  // Servicios de mensajes y confirmación de PrimeNG\n  private messageService: MessageService = inject(MessageService);\n  private confirmationService: ConfirmationService = inject(ConfirmationService);\n\n  constructor() {\n    // Inicializa el formulario con controles y validadores\n    this.form = new FormGroup(\n      {\n        texto: new FormControl('', Validators.required), // Texto de la pregunta\n        tipo: new FormControl(\n          null,\n          Validators.required,\n        ), // Tipo de pregunta\n        opciones: new FormArray>>(\n          [],\n        ), // Opciones de respuesta (si corresponde)\n      },\n      { validators: [opcionesNoVacias] }, // Validador personalizado para opciones\n    );\n\n    // Efecto que resetea el formulario cuando el dialog se hace visible\n    effect(() => {\n      if (this.visible()) {\n        const preguntaAEditar = this.preguntaAEditar();\n        if (preguntaAEditar) {\n          this.cargarPreguntaParaEditar(preguntaAEditar);\n        } else {\n          this.reset();\n        }\n      }\n    });\n  }\n\n  // Resetea el formulario y las opciones\n  reset() {\n    this.form.reset();\n    this.resetearOpciones();\n  }\n\n  // Elimina todas las opciones del formulario\n  resetearOpciones() {\n    this.opciones.clear();\n  }\n\n  // Carga los datos de una pregunta existente para editar\n  cargarPreguntaParaEditar(pregunta: PreguntaDTO) {\n    // Resetear primero\n    this.reset();\n\n    // Cargar datos básicos\n    this.texto.setValue(pregunta.texto);\n    this.tipo.setValue(pregunta.tipo);\n\n    // Cargar opciones si existen\n    if (pregunta.opciones && pregunta.opciones.length > 0) {\n      pregunta.opciones.forEach(opcion => {\n        this.opciones.push(\n          new FormControl>({\n            texto: opcion.texto,\n          }) as FormControl>\n        );\n      });\n    }\n  }\n\n  // Devuelve los tipos de pregunta disponibles para el selector\n  getTiposPreguntaPresentacion(): {\n    tipo: TiposRespuestaEnum;\n    presentacion: string;\n  }[] {\n    return tiposPreguntaPresentacion;\n  }\n\n  // Getter para el control de texto\n  get texto(): FormControl {\n    return this.form.get('texto') as FormControl;\n  }\n\n  // Getter para el control de tipo\n  get tipo(): FormControl {\n    return this.form.get('tipo') as FormControl;\n  }\n\n  // Getter para el FormArray de opciones\n  get opciones(): FormArray>> {\n    return this.form.get('opciones') as FormArray>\n    >;\n  }\n\n  // Agrega la pregunta si el formulario es válido, si no muestra errores\n  agregar() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Hay errores en el formulario',\n        life: 4000\n      });\n      return;\n    }\n\n    const pregunta: PreguntaDTO = this.form.value;\n\n    if (pregunta.tipo === TiposRespuestaEnum.VERDADERO_FALSO) {\n    pregunta.opciones = [\n          { numero: 1, texto: 'Verdadero' },\n          { numero: 2, texto: 'Falso' },\n    ];\n    }\n\n    this.agregarPregunta.emit(pregunta); // Emite la pregunta al componente padre\n    this.cerrar();\n  }\n\n  // Cierra el dialog\n  cerrar() {\n    this.visible.set(false);\n  }\n\n  // Determina si el tipo de pregunta es de opción múltiple o simple\n  esMultipleChoice(tipo: TiposRespuestaEnum) {\n    return [\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n      TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    ].includes(tipo);\n  }\n\n  // Abre el dialog para agregar una nueva opción\n  abrirAgregarOpcion() {\n    this.dialogGestionOpcionVisible.set(true);\n  }\n\n  // Agrega una nueva opción al FormArray de opciones\n  agregarOpcion(opcion: string) {\n    this.opciones.push(\n      new FormControl>({\n        texto: opcion,\n      }) as FormControl>,\n    );\n  }\n\n  // Elimina una opción por índice\n  eliminarOpcion(index: number) {\n    this.opciones.removeAt(index);\n  }\n\n  // Muestra un cuadro de confirmación antes de eliminar una opción\n  confirmarEliminarOpcion(index: number) {\n    this.confirmationService.confirm({\n      message: 'Confirmar eliminación?',\n      header: 'Confirmación',\n      closable: true,\n      closeOnEscape: true,\n      icon: 'pi pi-exclamation-triangle',\n      rejectButtonProps: {\n        label: 'Cancelar',\n        severity: 'secondary',\n        outlined: true,\n      },\n      acceptButtonProps: {\n        label: 'Confirmar',\n      },\n      accept: () => {\n        this.eliminarOpcion(index);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Texto de la pregunta\n        @if (texto.invalid && texto.touched) {\n          Requerido\n        }\n      \n      \n      @if (tipo.invalid && tipo.touched) {\n        Requerido\n      }\n      @if (tipo.value && esMultipleChoice(tipo.value)) {\n        \n          Opciones\n          @if (opciones.value.length > 0) {\n            \n              @for (opcion of opciones.value; track $index; let idx = $index) {\n                \n                  \n                    {{ opcion.texto }}\n                    \n                      \n                    \n                  \n                \n              }\n            \n          } @else {\n            Aún no hay opciones cargadas\n          }\n          \n        \n        @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {\n          Debe ingresar opciones\n        }\n      }\n      \n        \n          {{ preguntaAEditar() ? 'Actualizar' : 'Agregar' }}\n        \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Texto de la pregunta        @if (texto.invalid && texto.touched) {          Requerido        }                  @if (tipo.invalid && tipo.touched) {        Requerido      }      @if (tipo.value && esMultipleChoice(tipo.value)) {                  Opciones          @if (opciones.value.length > 0) {                          @for (opcion of opciones.value; track $index; let idx = $index) {                                                      {{ opcion.texto }}                                                                                                              }                      } @else {            Aún no hay opciones cargadas          }                          @if (opciones.touched && form.hasError(\"opcionesRequeridas\")) {          Debe ingresar opciones        }      }                        {{ preguntaAEditar() ? \\'Actualizar\\' : \\'Agregar\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GestionPreguntaDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Navbar.\nMuestra la barra de navegación principal de la aplicación,\npermitiendo la navegación entre las diferentes secciones.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            ButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n/**\n * Componente Navbar.\n * Muestra la barra de navegación principal de la aplicación,\n * permitiendo la navegación entre las diferentes secciones.\n */\n@Component({\n  selector: 'app-navbar',\n  // Importa los módulos necesarios para los botones y la navegación por rutas\n  imports: [ButtonModule, RouterModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n  // Este componente no tiene lógica adicional, solo muestra la barra de navegación.\n}\n\n    \n\n    \n        \n  \n    Sistema de Encuestas\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sistema de Encuestas          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionDTO.html":{"url":"interfaces/OpcionDTO.html","title":"interface - OpcionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/opcion.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OpcionDTO {\n\n  texto: string;   // Texto que se muestra como opción al usuario\n\n  numero: number;  // Número de orden de la opción dentro de la pregunta\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpcionRespuesta.html":{"url":"interfaces/OpcionRespuesta.html","title":"interface - OpcionRespuesta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpcionRespuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pregunta.html":{"url":"interfaces/Pregunta.html","title":"interface - Pregunta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                        \n                                            obligatoria\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        obligatoria\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        obligatoria:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionRespuesta[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionRespuesta[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PreguntaDTO.html":{"url":"interfaces/PreguntaDTO.html","title":"interface - PreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/pregunta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            numero\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numero:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:         OpcionDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpcionDTO[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TiposRespuestaEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TiposRespuestaEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TiposRespuestaEnum } from '../enums/tipos-pregunta.enum';\nimport { OpcionDTO } from './opcion.dto';\n\n// Interfaz que representa una pregunta de la encuesta\nexport interface PreguntaDTO {\n  id: number; // Identificador único de la pregunta\n\n  numero: number; // Número de orden de la pregunta en la encuesta\n\n  texto: string; // Texto o enunciado de la pregunta\n\n  tipo: TiposRespuestaEnum; // Tipo de respuesta esperada (abierta, opción, etc.)\n\n  opciones?: OpcionDTO[]; // Opciones disponibles (solo si la pregunta es de tipo opción)\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDTO.html":{"url":"interfaces/RegistrarRespuestasDTO.html","title":"interface - RegistrarRespuestasDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrarRespuestasDto.html":{"url":"interfaces/RegistrarRespuestasDto.html","title":"interface - RegistrarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            respuestas\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        respuestas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        respuestas:     RespuestaPreguntaDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RespuestaPreguntaDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDTO.html":{"url":"interfaces/RespuestaPreguntaDTO.html","title":"interface - RespuestaPreguntaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaPreguntaDto.html":{"url":"interfaces/RespuestaPreguntaDto.html","title":"interface - RespuestaPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id_pregunta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opciones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            texto\n                                        \n                                \n                                \n                                        \n                                            tipo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_pregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_pregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tipo:         TipoRespuesta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TipoRespuesta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RespuestaUsuario.html":{"url":"interfaces/RespuestaUsuario.html","title":"interface - RespuestaUsuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RespuestaUsuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/respuesta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numeroPregunta\n                                        \n                                \n                                \n                                        \n                                            opciones\n                                        \n                                \n                                \n                                        \n                                            texto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numeroPregunta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numeroPregunta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opciones:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texto:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RespuestaPreguntaDTO {\n  id_pregunta: number; // ID de la pregunta que se está respondiendo\n  tipo: 'ABIERTA' | 'OPCION_MULTIPLE_SELECCION_SIMPLE' | 'OPCION_MULTIPLE_SELECCION_MULTIPLE' | 'VERDADERO_FALSO'; // Tipo de pregunta\n  texto?: string; // Respuesta de texto para preguntas abiertas\n  opciones?: number[]; // IDs de las opciones seleccionadas para preguntas de opción múltiple\n}\n\n// Interfaz que contiene todas las respuestas de una encuesta\nexport interface RegistrarRespuestasDTO {\n  respuestas: RespuestaPreguntaDTO[]; // Array con todas las respuestas del usuario\n}\n\n// Define los posibles tipos de respuesta que puede tener una pregunta en la encuesta\nexport type TipoRespuesta = \n  'ABIERTA' |                                     // Respuesta escrita libremente por el usuario\n  'OPCION_MULTIPLE_SELECCION_SIMPLE' |            // Una sola opción seleccionable (tipo radio)\n  'OPCION_MULTIPLE_SELECCION_MULTIPLE' |          // Varias opciones seleccionables (tipo checkbox)\n  'VERDADERO_FALSO';                              // Tipo booleano: verdadero o falso\n\n// Representa una opción dentro de una pregunta que tiene opciones para elegir\nexport interface OpcionRespuesta {\n  id: number;         // ID único de la opción\n  numero: number;     // Número de orden de la opción dentro de la pregunta\n  texto: string;      // Texto visible que describe la opción\n}\n\n// Representa una pregunta dentro de una encuesta\nexport interface Pregunta {\n  id: number;                      // ID único de la pregunta\n  numero: number;                 // Número de orden de la pregunta dentro de la encuesta\n  texto: string;                  // Enunciado de la pregunta\n  tipo: TipoRespuesta;            // Tipo de respuesta esperada (ver enum TipoRespuesta)\n  obligatoria: boolean;           // Indica si el usuario debe responderla sí o sí\n  opciones?: OpcionRespuesta[];   // Lista de opciones (solo si el tipo no es 'ABIERTA')\n}\n\n// Representa una encuesta completa con sus preguntas\nexport interface Encuesta {\n  id: number;              // ID único de la encuesta\n  nombre: string;          // Título o nombre de la encuesta\n  descripcion?: string;    // Descripción opcional\n  preguntas: Pregunta[];   // Lista de preguntas que la componen\n}\n\n// Representa la respuesta de un usuario a una pregunta concreta\nexport interface RespuestaUsuario {\n  numeroPregunta: number; // Número de la pregunta a la que responde\n  opciones: number[];     // IDs de las opciones seleccionadas (vacío si es tipo abierta)\n  texto: string;          // Texto ingresado por el usuario (si aplica)\n}\n\n// DTO = Data Transfer Object: define cómo se envía cada respuesta al backend\nexport interface RespuestaPreguntaDto {\n  id_pregunta: number;         // ID de la pregunta respondida\n  tipo: TipoRespuesta;         // Tipo de la pregunta\n  texto?: string;              // Texto ingresado (solo si es tipo 'ABIERTA')\n  opciones?: number[];         // Opciones seleccionadas (si corresponde)\n}\n\n// DTO que agrupa todas las respuestas que un usuario envía en una sola vez\nexport interface RegistrarRespuestasDto {\n  respuestas: RespuestaPreguntaDto[];  // Lista de respuestas enviadas\n}\n\n// Representa la respuesta que el servidor devuelve cuando se obtiene una encuesta\nexport interface EncuestaResponse {\n  message: string;   // Mensaje del servidor\n  data: Encuesta;    // Los datos reales de la encuesta (objeto completo)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RespuestasService.html":{"url":"injectables/RespuestasService.html","title":"injectable - RespuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RespuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/respuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportarResultadosCSV\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                obtenerEncuestaParaParticipacion\n                            \n                            \n                                obtenerResultadosEncuesta\n                            \n                            \n                                registrarRespuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportarResultadosCSV\n                        \n                    \n                \n            \n            \n                \nexportarResultadosCSV(idEncuesta: number, codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idEncuesta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerEncuestaParaParticipacion\n                        \n                    \n                \n            \n            \n                \nobtenerEncuestaParaParticipacion(id: number, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerResultadosEncuesta\n                        \n                    \n                \n            \n            \n                \nobtenerResultadosEncuesta(codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \nregistrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/respuestas.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/respuestas.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { OpcionRespuesta } from '../interfaces/respuesta.dto';\nimport { Pregunta } from '../interfaces/respuesta.dto';\nimport { Encuesta } from '../interfaces/respuesta.dto';\nimport { RespuestaUsuario } from '../interfaces/respuesta.dto';\nimport { RespuestaPreguntaDto } from '../interfaces/respuesta.dto';\nimport { RegistrarRespuestasDto } from '../interfaces/respuesta.dto';\nimport { EncuestaResponse } from '../interfaces/respuesta.dto';\n\n@Injectable({ providedIn: 'root' })\nexport class RespuestasService {\n  private httpClient = inject(HttpClient);\n\n  obtenerEncuestaParaParticipacion(id: number, token: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/estructura/${token}`)\n      .pipe(\n        catchError(this.handleError),\n        map(response => ({\n          message: 'Encuesta obtenida exitosamente',\n          data: {\n            id: response.id,\n            nombre: response.nombre,\n            preguntas: response.preguntas.map((pregunta: any) => ({\n              id: pregunta.id,\n              numero: pregunta.numero,\n              texto: pregunta.texto,\n              tipo: pregunta.tipo,\n              obligatoria: true,\n              opciones: pregunta.opciones || []\n            }))\n          }\n        }))\n      );\n  }\n\n  registrarRespuestas(id: number, codigo: string, payload: RegistrarRespuestasDto): Observable {\n    return this.httpClient.post(`/api/v1/respuestas/${id}/${codigo}`, payload)\n      .pipe(catchError(this.handleError));\n  }\n\n  obtenerResultadosEncuesta(codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/resultados/${codigoResultados}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  // Método para exportar resultados a CSV\n  exportarResultadosCSV(idEncuesta: number, codigoResultados: string): Observable {\n    return this.httpClient.get(`/api/v1/encuestas/${idEncuesta}/csv/${codigoResultados}`, {\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error('Error HTTP:', error);\n\n    // Preservar el error original para mantener el status y otros datos\n    // Solo agregar información adicional si es necesario\n    if (error.error) {\n      console.error('Detalles del error del servidor:', error.error);\n    }\n\n    // Retornar el error original para que el componente pueda acceder al status\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeccionComponent.html":{"url":"components/SeccionComponent.html","title":"component - SeccionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeccionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/seccion/seccion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Seccion.\nPermite definir un contenedor con anchos y márgenes configurables,\nútil para estructurar secciones de la interfaz con estilos consistentes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seccion\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./seccion.component.html\n            \n\n\n\n            \n                styleUrl\n                ./seccion.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftMargin\n                            \n                            \n                                maxWidth\n                            \n                            \n                                minWidth\n                            \n                            \n                                rightMargin\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('70vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minWidth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('40vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input('15vw')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/seccion/seccion.component.ts:25\n                        \n                    \n\n            \n                \n                    Computa el objeto de estilos CSS a aplicar al contenedor,\nutilizando los valores de entrada definidos.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, input, signal } from '@angular/core';\n\n/**\n * Componente Seccion.\n * Permite definir un contenedor con anchos y márgenes configurables,\n * útil para estructurar secciones de la interfaz con estilos consistentes.\n */\n@Component({\n  selector: 'app-seccion',\n  imports: [],\n  templateUrl: './seccion.component.html',\n  styleUrl: './seccion.component.css'\n})\nexport class SeccionComponent {\n  // Propiedades de entrada para configurar el ancho mínimo, máximo y los márgenes laterales\n  minWidth = input('40vw');\n  maxWidth = input('70vw');\n  leftMargin = input('15vw');\n  rightMargin = input('15vw');\n\n  /**\n   * Computa el objeto de estilos CSS a aplicar al contenedor,\n   * utilizando los valores de entrada definidos.\n   */\n  style = computed(() => {\n    return {\n      'min-width': this.minWidth(),\n      'max-width': this.maxWidth(),\n      'margin-left': this.leftMargin(),\n      'margin-right': this.rightMargin(),\n    };\n  });\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeccionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextoErrorComponent.html":{"url":"components/TextoErrorComponent.html","title":"component - TextoErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextoErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/texto-error/texto-error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente TextoError.\nMuestra mensajes de error personalizados en los formularios o vistas donde se requiera.\nEl contenido y el estilo se definen en el archivo de plantilla y CSS asociados.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-texto-error\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./texto-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./texto-error.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente TextoError.\n * Muestra mensajes de error personalizados en los formularios o vistas donde se requiera.\n * El contenido y el estilo se definen en el archivo de plantilla y CSS asociados.\n */\n@Component({\n  selector: 'app-texto-error',\n  imports: [],\n  templateUrl: './texto-error.component.html',\n  styleUrl: './texto-error.component.css'\n})\nexport class TextoErrorComponent {\n  \n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextoErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizarResultadosComponent.html":{"url":"components/VisualizarResultadosComponent.html","title":"component - VisualizarResultadosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisualizarResultadosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/resultados/visualizar-resultados.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-visualizar-resultados\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            CardModule\n                            ProgressSpinnerModule\n                            ToastModule\n                \n            \n\n            \n                styleUrls\n                ./visualizar-resultados.component.css\n            \n\n\n\n            \n                templateUrl\n                ./visualizar-resultados.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cargando\n                            \n                            \n                                codigoResultados\n                            \n                            \n                                    Private\n                                encuestasService\n                            \n                            \n                                error\n                            \n                            \n                                estadoEncuesta\n                            \n                            \n                                exportandoCSV\n                            \n                            \n                                idEncuesta\n                            \n                            \n                                    Private\n                                messageService\n                            \n                            \n                                    Private\n                                respuestasService\n                            \n                            \n                                resultados\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                TiposRespuestaEnum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cambiarEstadoEncuesta\n                            \n                            \n                                    Private\n                                cargarResultados\n                            \n                            \n                                exportarCSV\n                            \n                            \n                                getChartData\n                            \n                            \n                                getChartOptions\n                            \n                            \n                                getPorcentajeOpcion\n                            \n                            \n                                getTotalRespuestasOpcion\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cambiarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \ncambiarEstadoEncuesta()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cargarResultados\n                        \n                    \n                \n            \n            \n                \n                        \n                    cargarResultados()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportarCSV\n                        \n                    \n                \n            \n            \n                \nexportarCSV()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartData\n                        \n                    \n                \n            \n            \n                \ngetChartData(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { labels: any; datasets: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChartOptions\n                        \n                    \n                \n            \n            \n                \ngetChartOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { responsive: boolean; maintainAspectRatio: boolean; plugins: { legend: { position: string; labels: { usePointStyle: boolean; padding: number; }; }; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPorcentajeOpcion\n                        \n                    \n                \n            \n            \n                \ngetPorcentajeOpcion(opcion: any, totalRespuestas: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                opcion\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                totalRespuestas\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalRespuestasOpcion\n                        \n                    \n                \n            \n            \n                \ngetTotalRespuestasOpcion(pregunta: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pregunta\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/resultados/visualizar-resultados.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cargando\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EncuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        estadoEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportandoCSV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idEncuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MessageService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        respuestasService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RespuestasService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TiposRespuestaEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TiposRespuestaEnum\n                    \n                \n                    \n                        \n                                Defined in src/app/components/resultados/visualizar-resultados.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { RespuestasService } from '../../services/respuestas.service';\nimport { TiposRespuestaEnum } from '../../enums/tipos-pregunta.enum';\nimport { EncuestasService } from '../../services/encuestas.service';\n\n@Component({\n  selector: 'app-visualizar-resultados',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    CardModule,\n    ProgressSpinnerModule,\n    ToastModule\n  ],\n  templateUrl: './visualizar-resultados.component.html',\n  styleUrls: ['./visualizar-resultados.component.css'],\n  providers: [MessageService]\n})\nexport class VisualizarResultadosComponent implements OnInit {\n  // Servicios inyectados\n  private route = inject(ActivatedRoute);\n  public router = inject(Router);\n  private respuestasService = inject(RespuestasService);\n  private messageService = inject(MessageService);\n  private encuestasService = inject(EncuestasService);\n\n  // Variables de estado\n  resultados: any = null;\n  codigoResultados = '';\n  cargando = true;\n  error = '';\n  exportandoCSV = false;\n  estadoEncuesta: boolean | null = null;\n  idEncuesta: number | null = null;\n\n  // Enum para usar en el template\n  TiposRespuestaEnum = TiposRespuestaEnum;\n\n  ngOnInit() {\n    console.log('VisualizarResultadosComponent ngOnInit ejecutado');\n\n    // Obtener el código de resultados de la URL\n    this.codigoResultados = this.route.snapshot.paramMap.get('codigoResultados') || '';\n    console.log('Código de resultados obtenido de la URL:', this.codigoResultados);\n\n    if (this.codigoResultados) {\n      console.log('Iniciando carga de resultados...');\n      this.cargarResultados();\n    } else {\n      console.log('Código de resultados no válido');\n      this.error = 'Código de resultados no válido';\n      this.cargando = false;\n    }\n  }\n\n  private cargarResultados() {\n    this.cargando = true;\n    this.error = '';\n\n    this.respuestasService.obtenerResultadosEncuesta(this.codigoResultados)\n      .subscribe({\n        next: (response) => {\n          console.log('Resultados cargados:', response);\n          this.resultados = response.data;\n          // Asigna el estado e id de la encuesta si existen en la respuesta\n          this.estadoEncuesta = this.resultados?.habilitada ?? null;\n          this.idEncuesta = this.resultados?.id ?? null;\n          this.cargando = false;\n        },\n        error: (error) => {\n          console.error('Error al cargar resultados:', error);\n          this.error = 'Error al cargar los resultados. Verifique que el enlace sea válido.';\n          this.cargando = false;\n        }\n      });\n  }\n\n  // Método para obtener el total de respuestas de una pregunta de opciones\n  getTotalRespuestasOpcion(pregunta: any): number {\n    if (!pregunta.opciones) return 0;\n    return pregunta.opciones.reduce((total: number, opcion: any) => total + (opcion.cantidad_respuestas || 0), 0);\n  }\n\n  // Método para calcular el porcentaje de una opción\n  getPorcentajeOpcion(opcion: any, totalRespuestas: number): number {\n    if (totalRespuestas === 0) return 0;\n    return Math.round((opcion.cantidad_respuestas / totalRespuestas) * 100);\n  }\n\n  // Método para generar datos del gráfico para preguntas de opciones\n  getChartData(pregunta: any) {\n    if (!pregunta.opciones || pregunta.opciones.length === 0) return null;\n\n    const labels = pregunta.opciones.map((opcion: any) => opcion.texto);\n    const data = pregunta.opciones.map((opcion: any) => opcion.cantidad_respuestas || 0);\n\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: [\n            '#667eea',\n            '#764ba2',\n            '#f093fb',\n            '#f5576c',\n            '#4facfe',\n            '#00f2fe',\n            '#43e97b',\n            '#38f9d7'\n          ],\n          borderWidth: 2,\n          borderColor: '#fff'\n        }\n      ]\n    };\n  }\n\n  // Opciones del gráfico\n  getChartOptions() {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            usePointStyle: true,\n            padding: 20\n          }\n        }\n      }\n    };\n  }\n\n  // Método para exportar resultados a CSV\n  exportarCSV() {\n    if (!this.resultados || !this.resultados.id) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'No hay datos para exportar'\n      });\n      return;\n    }\n\n    this.exportandoCSV = true;\n\n    this.respuestasService.exportarResultadosCSV(this.resultados.id, this.codigoResultados)\n      .subscribe({\n        next: (blob) => {\n          // Crear un enlace temporal para descargar el archivo\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = `resultados_encuesta_${this.resultados.id}.csv`;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Exportación exitosa',\n            detail: 'Los resultados se han descargado correctamente'\n          });\n\n          this.exportandoCSV = false;\n        },\n        error: (error) => {\n          console.error('Error al exportar CSV:', error);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error al exportar',\n            detail: 'No se pudo descargar el archivo CSV. Intenta nuevamente.'\n          });\n          this.exportandoCSV = false;\n        }\n      });\n  }\n\n  // Método para habilitar/deshabilitar una encuesta\n  cambiarEstadoEncuesta() {\n    if (this.idEncuesta == null || this.estadoEncuesta == null) return;\n    this.encuestasService.actualizarEstadoEncuesta(this.idEncuesta, !this.estadoEncuesta)\n      .subscribe({\n        next: () => {\n          this.estadoEncuesta = !this.estadoEncuesta;\n          this.messageService.add({\n            severity: 'success',\n            summary: `Encuesta ${this.estadoEncuesta ? 'habilitada' : 'deshabilitada'}`\n          });\n        },\n        error: () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'No se pudo cambiar el estado de la encuesta'\n          });\n        }\n      });\n  }\n}\n    \n\n    \n        \n  \n\n  \n  \n    \n    Cargando resultados...\n  \n\n  \n  \n    \n      Error al cargar los resultados\n      {{ error }}\n      \n      \n    \n  \n\n  \n  \n    \n    \n      📊 Resultados de la Encuesta\n      {{ resultados.nombre }}\n      \n        Aquí puedes ver todas las respuestas recopiladas para esta encuesta.\n      \n    \n\n    \n    \n      \n        \n          \n            \n              {{ pregunta.numero }}\n              {{ pregunta.tipo }}\n            \n          \n\n          \n            {{ pregunta.texto }}\n          \n\n          \n            \n            \n              Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})\n               0; else noRespuestasAbiertas\">\n                \n                  {{ respuesta }}\n                \n              \n              \n                No hay respuestas para esta pregunta aún.\n              \n            \n\n            \n            \n              \n                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)\n\n                 0; else noRespuestasOpciones\">\n                  \n                  \n                    \n                      \n                        {{ opcion.texto }}\n                        {{ opcion.cantidad_respuestas || 0 }} respuestas\n                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%\n                      \n                      \n                        \n                        \n                      \n                    \n                  \n                \n\n                \n                  No hay respuestas para esta pregunta aún.\n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n      \n      \n      \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./visualizar-resultados.component.css\n                \n                /* Contenedor principal */\n.resultados-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 2rem;\n}\n\n/* Estado de carga */\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  text-align: center;\n}\n\n.loading-spinner {\n  margin-bottom: 1rem;\n}\n\n.loading-container h3 {\n  color: white;\n  font-size: 1.5rem;\n  margin: 0;\n}\n\n/* Estado de error */\n.error-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;\n  padding: 2rem;\n}\n\n.error-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 3rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  max-width: 500px;\n  width: 100%;\n}\n\n.error-card h2 {\n  color: #e74c3c;\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n}\n\n.error-card p {\n  color: #666;\n  font-size: 1.1rem;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n}\n\n/* Contenido de los resultados */\n.resultados-content {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Encabezado de los resultados */\n.resultados-header {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.resultados-header h1 {\n  color: #333;\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.resultados-header h2 {\n  color: #555;\n  font-size: 1.8rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.resultados-descripcion {\n  color: #666;\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin: 0;\n}\n\n/* Preguntas y resultados */\n.preguntas-resultados {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.pregunta-resultado-container {\n  margin-bottom: 1.5rem;\n}\n\n/* Tarjeta de pregunta resultado */\n::ng-deep .pregunta-resultado-card .p-card {\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  border: none;\n  transition: all 0.3s ease;\n}\n\n::ng-deep .pregunta-resultado-card .p-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);\n}\n\n::ng-deep .pregunta-resultado-card .p-card-body {\n  padding: 2rem;\n}\n\n/* Encabezado de pregunta resultado */\n.pregunta-resultado-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  padding: 1rem 2rem;\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border-radius: 15px 15px 0 0;\n}\n\n.pregunta-numero {\n  font-weight: 700;\n  font-size: 1.2rem;\n}\n\n.pregunta-tipo {\n  background: rgba(255, 255, 255, 0.2);\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-transform: capitalize;\n}\n\n/* Título de pregunta */\n.pregunta-titulo {\n  color: #333;\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  line-height: 1.4;\n}\n\n/* Contenido de resultados */\n.pregunta-resultados-content {\n  margin-top: 1rem;\n}\n\n/* Respuestas abiertas */\n.respuestas-abiertas h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.respuesta-abierta-item {\n  background: #f8f9fa;\n  border-left: 4px solid #667eea;\n  padding: 1rem;\n  margin-bottom: 0.8rem;\n  border-radius: 0 8px 8px 0;\n}\n\n.respuesta-abierta-item p {\n  margin: 0;\n  color: #333;\n  line-height: 1.5;\n}\n\n/* Respuestas de opciones */\n.respuestas-opciones h4 {\n  color: #667eea;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.opciones-estadisticas {\n  margin-bottom: 2rem;\n}\n\n.opcion-estadistica {\n  margin-bottom: 1rem;\n}\n\n.opcion-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.opcion-texto {\n  font-weight: 600;\n  color: #333;\n  flex: 1;\n}\n\n.opcion-cantidad {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.opcion-porcentaje {\n  color: #667eea;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.opcion-barra {\n  background: #e9ecef;\n  height: 8px;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.opcion-progreso {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  height: 100%;\n  border-radius: 4px;\n  transition: width 0.3s ease;\n}\n\n/* Gráfico */\n.grafico-container {\n  margin-top: 2rem;\n  text-align: center;\n}\n\n.grafico-container h5 {\n  color: #667eea;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n::ng-deep .resultado-chart {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n/* Sin respuestas */\n.no-respuestas {\n  color: #999;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  margin: 1rem 0;\n}\n\n/* Acciones */\n.acciones-container {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 3rem;\n  padding: 2rem 0;\n  flex-wrap: wrap;\n}\n\n::ng-deep .accion-button {\n  background: linear-gradient(135deg, #667eea, #764ba2) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3) !important;\n}\n\n::ng-deep .accion-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4) !important;\n}\n\n/* Botón CSV específico */\n::ng-deep .csv-button {\n  background: linear-gradient(135deg, #28a745, #20c997) !important;\n  border: none !important;\n  border-radius: 25px !important;\n  padding: 1rem 2rem !important;\n  font-size: 1.1rem !important;\n  font-weight: 600 !important;\n  transition: all 0.3s ease !important;\n  box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3) !important;\n}\n\n::ng-deep .csv-button:hover:not(:disabled) {\n  transform: translateY(-2px) !important;\n  box-shadow: 0 12px 35px rgba(40, 167, 69, 0.4) !important;\n  background: linear-gradient(135deg, #20c997, #28a745) !important;\n}\n\n::ng-deep .csv-button:disabled {\n  opacity: 0.6 !important;\n  transform: none !important;\n  cursor: not-allowed !important;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .resultados-container {\n    padding: 1rem;\n  }\n\n  .resultados-header {\n    padding: 1.5rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 2rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.5rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1.5rem;\n  }\n\n  .pregunta-resultado-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.2rem;\n  }\n\n  .opcion-info {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 300px;\n  }\n}\n\n@media (max-width: 480px) {\n  .resultados-container {\n    padding: 0.5rem;\n  }\n\n  .resultados-header {\n    padding: 1rem;\n  }\n\n  .resultados-header h1 {\n    font-size: 1.8rem;\n  }\n\n  .resultados-header h2 {\n    font-size: 1.3rem;\n  }\n\n  .resultados-descripcion {\n    font-size: 1rem;\n  }\n\n  ::ng-deep .pregunta-resultado-card .p-card-body {\n    padding: 1rem;\n  }\n\n  .pregunta-titulo {\n    font-size: 1.1rem;\n  }\n\n  .pregunta-tipo {\n    font-size: 0.7rem;\n    padding: 0.2rem 0.6rem;\n  }\n\n  .respuesta-abierta-item {\n    padding: 0.8rem;\n  }\n\n  ::ng-deep .resultado-chart {\n    max-width: 250px;\n  }\n\n  ::ng-deep .accion-button {\n    padding: 0.8rem 1.5rem !important;\n    font-size: 1rem !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Cargando resultados...                Error al cargar los resultados      {{ error }}                                    📊 Resultados de la Encuesta      {{ resultados.nombre }}              Aquí puedes ver todas las respuestas recopiladas para esta encuesta.                                                                    {{ pregunta.numero }}              {{ pregunta.tipo }}                                            {{ pregunta.texto }}                                                          Respuestas ({{ pregunta.respuestas_abiertas?.length || 0 }})               0; else noRespuestasAbiertas\">                                  {{ respuesta }}                                                            No hay respuestas para esta pregunta aún.                                                                                Estadísticas ({{ getTotalRespuestasOpcion(pregunta) }} respuestas)                 0; else noRespuestasOpciones\">                                                                                                      {{ opcion.texto }}                        {{ opcion.cantidad_respuestas || 0 }} respuestas                        {{ getPorcentajeOpcion(opcion, getTotalRespuestasOpcion(pregunta)) }}%                                                                                                                                                                                                          No hay respuestas para esta pregunta aún.                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BannerComponent', 'selector': 'app-banner'},{'name': 'CreacionEncuestaComponent', 'selector': 'app-creacion-encuesta'},{'name': 'GestionOpcionDialogComponent', 'selector': 'app-gestion-opcion-dialog'},{'name': 'GestionPreguntaDialogComponent', 'selector': 'app-gestion-pregunta-dialog'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PresentacionEnlacesComponent', 'selector': 'app-presentacion-enlaces'},{'name': 'ResponderEncuestaComponent', 'selector': 'app-responder-encuesta'},{'name': 'SeccionComponent', 'selector': 'app-seccion'},{'name': 'TextoErrorComponent', 'selector': 'app-texto-error'},{'name': 'VisualizarResultadosComponent', 'selector': 'app-visualizar-resultados'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizarResultadosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/banner/banner.component.ts\n            \n            component\n            BannerComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/creacion-encuesta/creacion-encuesta.component.ts\n            \n            component\n            CreacionEncuestaComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/enlaces/presentacion-enlaces.component.ts\n            \n            component\n            PresentacionEnlacesComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/components/gestion-opcion-dialog/gestion-opcion-dialog.component.ts\n            \n            component\n            GestionOpcionDialogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/gestion-pregunta-dialog/gestion-pregunta-dialog.component.ts\n            \n            component\n            GestionPreguntaDialogComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/respuestas/responder-encuesta.component.ts\n            \n            component\n            ResponderEncuestaComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/components/resultados/visualizar-resultados.component.ts\n            \n            component\n            VisualizarResultadosComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/seccion/seccion.component.ts\n            \n            component\n            SeccionComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/texto-error/texto-error.component.ts\n            \n            component\n            TextoErrorComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/enums/tipos-pregunta.enum.ts\n            \n            variable\n            tiposPreguntaPresentacion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-encuesta.dto.ts\n            \n            interface\n            CreateEncuestaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/interfaces/create-opcion.dto.ts\n            \n            type alias\n            CreateOpcionDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/create-pregunta.dto.ts\n            \n            interface\n            CreatePreguntaDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/encuesta.dto.ts\n            \n            interface\n            EncuestaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/opcion.dto.ts\n            \n            interface\n            OpcionDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/pregunta.dto.ts\n            \n            interface\n            PreguntaDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            Encuesta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            EncuestaResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            OpcionRespuesta\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            Pregunta\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RegistrarRespuestasDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RegistrarRespuestasDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RespuestaPreguntaDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RespuestaPreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/respuesta.dto.ts\n            \n            interface\n            RespuestaUsuario\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/interfaces/respuesta.dto.ts\n            \n            type alias\n            TipoRespuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/encuestas.service.ts\n            \n            injectable\n            EncuestasService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/respuestas.service.ts\n            \n            injectable\n            RespuestasService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            esMultipleChoice\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            function\n            tieneItems\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/validators/opciones-no-vacias.validator.ts\n            \n            variable\n            opcionesNoVacias\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ~19.2.16\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @primeng/themes : ^19.1.2\n        \n            angularx-qrcode : ^19.0.0\n        \n            chart.js : ^4.4.9\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^19.1.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodigoTipoEnum   (src/.../codigo-tipo.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/codigo-tipo.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CodigoTipoEnum\n                    \n                \n                        \n                            \n                                 RESULTADOS\n                            \n                        \n                        \n                            \n                                Value : RESULTADOS\n                            \n                        \n                        \n                            \n                                 RESPUESTA\n                            \n                        \n                        \n                            \n                                Value : RESPUESTA\n                            \n                        \n            \n        \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                 VERDADERO_FALSO\n                            \n                        \n                        \n                            \n                                Value : VERDADERO_FALSO\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            esMultipleChoice   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tieneItems   (src/.../opciones-no-vacias.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        esMultipleChoice\n                        \n                    \n                \n            \n            \n                \nesMultipleChoice(tipo: TiposRespuestaEnum)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tipo\n                                            \n                                                            TiposRespuestaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tieneItems\n                        \n                    \n                \n            \n            \n                \ntieneItems(array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated using Angular CLI version 19.2.11.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateOpcionDTO   (src/.../create-opcion.dto.ts)\n                        \n                        \n                            TipoRespuesta   (src/.../respuesta.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/create-opcion.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateOpcionDTO\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/app/interfaces/respuesta.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TipoRespuesta\n                \n            \n            \n                \n                        \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\" | \"VERDADERO_FALSO\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            opcionesNoVacias   (src/.../opciones-no-vacias.validator.ts)\n                        \n                        \n                            tiposPreguntaPresentacion   (src/.../tipos-pregunta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), // Optimiza la detección de cambios en Angular\n    provideRouter(routes), // Proveedor de rutas definidas en app.routes.ts\n    provideAnimationsAsync(), // Habilita animaciones de Angular de forma asíncrona\n    providePrimeNG({\n      theme: {\n        preset: Aura, // Aplica el tema Aura de PrimeNG\n      },\n    }),\n    provideHttpClient() // Proveedor para realizar peticiones HTTP\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/validators/opciones-no-vacias.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        opcionesNoVacias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  formGroup: AbstractControl,\n): ValidationErrors | null => {\n  const group = formGroup as FormGroup;\n  const controlTipo = group.get('tipo'); // Control que indica el tipo de pregunta\n  const controlOpciones = group.get('opciones'); // Control que contiene las opciones\n\n  // Si no hay tipo o no hay opciones, no se valida (no hay error)\n  if (!controlTipo?.value || !controlOpciones?.value) {\n    return null;\n  }\n\n  // Si es una pregunta de opción y no tiene opciones, retorna error\n  if (\n    esMultipleChoice(controlTipo.value) &&\n    !tieneItems(controlOpciones.value)\n  ) {\n    return { opcionesRequeridas: true }; // Error: se requieren opciones\n  }\n\n  return null; // No hay errores de validación\n}\n                    \n                \n\n\n        \n    \n\n    src/app/enums/tipos-pregunta.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tiposPreguntaPresentacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { tipo: TiposRespuestaEnum.ABIERTA, presentacion: 'Abierta' },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE,\n    presentacion: 'Selección Simple',\n  },\n  {\n    tipo: TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_MULTIPLE,\n    presentacion: 'Selección Múltiple',\n  },\n  {\n    tipo: TiposRespuestaEnum.VERDADERO_FALSO,\n    presentacion: 'Verdadero o Falso',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
