var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ActualizarPreguntaDto.html",[0,0.098,1,2.077]],["body/classes/ActualizarPreguntaDto.html",[0,0.149,1,3.181,2,1.47,3,0.287,4,0.25,5,0.25,6,4.886,7,3.044,8,0.366,9,1.022,10,2.341,11,1.733,12,1.914,13,0.521,14,0.026,15,1.098,16,1.098,17,3.461,18,0.633,19,4.093,20,2.341,21,4.093,22,4.093,23,0.368,24,3.86,25,2.917,26,3.044,27,1.947,28,4.093,29,1.298,30,0.919,31,1.809,32,1.442,33,2.157,34,2.485,35,1.685,36,3.181,37,1.126,38,1.47,39,2.485,40,0.804,41,0.95,42,3.461,43,1.573,44,3.044,45,1.646,46,1.048,47,4.093,48,2.485,49,0.287,50,4.43,51,1.676,52,2.492,53,2.492,54,3.897,55,4.43,56,2.917,57,1.126,58,3.181,59,2.69,60,2.485,61,5.239,62,0.881,63,3.461,64,1.47,65,2.485,66,0.019,67,0.019]],["title/modules/AppModule.html",[68,1.314,69,2.285]],["body/modules/AppModule.html",[0,0.085,3,0.21,4,0.182,5,0.182,12,1.33,13,0.297,14,0.026,23,0.433,29,1.319,30,0.951,32,1.164,37,1.164,40,0.908,43,1.146,49,0.21,51,0.821,54,2.219,57,1.697,59,1.532,62,1.093,64,1.519,66,0.016,67,0.016,68,1.89,69,4.34,70,1.419,71,1.419,72,1.661,73,1.661,74,1.419,75,1.661,76,1.661,77,2.522,78,2.522,79,3.564,80,3.564,81,3.564,82,3.268,83,2.356,84,1.661,85,1.532,86,2.983,87,2.986,88,0.937,89,1.228,90,2.983,91,3.493,92,1.018,93,1.532,94,4.232,95,5.352,96,2.522,97,1.018,98,2.013,99,1.661,100,2.983,101,4.232,102,2.983,103,4.918,104,4.12,105,2.983,106,2.983,107,2.356,108,1.811,109,1.228,110,1.992,111,1.089,112,2.983,113,2.983,114,2.983,115,4.232,116,0.877,117,2.983,118,2.983,119,2.983,120,4.232,121,2.983,122,2.522,123,2.983,124,2.013,125,2.983,126,2.983,127,2.983,128,2.983,129,2.983,130,2.522,131,2.983,132,2.983,133,1.661,134,4.232,135,4.232,136,2.983,137,2.37,138,2.071,139,2.983,140,2.983,141,2.983,142,2.983,143,2.983,144,2.983,145,2.983,146,2.983,147,4.232,148,2.983,149,2.983,150,2.983,151,2.522,152,2.983,153,2.983,154,2.522,155,2.983,156,2.983,157,2.983,158,2.983,159,2.983,160,1.146,161,2.983,162,2.219,163,2.983,164,2.983,165,2.983,166,2.983,167,2.983,168,1.992,169,1.992,170,2.219,171,2.983,172,2.983,173,2.522,174,1.319,175,2.522,176,2.983,177,2.983,178,4.232,179,2.983,180,1.319,181,2.983,182,2.983]],["title/classes/CreateEncuestaDto.html",[0,0.098,183,1.756]],["body/classes/CreateEncuestaDto.html",[0,0.146,2,1.158,3,0.227,4,0.197,5,0.197,8,0.288,9,0.872,10,2.128,11,0.887,13,0.614,14,0.026,15,1.261,16,1.16,18,0.669,23,0.389,25,3.083,27,1.534,29,1.386,30,1.004,31,1.976,32,1.411,33,2.112,40,0.794,43,1.239,45,1.612,49,0.227,51,1.656,53,2.634,56,3.35,57,1.698,58,3.115,59,2.634,60,1.958,62,0.979,64,1.989,65,1.958,66,0.017,67,0.017,89,1.328,92,1.332,97,0.776,116,1.769,124,1.534,160,2.235,168,2.154,183,2.295,184,2.987,185,2.399,186,3.426,187,3.426,188,4.47,189,3.225,190,3.225,191,2.399,192,3.225,193,4.201,194,2.727,195,3.225,196,2.399,197,3.225,198,3.532,199,1.534,200,2.154,201,3.426,202,1.534,203,2.727,204,2.399,205,2.727,206,2.727,207,2.727,208,3.225,209,4.47,210,2.985,211,2.488,212,2.985,213,2.154,214,2.727,215,2.399,216,1.244,217,1.796,218,2.154,219,2.154,220,1.958,221,2.985,222,2.488,223,2.985,224,1.534,225,5.088,226,3.225,227,2.727,228,1.534,229,2.727,230,3.426,231,2.154,232,2.126,233,2.399,234,2.154,235,2.154,236,2.399,237,2.727,238,2.399,239,1.796,240,2.154,241,3.779,242,3.225,243,1.796,244,2.154]],["title/classes/CreateEncuestaResponseDto.html",[0,0.098,245,2.285]],["body/classes/CreateEncuestaResponseDto.html",[0,0.103,2,1.294,3,0.253,4,0.22,5,0.22,8,0.322,9,0.941,13,0.632,14,0.026,15,1.406,16,1.331,18,0.767,23,0.253,29,1.45,40,0.636,48,2.928,49,0.253,62,1.047,66,0.018,67,0.018,92,1.395,168,3.874,184,3.315,186,3.628,187,3.628,198,3.92,199,1.714,216,1.524,239,3.464,240,3.22,241,4.904,243,3.464,244,3.22,245,3.22,246,3.048,247,2.584,248,2.789,249,4.041,250,4.594,251,1.267,252,6.353,253,3.604,254,5.8,255,3.604,256,4.904,257,3.229,258,3.604,259,3.604,260,3.604,261,3.604,262,0.75,263,3.604,264,3.858]],["title/classes/CreateOpcionDto.html",[0,0.098,265,1.904]],["body/classes/CreateOpcionDto.html",[0,0.147,2,1.439,3,0.282,4,0.245,5,0.245,8,0.358,9,1.009,11,1.763,13,0.514,14,0.026,15,1.083,16,1.083,18,0.624,23,0.363,25,2.878,27,1.907,29,1.285,30,0.901,31,2.285,32,1.103,33,2.129,40,0.755,43,1.54,45,1.624,49,0.282,51,1.722,53,2.459,56,3.366,57,1.722,58,3.671,59,2.655,60,2.434,62,1.017,64,1.439,66,0.019,67,0.019,89,1.651,92,1.377,174,1.772,184,2.938,191,2.982,198,3.475,199,1.907,200,2.677,201,3.822,211,3.186,213,2.677,217,2.232,218,2.677,219,2.677,220,2.434,221,3.453,222,2.878,223,3.453,262,0.805,265,2.878,266,3.39,267,2.489,268,3.39,269,4.009,270,4.009,271,3.453,272,2.356,273,2.655,274,1.907,275,3.39,276,3.39]],["title/classes/CreatePreguntaDto.html",[0,0.098,193,2.285]],["body/classes/CreatePreguntaDto.html",[0,0.139,2,1.056,3,0.207,4,0.18,5,0.18,7,2.189,8,0.263,9,0.818,11,1.608,12,1.766,13,0.598,14,0.026,15,0.878,16,1.114,18,0.642,20,2.044,23,0.395,24,2.799,25,2.333,26,2.189,27,1.399,29,1.351,30,0.941,31,1.852,32,1.343,33,2.01,34,1.787,35,1.212,36,1.787,38,1.505,39,1.787,40,0.825,41,0.76,43,1.131,45,1.671,46,1.06,49,0.207,51,1.745,52,1.399,53,2.674,55,3.543,56,3.482,57,1.721,58,3.651,59,3,60,1.787,62,1.034,63,2.488,64,2.018,65,1.787,66,0.016,67,0.016,89,1.212,92,1.446,97,0.708,124,1.399,162,2.189,174,1.301,184,2.886,191,2.189,193,2.799,194,2.488,196,2.189,198,3.413,199,1.399,200,1.965,201,3.754,202,1.399,203,2.488,204,2.189,205,2.488,206,2.488,207,2.488,210,2.799,211,2.961,212,2.799,213,1.965,214,2.488,217,1.638,218,1.965,219,1.965,220,1.787,221,3.552,222,2.717,223,3.26,224,1.993,225,4.497,230,2.799,231,1.965,232,1.993,233,2.189,234,1.965,235,1.965,236,2.189,238,2.189,262,0.652,265,3.422,267,2.19,268,2.488,271,2.799,273,2.152,274,1.399,275,2.488,276,2.488,277,1.836,278,2.942,279,2.189,280,4.19,281,2.942,282,2.942,283,2.942,284,2.488,285,2.942,286,2.942,287,3.26,288,2.488,289,2.189,290,1.787,291,2.189,292,2.488,293,2.488]],["title/entities/Encuesta.html",[216,0.768,294,0.88]],["body/entities/Encuesta.html",[0,0.122,3,0.214,4,0.186,5,0.186,8,0.272,9,0.838,13,0.617,14,0.026,15,1.238,16,1.272,18,0.749,23,0.379,29,0.965,30,0.684,31,1.347,32,0.838,37,1.369,40,0.78,41,1.125,43,1.171,45,1.563,46,1.125,49,0.214,50,2.576,51,0.838,52,1.449,53,1.449,57,0.838,62,1.127,66,0.016,67,0.016,89,1.255,92,1.37,97,0.733,107,2.391,111,1.105,116,1.588,124,2.043,133,1.696,137,1.171,138,1.023,160,2.189,168,2.035,174,1.347,180,2.518,202,1.449,216,1.214,222,1.696,224,2.043,228,2.043,247,2.366,248,2.554,251,1.132,262,0.669,279,2.266,290,2.608,294,1.105,295,1.347,296,2.576,297,4.975,298,3.608,299,1.671,300,4.295,301,4.975,302,3.047,303,3.047,304,3.047,305,4.295,306,3.047,307,2.869,308,3.047,309,3.047,310,2.366,311,3.047,312,2.811,313,3.047,314,2.608,315,4.295,316,3.632,317,3.047,318,4.295,319,3.047,320,2.076,321,1.347,322,2.035,323,2.77,324,2.434,325,3.195,326,2.576,327,2.266,328,3.701,329,2.266,330,2.266,331,1.369,332,3.804,333,2.266,334,2.266,335,2.266,336,2.554,337,2.576,338,2.266,339,3.047,340,1.449,341,3.195,342,3.195,343,4.295,344,2.266,345,2.266,346,1.449,347,2.035,348,2.266,349,2.035,350,2.266,351,1.85,352,2.266,353,2.266,354,3.047]],["title/controllers/EncuestasController.html",[355,1.512,356,2.285]],["body/controllers/EncuestasController.html",[0,0.036,3,0.089,4,0.078,5,0.078,8,0.114,10,1.833,11,1.4,12,1.437,13,0.506,14,0.026,15,1.208,16,1,18,0.576,20,0.488,23,0.357,29,1.334,30,0.285,32,0.918,33,1.788,34,0.771,35,0.523,37,1.12,38,1.461,40,0.869,41,0.83,45,1.552,48,1.313,49,0.089,57,1.195,62,1.048,64,1.014,65,0.771,66,0.008,67,0.008,88,0.399,93,0.652,97,0.802,98,1.586,99,0.707,107,2.082,116,1.1,133,1.204,160,1.437,173,1.074,174,1.92,175,1.074,180,1.474,183,1.712,186,1.445,187,1.445,199,0.604,204,2.481,216,1.483,217,0.707,220,2.025,228,0.604,239,1.204,240,0.848,243,3.17,244,1.445,245,1.886,247,0.604,249,0.945,251,1.356,257,2.906,262,0.813,264,3.5,267,2.035,277,1.279,298,2.227,299,0.726,307,1.886,320,1.564,321,0.561,324,0.523,331,1.522,340,0.604,346,1.343,347,0.848,350,0.945,351,0.771,352,0.945,353,0.945,355,0.561,356,1.445,357,0.561,358,1.074,359,0.848,360,1.029,361,2.946,362,2.825,363,2.388,364,2.388,365,2.163,366,2.825,367,2.825,368,2.825,369,2.388,370,2.825,371,1.27,372,2.163,373,1.27,374,2.269,375,2.269,376,2.741,377,1.074,378,1.27,379,2.101,380,1.27,381,1.829,382,2.388,383,1.27,384,1.074,385,2.227,386,2.163,387,1.27,388,1.27,389,1.27,390,3.696,391,1.829,392,1.829,393,1.27,394,4.179,395,1.829,396,1.204,397,3.675,398,3.883,399,3.867,400,1.27,401,1.27,402,1.27,403,2.163,404,1.074,405,1.27,406,1.27,407,1.27,408,1.27,409,1.27,410,1.27,411,2.163,412,4.07,413,1.27,414,1.27,415,1.074,416,1.27,417,1.27,418,1.27,419,1.829,420,2.163,421,1.074,422,1.609,423,1.204,424,1.445,425,1.27,426,1.27,427,1.27,428,1.27,429,0.771,430,0.771,431,1.445,432,0.848,433,1.829,434,2.101,435,2.388,436,0.945,437,3.867,438,3.672,439,2.82,440,1.573,441,1.074,442,1.45,443,1.27,444,1.829,445,1.445,446,1.27,447,0.945,448,0.848,449,0.945,450,0.945,451,1.27,452,0.604,453,1.27,454,0.945,455,1.27,456,0.771,457,0.771,458,0.604,459,1.313,460,1.313,461,0.848,462,1.27,463,3.672,464,2.388,465,2.388,466,1.074,467,1.27,468,2.833,469,2.833,470,1.27,471,1.829,472,1.27,473,1.27,474,1.27,475,2.483,476,1.886,477,1.27,478,1.074,479,1.27,480,1.074,481,0.945,482,2.227,483,2.025,484,1.829,485,1.445,486,1.27,487,1.074,488,1.27,489,1.074,490,0.945,491,2.163,492,1.27,493,1.27,494,1.27,495,1.313,496,3.335,497,2.82,498,3.335,499,3.335,500,3.162,501,2.782,502,3.027,503,3.231,504,3.162,505,2.782,506,3.402,507,2.718,508,2.782,509,2.782,510,3.162,511,2.782,512,1.27,513,3.335,514,1.27,515,1.074,516,1.27,517,2.163,518,1.074,519,1.829,520,3.027,521,2.163,522,2.163,523,2.163,524,2.163,525,1.829,526,2.163,527,2.163,528,2.163,529,1.829,530,2.163,531,1.27,532,1.074,533,1.313,534,1.204,535,1.829,536,1.27,537,1.27,538,1.074,539,0.848,540,1.27,541,1.074,542,1.074,543,1.27,544,0.945,545,1.204,546,0.707,547,0.848,548,0.771,549,1.27,550,1.27,551,1.27,552,1.27,553,1.27,554,1.27,555,1.27,556,0.945,557,1.074,558,1.27,559,1.27]],["title/modules/EncuestasModule.html",[68,1.314,79,2.077]],["body/modules/EncuestasModule.html",[0,0.096,3,0.235,4,0.205,5,0.205,14,0.026,23,0.452,29,1.368,30,1.176,32,1.263,37,1.44,38,1.648,40,0.901,41,0.949,46,0.949,49,0.235,51,1.715,62,1.116,66,0.017,67,0.017,68,2.011,70,1.594,71,1.594,72,1.866,73,1.866,74,1.594,75,2.914,76,1.866,79,3.855,82,3.39,83,2.555,84,1.866,85,1.721,87,2.787,88,1.053,91,3.283,92,1.418,93,1.721,97,0.806,98,1.594,99,1.866,104,2.238,107,2.914,108,2.035,109,1.38,110,2.238,111,1.181,137,2.266,138,1.98,169,2.238,216,1.031,272,1.38,274,2.677,299,1.125,320,2.011,321,1.481,324,2.318,327,2.493,336,2.89,340,2.183,356,3.496,357,2.029,396,1.866,429,3.178,430,2.787,440,3.39,441,2.834,447,2.493,456,2.035,457,2.787,560,2.834,561,3.351,562,2.834,563,3.351,564,3.351,565,3.414,566,3.414,567,3.351,568,1.442,569,3.351,570,3.351,571,2.787,572,2.493,573,3.351,574,3.414,575,2.493,576,2.493,577,2.493,578,2.493,579,2.493,580,2.493,581,2.493,582,2.493]],["title/injectables/EncuestasService.html",[440,1.904,583,1.512]],["body/injectables/EncuestasService.html",[0,0.04,3,0.097,4,0.085,5,0.085,8,0.124,10,1.827,11,0.382,12,1.237,13,0.473,14,0.027,15,1.189,18,0.574,20,0.533,23,0.378,29,1.232,30,1.111,31,0.613,32,1.173,33,1.621,34,0.843,35,0.571,37,0.641,38,1.268,39,0.843,40,0.834,41,0.547,42,1.173,43,0.533,45,1.423,46,0.64,48,0.843,49,0.097,51,1.083,52,0.66,57,1.247,59,1.197,60,0.843,62,1.034,64,1.413,65,1.415,66,0.009,67,0.009,88,0.732,89,0.96,92,0.849,97,0.947,98,0.66,107,0.773,109,0.571,111,0.776,116,1.398,124,1.679,133,1.298,137,0.533,138,1.012,151,1.173,174,1.03,183,1.813,186,2.013,187,2.013,216,1.467,220,1.415,222,0.773,224,0.66,227,1.173,228,0.66,234,1.557,236,1.032,239,1.966,240,2.013,243,2.993,244,2.629,247,1.679,248,2.539,249,1.734,250,1.971,251,1.189,257,2.191,262,0.77,272,0.571,273,0.713,277,1.339,287,0.927,298,3.303,299,1.012,307,2.013,320,1.513,324,0.96,327,1.032,331,1.308,336,0.713,340,0.66,346,1.872,349,1.557,350,1.032,351,0.843,352,1.032,353,1.032,360,1.109,361,2.88,363,1.971,364,2.548,369,1.971,374,2.262,375,2.155,376,2.656,377,1.971,379,1.734,384,1.173,390,2.013,394,3.591,415,1.971,423,1.678,424,0.927,435,1.173,436,2.242,440,1.298,444,1.173,445,0.927,447,1.032,448,0.927,449,1.032,450,1.032,458,1.109,459,1.415,461,0.927,468,3.443,469,2.924,471,2.548,475,2.61,476,2.358,481,2.626,483,0.843,485,2.847,487,1.971,490,2.626,497,4.021,501,1.032,502,1.032,503,1.032,505,1.734,506,2.626,507,1.557,508,1.032,509,1.032,511,1.032,518,1.173,519,1.971,529,1.971,532,3.831,533,2.588,534,2.373,535,1.173,539,0.927,544,2.242,546,0.773,547,0.927,548,1.415,568,0.436,571,0.843,583,1.03,584,0.843,585,1.173,586,3.014,587,2.331,588,2.331,589,3.014,590,1.388,591,2.751,592,2.548,593,1.388,594,1.971,595,1.388,596,1.388,597,1.388,598,2.331,599,1.388,600,2.331,601,1.388,602,4.755,603,1.388,604,1.388,605,1.388,606,1.388,607,1.173,608,1.173,609,0.927,610,1.971,611,1.388,612,1.388,613,3.014,614,1.032,615,0.927,616,2.548,617,1.173,618,1.971,619,1.173,620,1.173,621,1.173,622,1.173,623,2.242,624,1.388,625,1.388,626,1.388,627,1.032,628,2.331,629,2.331,630,1.388,631,0.927,632,1.388,633,1.388,634,1.388,635,2.331,636,1.971,637,1.032,638,1.388,639,2.331,640,2.331,641,1.388,642,1.388,643,1.388,644,1.388,645,1.388,646,1.388,647,1.388,648,1.388,649,1.388,650,1.388,651,2.331,652,1.388,653,1.388,654,1.388,655,1.388,656,1.388,657,1.388,658,1.388,659,1.388,660,1.388,661,1.388,662,1.388,663,1.388,664,1.388,665,1.388,666,1.388,667,4.546,668,1.388,669,1.388,670,1.388,671,3.014,672,1.388,673,1.388,674,1.388,675,2.331,676,2.331,677,1.388,678,2.331,679,1.388,680,1.388,681,2.331,682,2.331,683,1.388,684,1.388,685,1.388,686,1.173,687,1.388,688,1.388,689,1.388,690,1.388,691,1.388,692,2.331,693,1.388,694,1.388,695,1.388,696,2.331,697,1.388,698,1.388,699,1.388,700,2.331,701,1.388,702,2.331,703,1.388,704,1.388,705,1.388,706,2.331,707,1.388,708,1.388,709,1.388,710,2.331,711,1.971,712,1.971,713,1.388,714,1.173,715,2.548,716,1.734,717,1.971,718,1.388,719,1.388,720,1.388,721,1.173,722,1.388,723,2.331,724,1.971,725,2.331,726,1.388,727,1.388,728,1.388,729,1.388,730,1.388,731,2.331,732,2.331,733,1.388,734,1.388,735,1.388,736,1.388,737,1.388,738,1.388,739,1.032,740,1.388,741,1.388,742,1.388,743,1.388,744,1.557,745,1.173,746,1.388,747,1.032,748,1.388,749,1.388,750,1.388,751,1.388,752,1.971,753,1.173,754,1.388,755,1.388,756,2.331,757,2.331,758,2.331,759,1.173,760,1.388]],["title/classes/ObtenerEncuestaDto.html",[0,0.098,385,2.285]],["body/classes/ObtenerEncuestaDto.html",[0,0.143,2,1.37,3,0.268,4,0.233,5,0.233,8,0.341,9,0.977,12,1.936,13,0.498,14,0.026,15,1.049,16,1.049,18,0.604,23,0.392,26,2.839,27,1.815,29,1.384,30,0.857,31,2.213,32,1.05,33,2.062,36,2.317,38,1.798,39,2.317,40,0.737,41,0.692,43,1.466,45,1.199,49,0.268,51,1.632,53,2.381,56,3.303,57,1.695,58,3.602,59,2.571,62,0.94,64,1.798,66,0.019,67,0.019,89,1.571,92,1.427,174,1.687,185,2.839,198,3.393,199,1.815,200,2.549,201,3.732,211,3.111,213,2.549,216,1.125,217,2.125,218,2.549,219,2.549,221,3.344,222,2.788,223,3.344,224,1.815,243,3.111,257,2.125,284,3.227,287,3.732,288,3.227,290,2.317,291,2.839,292,3.227,385,3.344,390,2.549,394,3.962,395,3.227,396,2.125,448,3.962,449,2.839,450,2.839,478,3.227,614,2.839,636,3.227,761,4.725,762,3.816,763,3.816,764,3.816,765,3.816,766,3.816,767,3.816,768,3.227,769,3.816,770,3.816]],["title/entities/Opcion.html",[294,0.88,568,1.075]],["body/entities/Opcion.html",[0,0.134,3,0.244,4,0.212,5,0.212,8,0.311,9,0.918,11,1.572,13,0.569,14,0.026,15,0.986,16,1.197,18,0.69,23,0.401,29,0.781,31,1.536,32,0.956,37,1.295,40,0.788,43,1.336,45,1.478,46,1.19,49,0.244,51,0.956,52,2.238,53,1.653,57,0.956,62,1.141,66,0.017,67,0.017,89,1.431,91,1.935,92,1.375,97,0.836,111,1.211,137,1.336,138,1.167,160,1.336,180,2.64,202,1.653,224,2.537,228,2.238,251,1.197,262,0.89,267,2.353,272,1.431,277,1.478,290,2.111,294,1.211,295,1.536,299,1.58,310,2.537,312,2.84,320,2.049,321,1.536,322,2.322,323,2.619,324,2.353,325,2.586,326,2.939,328,3.967,329,2.586,330,2.586,331,1.295,332,3.817,333,3.5,334,2.586,335,2.586,336,2.416,341,2.586,342,2.586,344,2.586,345,2.586,346,2.238,347,2.322,348,2.586,349,2.322,351,2.111,545,2.619,568,1.478,771,2.939,772,3.476,773,3.476,774,2.111,775,3.476,776,3.476,777,3.476,778,2.619,779,2.416,780,2.537,781,1.935,782,1.935,783,2.939,784,2.939,785,2.586,786,2.586,787,3.476]],["title/classes/OpcionConRespuestasDto.html",[0,0.098,788,2.077]],["body/classes/OpcionConRespuestasDto.html",[0,0.166,2,1.495,3,0.292,4,0.254,5,0.254,8,0.372,9,1.034,11,1.687,12,1.308,13,0.61,14,0.026,15,1.378,18,0.74,20,2.036,23,0.292,30,0.935,35,1.715,37,1.146,40,0.699,41,0.755,46,0.755,49,0.409,62,0.891,66,0.02,67,0.02,97,1.002,116,1.224,160,1.6,180,1.841,216,1.19,232,1.981,247,1.981,248,2.138,251,1.327,262,1.046,267,2.525,274,2.52,277,1.664,299,1.398,452,1.981,458,1.981,788,3.538,789,3.844,790,2.781,791,3.891,792,4.164,793,4.164,794,4.164,795,4.164,796,2.529,797,2.318,798,2.949,799,3.098,800,3.098,801,3.098,802,3.098,803,3.098,804,2.781,805,3.098,806,3.098]],["title/controllers/OpcionesController.html",[355,1.512,807,2.285]],["body/controllers/OpcionesController.html",[0,0.12,3,0.296,4,0.258,5,0.258,8,0.378,10,2.053,13,0.532,14,0.026,16,1.12,18,0.645,23,0.412,49,0.296,66,0.02,67,0.02,88,1.326,251,1.12,262,1.011,265,3.716,289,3.14,331,1.47,355,1.866,357,1.866,359,2.82,360,2.542,361,3.089,374,2.542,375,2.542,376,2.931,431,3.569,432,2.82,434,4.361,460,2.563,475,2.542,482,2.82,807,3.569,808,3.57,809,4.221,810,4.958,811,4.958,812,3.57,813,4.221,814,4.518,815,3.57,816,4.518,817,4.221,818,4.361,819,3.57,820,3.264,821,3.57,822,3.57,823,4.221,824,3.14,825,4.221,826,4.221,827,4.221]],["title/modules/OpcionesModule.html",[68,1.314,80,2.077]],["body/modules/OpcionesModule.html",[0,0.132,3,0.325,4,0.283,5,0.283,14,0.026,23,0.467,46,1.027,49,0.325,66,0.021,67,0.021,68,2.349,70,2.203,71,2.203,72,2.579,73,2.579,74,2.203,75,3.404,76,2.579,80,4.035,83,3.152,84,2.579,85,2.378,87,2.812,88,1.455,108,2.812,109,1.907,357,2.502,568,1.455,807,4.083,820,3.7,821,3.916,828,3.916,829,3.916,830,4.632,831,2.579,832,2.812,833,4.632,834,4.632]],["title/injectables/OpcionesService.html",[583,1.512,820,1.904]],["body/injectables/OpcionesService.html",[0,0.106,3,0.261,4,0.227,5,0.227,8,0.332,10,2.118,13,0.548,14,0.026,18,0.665,23,0.441,46,1.064,48,2.253,49,0.261,66,0.018,67,0.018,88,1.166,109,1.528,111,0.955,251,1.155,262,0.976,265,3.617,272,2.024,289,2.76,331,1.516,360,2.338,361,2.984,374,2.622,375,2.338,376,2.791,423,2.736,458,2.338,459,2.985,468,3.267,469,3.267,475,2.338,533,2.985,534,2.736,568,1.918,583,2.173,584,2.253,591,3.886,609,2.478,615,2.478,744,3.283,747,3.656,810,4.66,811,4.156,812,3.137,814,4.66,815,4.156,820,2.736,822,3.137,831,2.066,832,2.253,835,3.137,836,3.71,837,4.66,838,3.71,839,4.156,840,3.71,841,3.71,842,2.76,843,2.76,844,3.71,845,3.137,846,3.71,847,4.915,848,3.71,849,3.71,850,3.71,851,3.71,852,3.137]],["title/entities/Pregunta.html",[46,0.62,294,0.88]],["body/entities/Pregunta.html",[0,0.116,3,0.199,4,0.173,5,0.173,8,0.253,9,0.795,11,1.438,12,1.867,13,0.591,14,0.026,15,0.854,16,1.208,18,0.696,20,2.128,23,0.405,29,1.073,31,1.251,32,1.121,34,1.718,35,1.165,36,3.173,37,1.314,38,1.016,39,1.718,40,0.849,41,0.739,43,1.087,45,1.5,46,1.004,49,0.199,51,0.779,52,2.271,53,1.938,57,1.314,62,1.146,64,1.016,66,0.015,67,0.015,89,1.165,91,1.575,92,1.387,97,0.681,111,1.049,116,1.198,137,1.566,138,1.368,160,1.566,180,2.549,202,1.346,216,1.413,224,2.485,228,2.485,237,2.393,238,2.105,251,1.095,262,0.813,267,2.151,277,1.642,279,2.105,287,2.722,290,2.474,293,2.393,294,1.049,295,1.251,299,0.95,310,2.271,312,2.743,314,1.718,316,3.446,320,2.128,321,1.251,322,1.89,323,2.659,324,2.447,325,3.031,328,3.886,329,2.105,330,2.105,331,1.438,332,3.852,333,3.031,334,2.105,335,2.105,336,2.092,337,2.393,341,3.031,342,3.031,344,3.031,345,3.031,346,2.271,347,2.722,348,3.031,349,2.722,351,1.718,568,1.911,774,1.718,778,2.269,779,2.092,781,1.575,782,1.575,783,2.393,784,2.393,785,2.105,786,2.105,853,2.393,854,2.83,855,2.83,856,2.83,857,2.83,858,3.446,859,2.83,860,2.83,861,2.105,862,2.83,863,2.83,864,2.271,865,1.718,866,2.83,867,2.722,868,2.83,869,1.89]],["title/entities/Pregunta-1.html",[46,0.519,294,0.737,495,1.739]],["body/entities/Pregunta-1.html",[0,0.112,3,0.275,4,0.239,5,0.239,8,0.35,9,0.993,11,1.556,12,1.777,13,0.645,14,0.026,15,1.066,16,1.334,18,0.769,20,2.386,23,0.421,35,1.611,36,3.638,40,0.671,46,0.923,49,0.275,62,0.856,66,0.019,67,0.019,92,0.941,111,1.007,116,1.151,137,1.504,138,1.314,160,1.504,216,1.492,251,1.185,262,0.932,267,2.329,277,1.777,294,1.31,295,1.73,310,2.691,312,3.028,314,2.376,323,2.834,331,1.556,332,2.614,568,2,779,2.614,831,2.179,858,4.304,861,2.911,870,3.309,871,3.309,872,4.304,873,3.913,874,3.913,875,3.913,876,3.913,877,3.913,878,5.09,879,3.913,880,3.913,881,2.911]],["title/classes/PreguntaConRespuestasDto.html",[0,0.098,798,1.904]],["body/classes/PreguntaConRespuestasDto.html",[0,0.163,2,1.437,3,0.281,4,0.244,5,0.244,8,0.358,9,1.008,11,1.662,12,1.796,13,0.637,14,0.026,15,1.383,18,0.787,20,2.197,23,0.281,30,0.899,35,1.648,37,1.101,40,0.681,41,0.726,46,0.726,49,0.402,62,0.869,66,0.019,67,0.019,97,0.962,116,1.176,160,1.538,180,1.769,216,1.16,232,1.903,247,1.903,248,2.054,251,1.31,262,1.028,267,2.488,274,2.456,277,1.898,299,1.344,452,1.903,458,2.719,788,3.472,789,4.009,790,2.672,791,2.672,796,2.43,797,2.228,798,3.183,799,2.976,800,4.253,801,2.976,802,2.976,803,2.976,804,2.672,805,2.976,806,2.976,882,5.163,883,4.001,884,4.001,885,4.001,886,4.001,887,4.001]],["title/controllers/PreguntasController.html",[355,1.512,888,2.285]],["body/controllers/PreguntasController.html",[0,0.096,1,3.584,3,0.236,4,0.205,5,0.205,8,0.301,10,1.767,13,0.458,14,0.026,16,0.964,18,0.555,23,0.368,29,1.266,30,0.755,32,1.624,33,1.384,37,1.265,38,1.207,40,0.823,44,3.421,45,1.647,46,1.022,49,0.236,51,0.925,56,1.872,57,1.624,62,0.948,64,1.651,66,0.017,67,0.017,88,1.056,92,1.106,93,1.726,97,1.466,98,2.681,99,1.872,116,1.657,138,1.129,180,2.317,215,2.501,228,2.188,234,2.245,251,1.331,262,0.949,273,2.362,277,1.445,320,2.014,321,1.486,331,1.265,340,1.599,346,1.599,355,1.486,357,1.486,359,2.245,360,2.188,361,2.899,374,2.188,375,2.188,376,2.681,429,2.041,430,2.041,431,3.072,432,2.245,433,3.889,456,2.041,457,2.041,460,2.041,461,2.245,465,3.889,475,2.188,481,2.501,482,3.072,483,2.793,484,3.889,485,3.072,489,3.889,556,2.501,623,3.421,797,2.56,816,3.889,818,3.9,819,3.889,824,2.501,888,3.072,889,2.843,890,4.766,891,5.242,892,3.362,893,5.636,894,4.599,895,3.362,896,3.362,897,3.362,898,2.919,899,3.362,900,2.843,901,3.362,902,5.242,903,4.599,904,3.362,905,3.362,906,3.362,907,2.843,908,3.362,909,2.843,910,2.843,911,2.843,912,3.362]],["title/modules/PreguntasModule.html",[68,1.314,81,2.077]],["body/modules/PreguntasModule.html",[0,0.105,3,0.258,4,0.225,5,0.225,14,0.026,23,0.439,29,1.406,30,1.233,32,1.012,37,1.51,38,1.755,40,0.901,46,0.886,49,0.258,51,1.675,62,1.091,66,0.018,67,0.018,68,2.109,70,1.75,71,1.75,72,2.048,73,2.048,74,1.75,75,3.055,76,2.048,81,3.8,83,2.721,84,2.048,85,1.889,87,2.234,88,1.156,91,3.256,92,1.32,93,1.889,97,0.885,98,1.75,99,2.048,104,2.457,108,2.234,109,1.515,110,2.457,111,1.258,116,1.614,137,2.109,138,1.843,169,2.457,272,1.515,274,2.325,320,1.878,321,1.626,324,2.012,336,2.509,340,2.325,357,2.16,396,2.048,429,3.333,430,2.968,456,2.234,457,2.968,565,3.635,566,3.635,568,1.536,571,2.968,572,2.736,574,3.635,575,2.736,576,2.736,577,2.736,578,2.736,579,2.736,580,2.736,581,2.736,582,2.736,831,2.048,832,2.234,888,3.665,898,3.484,913,3.111,914,3.111,915,3.679,916,3.679,917,3.679,918,3.679]],["title/injectables/PreguntasService.html",[583,1.512,898,1.904]],["body/injectables/PreguntasService.html",[0,0.084,1,3.228,3,0.206,4,0.179,5,0.179,8,0.263,10,1.874,13,0.485,14,0.026,18,0.589,23,0.41,29,1.194,30,0.66,32,1.462,33,1.21,37,0.808,38,1.055,40,0.825,43,1.129,44,3.114,45,1.67,46,1.215,49,0.206,51,0.808,52,1.398,62,1.067,64,1.751,66,0.016,67,0.016,88,0.923,89,1.724,92,0.707,97,0.707,98,1.398,109,1.21,111,1.255,133,2.331,137,1.129,138,0.987,215,2.186,224,1.398,251,1.114,262,0.909,277,1.67,291,2.186,320,2.042,324,2.405,331,1.342,340,1.398,346,1.398,360,1.991,361,2.778,374,2.32,375,1.991,376,2.528,422,3.114,423,2.331,458,1.991,459,2.542,460,2.542,461,2.796,468,2.331,469,3.128,475,1.991,476,2.796,490,3.114,507,1.962,533,2.542,534,2.331,539,2.796,547,1.962,548,1.784,568,1.532,583,1.85,584,1.784,591,3.649,607,2.484,608,2.484,609,1.962,610,4.124,615,1.962,619,2.484,620,2.484,623,3.114,637,2.186,711,3.54,712,3.54,716,2.186,739,3.114,744,3.55,747,3.114,797,2.331,831,1.636,832,1.784,842,2.186,843,2.186,845,3.54,852,2.484,890,4.124,898,2.331,900,2.484,907,2.484,909,2.484,910,2.484,911,2.484,919,2.484,920,4.877,921,2.938,922,4.877,923,2.938,924,4.186,925,2.938,926,5.315,927,2.938,928,6.01,929,2.938,930,2.938,931,2.938,932,3.54,933,2.938,934,2.938,935,2.938,936,4.186,937,2.938,938,2.938,939,2.938,940,2.938]],["title/classes/RegistrarRespuestasDto.html",[0,0.098,941,1.904]],["body/classes/RegistrarRespuestasDto.html",[0,0.177,2,1.543,3,0.302,4,0.262,5,0.262,8,0.384,9,1.055,11,1.182,12,1.698,13,0.636,14,0.026,15,1.132,16,0.9,18,0.519,23,0.38,24,3.948,25,3.291,27,2.044,40,0.567,49,0.38,57,1.182,66,0.02,67,0.02,116,1.589,124,2.57,202,2.044,210,3.948,211,3.453,212,3.609,230,2.87,231,3.609,232,2.044,235,3.609,262,0.92,271,3.948,272,1.77,273,2.207,277,1.35,299,1.985,545,2.393,546,2.393,627,3.197,631,2.87,941,3.009,942,3.282,943,3.197,944,4.143,945,4.298,946,4.298,947,4.298,948,3.634,949,3.197,950,3.197]],["title/entities/Respuesta.html",[41,0.62,294,0.88]],["body/entities/Respuesta.html",[0,0.118,3,0.29,4,0.252,5,0.252,8,0.37,9,1.029,13,0.629,14,0.026,16,1.323,18,0.763,23,0.429,41,0.956,49,0.29,66,0.02,67,0.02,111,1.063,216,1.475,251,1.216,262,0.952,294,1.063,295,1.826,310,2.761,312,1.965,314,3.201,323,3.232,331,1.137,774,2.509,778,2.935,779,2.707,780,2.908,782,2.3,864,2.908,865,2.509,867,4.219,869,3.877,881,3.074,951,3.494,952,4.908,953,4.132,954,4.132,955,3.521,956,4.132,957,5.271,958,5.271,959,4.132,960,5.271,961,5.271,962,4.132,963,5.271,964,3.494]],["title/entities/Respuesta-1.html",[41,0.519,294,0.737,495,1.739]],["body/entities/Respuesta-1.html",[0,0.116,3,0.285,4,0.248,5,0.248,8,0.363,9,1.016,13,0.625,14,0.026,16,1.316,18,0.758,23,0.426,41,1.101,49,0.285,66,0.019,67,0.019,111,1.043,216,1.502,251,1.205,262,0.945,294,1.043,295,1.792,310,2.736,312,1.928,314,3.162,323,3.203,331,1.115,724,3.428,778,2.899,779,2.674,780,3.057,782,2.257,864,3.057,865,2.462,867,4.194,869,3.842,871,3.428,881,3.016,952,4.865,955,3.478,964,3.428,965,3.428,966,4.054,967,4.054,968,4.054,969,4.054,970,5.207,971,4.054,972,5.207,973,4.054]],["title/entities/RespuestaAbierta.html",[294,0.88,864,1.627]],["body/entities/RespuestaAbierta.html",[0,0.114,3,0.28,4,0.243,5,0.243,8,0.356,9,1.005,11,1.57,13,0.648,14,0.026,15,1.079,16,1.34,18,0.772,23,0.401,40,0.68,41,1.181,46,1.181,49,0.28,66,0.019,67,0.019,97,0.959,111,1.326,162,3.832,251,1.196,262,0.996,294,1.026,295,1.762,310,2.715,312,2.45,320,1.532,321,1.762,322,2.662,331,1.417,545,3.478,774,3.128,778,3.177,779,2.93,781,3.624,832,2.421,861,2.965,864,2.45,955,4.029,974,3.371,975,4.646,976,3.986,977,3.986,978,3.986,979,3.986,980,3.986,981,5.151,982,5.151,983,3.986,984,3.371,985,3.986]],["title/entities/RespuestaOpcion.html",[294,0.88,780,1.627]],["body/entities/RespuestaOpcion.html",[0,0.12,3,0.296,4,0.258,5,0.258,8,0.378,9,1.043,13,0.633,14,0.026,16,1.332,18,0.768,23,0.412,41,1.196,49,0.296,66,0.02,67,0.02,111,1.086,251,1.228,262,1.011,294,1.086,295,1.866,310,2.789,312,2.008,331,1.47,568,2.072,774,3.245,778,3.264,779,3.011,780,2.542,781,3.616,831,2.35,955,4.116,975,4.729,984,3.57,986,3.57,987,5.376,988,4.221,989,4.221,990,4.221,991,4.221,992,4.221,993,4.221]],["title/classes/RespuestaPreguntaDto.html",[0,0.098,944,2.285]],["body/classes/RespuestaPreguntaDto.html",[0,0.172,2,1.423,3,0.278,4,0.242,5,0.242,8,0.355,9,1.002,10,2.313,11,1.566,12,1.891,13,0.656,14,0.026,15,1.193,16,1.261,17,3.352,18,0.727,23,0.36,24,3.802,25,3.169,27,1.886,40,0.523,49,0.36,57,1.091,66,0.019,67,0.019,116,1.509,124,2.441,196,2.949,202,1.886,210,3.802,211,3.351,212,3.428,230,2.648,231,3.802,232,1.886,235,3.428,262,0.971,271,3.802,272,1.632,273,2.036,277,1.788,299,1.331,545,3.169,546,2.858,627,2.949,631,2.648,941,2.207,942,3.786,943,2.949,944,4.021,948,3.352,949,3.818,950,3.818,994,3.964,995,3.964,996,3.964,997,3.964,998,3.964,999,3.964,1000,3.964]],["title/controllers/RespuestasController.html",[355,1.512,1001,2.285]],["body/controllers/RespuestasController.html",[0,0.061,3,0.15,4,0.131,5,0.131,8,0.191,10,1.747,13,0.557,14,0.026,15,1.27,16,0.953,18,0.549,23,0.365,29,0.908,30,0.743,38,0.768,40,0.887,41,0.825,45,1.702,49,0.15,57,1.251,62,1.005,66,0.012,67,0.012,88,0.672,92,0.514,122,1.808,138,1.527,170,3.866,174,2.297,183,1.098,184,1.098,199,1.017,216,1.48,217,1.84,239,2.893,251,1.345,256,3.417,257,2.25,262,0.894,264,4.046,299,2.156,331,1.58,338,1.591,355,0.945,357,0.945,359,1.428,360,1.572,361,2.884,374,2.163,375,2.163,376,2.662,381,3.844,382,4.581,397,3.656,398,4.365,399,2.795,404,2.795,419,2.795,421,2.795,422,3.866,423,2.893,424,3.037,431,2.699,432,1.428,434,1.591,437,3.844,438,4.394,439,4.857,442,2.075,445,1.428,452,1.572,454,1.591,460,1.299,463,3.417,464,4.732,468,1.84,469,2.531,475,2.163,482,2.699,483,1.299,485,1.428,495,2.007,520,2.459,538,3.844,539,1.428,556,1.591,557,1.808,789,1.299,818,2.459,824,1.591,941,3.55,942,1.299,1001,2.208,1002,1.808,1003,3.417,1004,3.417,1005,4.041,1006,4.041,1007,1.808,1008,6.327,1009,3.306,1010,2.139,1011,2.139,1012,2.139,1013,4.915,1014,3.306,1015,5.597,1016,3.306,1017,3.306,1018,3.306,1019,4.546,1020,4.546,1021,2.139,1022,2.139,1023,2.139,1024,4.041,1025,2.139,1026,2.139,1027,2.139,1028,2.139,1029,4.546,1030,2.795,1031,2.139,1032,3.306,1033,2.139,1034,2.139,1035,2.139,1036,2.139,1037,2.139,1038,1.808,1039,2.139,1040,4.041,1041,2.139,1042,2.139,1043,2.139,1044,1.808,1045,3.306,1046,3.844,1047,4.041,1048,3.306,1049,2.139,1050,3.306,1051,2.139,1052,2.139,1053,2.139,1054,2.139,1055,2.139,1056,2.139,1057,2.139,1058,2.139]],["title/modules/RespuestasModule.html",[68,1.314,82,1.904]],["body/modules/RespuestasModule.html",[0,0.091,3,0.225,4,0.196,5,0.196,14,0.026,23,0.454,29,1.349,30,1.149,32,0.882,37,1.407,38,1.598,40,0.9,41,1.089,46,0.927,49,0.225,51,1.755,62,1.134,66,0.017,67,0.017,68,1.965,70,1.525,71,1.525,72,1.785,73,1.785,74,1.525,75,2.847,76,2.847,82,3.43,83,2.478,84,1.785,85,1.646,87,1.947,88,1.007,91,3.075,92,1.482,93,1.646,97,0.771,98,1.525,99,1.785,104,2.141,107,1.785,108,1.947,109,1.32,110,2.141,111,1.146,137,2.367,138,2.069,169,2.141,216,1.149,272,1.32,274,2.857,320,1.71,321,1.417,324,2.473,336,3.084,340,2.117,357,1.968,396,1.785,429,3.105,430,2.703,442,3.379,456,1.947,457,2.703,546,1.785,565,3.311,566,3.311,568,1.399,571,2.703,572,2.385,574,3.311,575,2.385,576,2.385,577,2.385,578,2.385,579,2.385,580,2.385,581,2.385,582,2.385,780,2.117,782,1.785,864,2.117,865,1.947,1001,3.415,1059,2.711,1060,2.711,1061,2.711,1062,3.206,1063,3.206,1064,3.206,1065,3.206,1066,4.451,1067,3.206,1068,2.711,1069,2.711,1070,2.711,1071,3.206]],["title/injectables/RespuestasService.html",[442,1.756,583,1.512]],["body/injectables/RespuestasService.html",[0,0.043,3,0.105,4,0.092,5,0.092,8,0.134,10,1.424,11,1.445,12,1.001,13,0.369,14,0.027,15,1.101,18,0.447,20,0.576,23,0.401,29,1.145,30,1.261,33,1.024,35,0.617,37,1.131,40,0.811,41,0.672,45,1.291,46,1.064,49,0.105,51,0.412,52,1.515,54,1.115,57,1.219,62,1.008,64,1.144,66,0.009,67,0.009,88,0.471,92,0.766,97,1.066,109,0.617,111,0.386,116,1.702,124,1.183,133,2.063,137,0.955,138,0.835,154,1.268,160,0.955,170,1.115,174,1.817,183,1.277,184,0.77,216,1.371,228,1.515,229,1.268,232,0.713,233,1.115,239,1.384,243,1.773,247,1.763,248,1.277,251,1.279,262,0.73,267,1.526,272,1.526,273,1.903,277,1.475,298,2.127,299,1.488,307,1.001,324,0.617,331,1.02,338,1.115,346,0.713,360,1.183,361,2.424,374,1.763,375,1.515,376,2.108,379,1.115,390,1.001,391,2.102,392,2.102,394,1.66,396,0.835,397,1.849,423,2.467,424,1.66,436,3.491,442,1.277,445,1.001,452,1.955,454,1.849,458,1.183,459,2.691,466,2.102,468,3.448,469,3,475,1.183,476,1.66,480,2.102,483,1.51,495,0.91,500,2.693,501,1.849,502,1.115,503,3.653,504,3.134,505,2.757,506,2.757,507,2.475,508,1.115,509,3.057,510,3.134,511,2.757,515,2.693,520,2.369,533,3.094,534,2.925,541,1.268,542,1.268,544,1.849,545,1.384,547,2.127,548,2.495,568,1.475,571,0.91,583,1.099,584,0.91,591,3.674,592,2.102,594,2.693,609,1.001,615,1.66,621,1.268,622,1.268,631,2.127,637,1.849,667,2.693,686,1.268,714,1.268,715,2.693,716,2.369,717,2.693,721,2.102,739,1.849,744,1.66,745,1.268,752,2.102,753,1.268,759,2.102,780,1.183,781,1.384,782,0.835,785,1.849,786,1.849,791,1.001,796,0.91,797,0.835,798,1.384,804,1.001,837,2.693,839,2.693,842,1.115,843,1.115,864,0.713,865,0.91,867,1.001,869,1.66,872,2.102,932,2.102,941,2.063,942,0.91,975,1.849,987,2.102,1003,2.693,1004,2.693,1007,1.268,1030,1.268,1038,1.268,1044,1.268,1046,1.268,1068,1.268,1069,1.268,1070,1.268,1072,1.268,1073,1.499,1074,3.185,1075,3.185,1076,1.499,1077,4.693,1078,1.499,1079,1.499,1080,3.185,1081,4.11,1082,1.499,1083,1.499,1084,1.499,1085,1.499,1086,3.185,1087,1.499,1088,2.486,1089,1.499,1090,1.499,1091,1.499,1092,1.499,1093,2.486,1094,2.486,1095,1.499,1096,1.499,1097,1.499,1098,1.499,1099,1.499,1100,1.499,1101,1.499,1102,1.499,1103,1.499,1104,2.486,1105,1.499,1106,1.499,1107,3.185,1108,3.185,1109,1.499,1110,2.486,1111,1.499,1112,1.499,1113,1.499,1114,1.499,1115,1.499,1116,4.911,1117,1.499,1118,2.486,1119,1.499,1120,1.499,1121,2.486,1122,2.486,1123,2.486,1124,2.486,1125,2.486,1126,1.499,1127,1.499,1128,1.499,1129,1.499,1130,1.499,1131,1.499,1132,1.499,1133,1.499,1134,1.499,1135,2.486,1136,1.499,1137,2.486,1138,1.499,1139,1.499,1140,2.486,1141,1.499,1142,2.486,1143,2.486,1144,2.486,1145,1.499,1146,1.499,1147,1.499,1148,4.11,1149,1.499,1150,3.185,1151,2.486,1152,1.499,1153,1.499,1154,1.499,1155,1.499,1156,1.499,1157,1.499,1158,1.499,1159,1.499,1160,1.499,1161,1.499,1162,1.499,1163,1.499,1164,1.499,1165,1.499,1166,1.499,1167,1.499,1168,1.499,1169,1.499,1170,2.486,1171,1.499,1172,1.499,1173,1.499,1174,1.499,1175,1.499,1176,2.486,1177,1.499,1178,1.499,1179,1.499,1180,1.499,1181,1.499,1182,1.499,1183,1.499,1184,1.499,1185,1.499,1186,1.499,1187,1.499]],["title/classes/VisualizarRespuestasDto.html",[0,0.098,452,1.627]],["body/classes/VisualizarRespuestasDto.html",[0,0.165,2,1.472,3,0.288,4,0.25,5,0.25,8,0.367,9,1.024,11,1.443,12,1.288,13,0.627,14,0.026,15,1.404,18,0.761,20,2.016,23,0.288,30,0.921,35,1.688,37,1.128,40,0.692,41,0.744,46,0.744,49,0.406,62,0.883,66,0.019,67,0.019,97,0.986,116,1.701,160,2.223,180,1.813,216,1.178,232,1.95,247,2.751,248,2.97,251,1.32,262,1.02,267,2.16,274,2.495,277,1.648,299,1.377,452,2.495,458,1.95,788,3.185,789,3.914,790,2.739,791,2.739,796,2.49,797,2.283,798,3.22,799,3.05,800,3.05,801,3.05,802,3.05,803,3.05,804,2.739,805,3.05,806,3.05,1188,4.1,1189,4.1,1190,4.1,1191,4.1,1192,4.1]],["title/coverage.html",[1193,3.462]],["body/coverage.html",[0,0.191,1,2.245,5,0.226,6,3.127,7,3.648,13,0.368,14,0.026,41,0.89,46,0.89,66,0.018,67,0.018,74,1.759,183,1.899,184,3.009,185,3.648,193,2.47,216,1.102,245,2.47,246,3.127,265,2.059,266,3.127,294,1.671,296,3.127,355,2.59,356,2.47,358,3.127,385,2.47,440,2.059,442,1.899,452,1.759,534,2.059,548,4.272,568,1.162,583,2.59,585,3.127,761,3.127,771,3.127,780,1.759,781,2.73,788,2.245,789,3.341,790,3.675,798,2.059,807,2.47,808,3.127,820,2.059,835,3.127,853,3.127,864,1.759,870,3.127,888,2.47,889,3.127,898,2.059,919,3.127,941,2.059,942,2.978,943,3.648,944,2.47,951,3.127,965,3.127,974,3.127,986,3.127,1001,2.47,1002,3.127,1072,3.127,1193,2.751,1194,3.127,1195,3.698,1196,3.698,1197,3.127,1198,3.698,1199,6.571,1200,3.698,1201,6.097,1202,4.904,1203,6.267,1204,3.698,1205,4.904,1206,3.698,1207,3.698,1208,3.698,1209,3.698]],["title/dependencies.html",[71,1.955,1210,2.422]],["body/dependencies.html",[0,0.165,14,0.026,27,2.287,66,0.021,67,0.021,71,2.287,88,1.511,96,4.066,109,1.98,111,1.237,199,2.287,202,2.287,614,3.577,616,4.066,617,4.066,618,4.066,1211,6.214,1212,4.808,1213,4.808,1214,4.808,1215,4.808,1216,4.808,1217,4.808,1218,4.808,1219,4.808,1220,4.808,1221,4.808,1222,4.808,1223,4.808,1224,4.808,1225,4.808,1226,4.808,1227,4.808,1228,4.808,1229,4.808,1230,4.808,1231,4.808,1232,4.808,1233,4.808,1234,4.808]],["title/miscellaneous/enumerations.html",[1235,1.913,1236,3.475]],["body/miscellaneous/enumerations.html",[8,0.434,14,0.026,20,2.486,41,1.056,66,0.022,67,0.022,257,3.241,448,3.889,546,3.602,796,2.946,949,4.812,950,4.812,1235,3.24,1236,4.102,1237,4.851,1238,5.822,1239,5.822,1240,6.469,1241,4.851,1242,6.85,1243,4.851]],["title/miscellaneous/functions.html",[1235,1.913,1244,3.475]],["body/miscellaneous/functions.html",[8,0.483,14,0.023,66,0.023,67,0.023,74,3.102,1197,4.567,1235,3.607,1244,4.567,1245,5.401]],["title/index.html",[8,0.256,1246,2.864,1247,2.864]],["body/index.html",[4,0.208,14,0.025,66,0.017,67,0.017,85,3.143,93,3.273,130,3.927,264,2.071,398,4.218,525,2.883,591,2.071,1193,2.536,1194,3.927,1248,3.41,1249,3.41,1250,5.281,1251,4.644,1252,3.41,1253,3.41,1254,3.41,1255,3.41,1256,4.644,1257,5.281,1258,3.41,1259,5.67,1260,3.41,1261,6.374,1262,3.41,1263,6.263,1264,3.41,1265,3.41,1266,3.41,1267,4.644,1268,3.41,1269,3.41,1270,5.281,1271,3.41,1272,4.644,1273,3.41,1274,3.41,1275,3.41,1276,3.41,1277,3.41,1278,5.67,1279,6.121,1280,3.41,1281,4.644,1282,3.41,1283,3.41,1284,3.41,1285,3.41,1286,3.41,1287,6.121,1288,4.644,1289,5.67,1290,3.41,1291,4.644,1292,3.41,1293,3.41,1294,4.644,1295,6.121,1296,5.67,1297,3.41,1298,4.644,1299,3.41,1300,3.41,1301,3.41,1302,3.41,1303,5.67,1304,3.41,1305,3.41,1306,3.41,1307,3.41,1308,4.644,1309,3.41,1310,3.41,1311,3.41,1312,3.41,1313,3.41,1314,4.644,1315,3.41,1316,3.41,1317,3.41,1318,4.644,1319,3.41,1320,3.41,1321,4.794,1322,4.644,1323,3.41,1324,3.41,1325,3.41,1326,3.41,1327,3.41,1328,3.41,1329,3.41,1330,3.41,1331,4.644,1332,3.41,1333,3.41,1334,3.41,1335,3.41,1336,5.281,1337,3.41,1338,3.41,1339,3.41,1340,3.41,1341,3.41,1342,3.41,1343,4.644,1344,3.41,1345,3.41,1346,3.41,1347,3.41,1348,3.41,1349,4.644,1350,3.41,1351,3.41,1352,3.41,1353,4.644,1354,4.644,1355,3.41,1356,3.41,1357,3.41,1358,3.41,1359,3.41,1360,3.41,1361,3.41,1362,3.41,1363,3.41,1364,3.41,1365,3.41,1366,2.883,1367,3.41,1368,3.41,1369,3.41,1370,3.41,1371,3.41,1372,3.41,1373,2.883]],["title/modules.html",[70,2.214]],["body/modules.html",[14,0.022,66,0.022,67,0.022,69,3.451,70,2.458,79,3.138,80,3.138,81,3.138,82,2.877,1321,5.689,1374,6.728,1375,6.728,1376,6.728]],["title/overview.html",[1377,3.935]],["body/overview.html",[2,1.598,14,0.026,66,0.02,67,0.02,68,1.71,69,4.57,70,2.116,71,2.116,72,2.477,73,2.477,74,2.116,75,2.477,76,2.477,77,3.762,78,3.762,79,4.051,80,3.921,81,3.921,82,3.715,83,3.074,84,2.477,85,2.285,295,1.967,357,1.967,440,3.343,442,3.426,560,3.762,562,3.762,584,2.702,768,4.67,820,3.343,828,3.762,829,3.762,898,3.343,913,3.762,914,3.762,1059,3.762,1060,3.762,1061,3.762,1377,3.762,1378,4.449,1379,4.449,1380,4.449]],["title/properties.html",[9,0.802,1210,2.422]],["body/properties.html",[9,1.046,14,0.025,66,0.023,67,0.023,264,3.255,1366,4.533,1373,4.533,1381,5.361,1382,5.361,1383,5.361]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":548,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1382,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":495,"title":{"entities/Pregunta-1.html":{},"entities/Respuesta-1.html":{}},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["1'})@apiparam({name",{"_index":404,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["1'})@apiresponse({status",{"_index":418,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["1.5.4",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1380,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["2.2.17",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":419,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["201",{"_index":381,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["3.3.2",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":768,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{},"overview.html":{}}}],["4.0.2",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1019,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["404",{"_index":422,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["5",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["8.1.0",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["8.14.1",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":530,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["a.numero",{"_index":757,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["abc123def456",{"_index":399,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["abc123def456'})@apibody({type",{"_index":1016,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["abierta",{"_index":546,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"modules/RespuestasModule.html":{},"miscellaneous/enumerations.html":{}}}],["abierta.entity",{"_index":865,"title":{},"body":{"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["abierta.entity.ts",{"_index":974,"title":{},"body":{"entities/RespuestaAbierta.html":{},"coverage.html":{}}}],["abierta.entity.ts:15",{"_index":976,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:18",{"_index":983,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:21",{"_index":977,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:24",{"_index":978,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:28",{"_index":979,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:32",{"_index":980,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abiertas",{"_index":631,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["acceder",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["accesible",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["acortar",{"_index":674,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["activo",{"_index":643,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualiza",{"_index":741,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizada",{"_index":936,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["actualizar",{"_index":44,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["actualizardto",{"_index":893,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["actualizarestadoencuesta",{"_index":586,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id",{"_index":595,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarpregunta",{"_index":890,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["actualizarpregunta(id",{"_index":892,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["actualizarpregunta(idpregunta",{"_index":925,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["actualizarpreguntadto",{"_index":1,"title":{"classes/ActualizarPreguntaDto.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"coverage.html":{}}}],["agrega",{"_index":625,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ajusta",{"_index":1178,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["al",{"_index":228,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/RespuestasService.html":{}}}],["alias",{"_index":690,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["allowing",{"_index":1309,"title":{},"body":{"index.html":{}}}],["alternativa",{"_index":1050,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["alternativa)'})@apiparam({name",{"_index":1025,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["amazing",{"_index":1359,"title":{},"body":{"index.html":{}}}],["andwhere('encuesta.habilitada",{"_index":697,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["anidados",{"_index":207,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["api",{"_index":349,"title":{},"body":{"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["api/v1/encuestas/resultados/{id}?codigo={codigoresultados",{"_index":654,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["api/v1/respuestas/participar/{id}/{codigorespuesta",{"_index":652,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["apibody",{"_index":1040,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apioperation",{"_index":437,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["apiparam",{"_index":438,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["apiprefix",{"_index":647,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["apiproperty",{"_index":198,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":268,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiproperty()@isstring",{"_index":188,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":191,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiproperty()@isuuid('4')@isnotempty",{"_index":762,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty({description",{"_index":252,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["apiproperty({enum",{"_index":284,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty({type",{"_index":194,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiresponse",{"_index":439,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["apitags",{"_index":1039,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apitags('respuestas",{"_index":1041,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apiversion",{"_index":649,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["app_url",{"_index":641,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["application",{"_index":1279,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1256,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":69,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["arrayminsize",{"_index":208,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arrayminsize(1",{"_index":226,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arraynotempty",{"_index":209,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arreglo",{"_index":225,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["asc",{"_index":706,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["asigna",{"_index":934,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["asociadas",{"_index":238,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Pregunta.html":{}}}],["async",{"_index":361,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["author",{"_index":1366,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autogenerada",{"_index":335,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["autoloadentities",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["automaticamente",{"_index":242,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["automática",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["automáticamente",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"entities/Encuesta.html":{}}}],["await",{"_index":469,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["aws",{"_index":1298,"title":{},"body":{"index.html":{}}}],["añade",{"_index":480,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["añadirlo",{"_index":1097,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["b",{"_index":756,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["b.numero",{"_index":758,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["backers",{"_index":1360,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":436,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["badrequestexception('código",{"_index":535,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["badrequestexception('datos",{"_index":713,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["badrequestexception('encuesta",{"_index":740,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["base",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["based",{"_index":1293,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":644,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["baseurl}/${apiprefix}/${apiversion}/encuestas/${encuestacreada.id}/resultados?codigo=${codigoresultados",{"_index":655,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["baseurl}/${apiprefix}/${apiversion}/respuestas/participar/${encuestacreada.id}/${codigorespuesta",{"_index":653,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["board",{"_index":1352,"title":{},"body":{"index.html":{}}}],["body",{"_index":431,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["body('habilitada",{"_index":555,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":702,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["browse",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1251,"title":{},"body":{"index.html":{}}}],["busca",{"_index":739,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["buscar",{"_index":753,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["búsqueda",{"_index":1095,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cada",{"_index":232,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["cadena",{"_index":60,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["cambiarestadoencuesta",{"_index":362,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["cambiarestadoencuesta(id",{"_index":371,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["campo",{"_index":750,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["cantidad",{"_index":1183,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cantidad_respuestas",{"_index":791,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["cantidadrespuestas",{"_index":1176,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["carga",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["cascade",{"_index":316,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["case",{"_index":700,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["caso",{"_index":678,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["catch",{"_index":529,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["channel",{"_index":1324,"title":{},"body":{"index.html":{}}}],["check",{"_index":1287,"title":{},"body":{"index.html":{}}}],["clase",{"_index":43,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["class",{"_index":0,"title":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{},"overview.html":{}}}],["clave",{"_index":333,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["clicks",{"_index":1308,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1292,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_encuestasmodule",{"_index":560,"title":{},"body":{"modules/EncuestasModule.html":{},"overview.html":{}}}],["cluster_encuestasmodule_imports",{"_index":561,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["cluster_encuestasmodule_providers",{"_index":562,"title":{},"body":{"modules/EncuestasModule.html":{},"overview.html":{}}}],["cluster_opcionesmodule",{"_index":828,"title":{},"body":{"modules/OpcionesModule.html":{},"overview.html":{}}}],["cluster_opcionesmodule_providers",{"_index":829,"title":{},"body":{"modules/OpcionesModule.html":{},"overview.html":{}}}],["cluster_preguntasmodule",{"_index":913,"title":{},"body":{"modules/PreguntasModule.html":{},"overview.html":{}}}],["cluster_preguntasmodule_providers",{"_index":914,"title":{},"body":{"modules/PreguntasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule",{"_index":1059,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule_exports",{"_index":1060,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule_providers",{"_index":1061,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["codigo",{"_index":394,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["codigo_respuesta",{"_index":301,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigo_resultados",{"_index":343,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigo_resultados'})@exclude",{"_index":303,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigoparticipacion",{"_index":1077,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["codigoqr",{"_index":186,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["codigorespuesta",{"_index":247,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["codigoresultados",{"_index":248,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["codigotipo",{"_index":602,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["codigotipoenum",{"_index":448,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"miscellaneous/enumerations.html":{}}}],["codigotipoenum.respuesta",{"_index":497,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["codigotipoenum.resultados",{"_index":532,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["codigotipoenum})@isenum(codigotipoenum)@isnotempty",{"_index":764,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["codigovisualizacion",{"_index":1086,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["column",{"_index":312,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["column('int",{"_index":955,"title":{},"body":{"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["column({default",{"_index":308,"title":{},"body":{"entities/Encuesta.html":{}}}],["column({name",{"_index":300,"title":{},"body":{"entities/Encuesta.html":{}}}],["column({type",{"_index":861,"title":{},"body":{"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/RespuestaAbierta.html":{}}}],["columna",{"_index":332,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{}}}],["come",{"_index":1315,"title":{},"body":{"index.html":{}}}],["como",{"_index":224,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["compatibilidad",{"_index":1052,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["con",{"_index":37,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["condición",{"_index":1094,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["conexión",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["config/configuration",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.logger",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.logging",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.username",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configuraciones",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["configuración",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["configuration",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error",{"_index":673,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["console.error('error",{"_index":681,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["console.log",{"_index":1116,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["console.log('información",{"_index":1158,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["console.log('opciones",{"_index":1123,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["console.log('preguntas",{"_index":1119,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["console.warn",{"_index":666,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["const",{"_index":468,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["construcción",{"_index":687,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["constructor",{"_index":458,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"injectables/OpcionesService.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["constructor(encuestarepository",{"_index":590,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["constructor(opcionrepository",{"_index":836,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["constructor(preguntarepo",{"_index":921,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["constructor(private",{"_index":824,"title":{},"body":{"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["constructor(respuestarepository",{"_index":1073,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["construir",{"_index":1093,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["consulta",{"_index":487,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["consultas",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["conteo",{"_index":732,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["contienen",{"_index":578,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["contraseña",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["controlador",{"_index":456,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["controladores",{"_index":575,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["controller",{"_index":355,"title":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{},"coverage.html":{}}}],["controller('encuestas",{"_index":455,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["controller('preguntas",{"_index":901,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["controller('preguntas/:preguntaid/opciones",{"_index":823,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["controller('respuestas",{"_index":1042,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["controllers",{"_index":357,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["controllers/encuestas.controller",{"_index":564,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["controllers/opciones.controller",{"_index":833,"title":{},"body":{"modules/OpcionesModule.html":{}}}],["controllers/respuestas.controller",{"_index":1063,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["convertir",{"_index":1187,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["convierte",{"_index":903,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["copia",{"_index":634,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["correctamente",{"_index":747,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{}}}],["corta",{"_index":479,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["corto",{"_index":240,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["courses",{"_index":1330,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1193,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":466,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["creación",{"_index":632,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["creada",{"_index":48,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{}}}],["crear",{"_index":220,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta",{"_index":363,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta(dto",{"_index":377,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["crearopcion",{"_index":810,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["crearopcion(preguntaid",{"_index":812,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["create",{"_index":214,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["create.php?url=${encodeuricomponent(url",{"_index":664,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["createencuestadto",{"_index":183,"title":{"classes/CreateEncuestaDto.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["createencuestaresponsedto",{"_index":245,"title":{"classes/CreateEncuestaResponseDto.html":{}},"body":{"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"coverage.html":{}}}],["createopciondto",{"_index":265,"title":{"classes/CreateOpcionDto.html":{}},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"coverage.html":{}}}],["createpreguntadto",{"_index":193,"title":{"classes/CreatePreguntaDto.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["createquerybuilder('encuesta",{"_index":689,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["cuantas",{"_index":1175,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cuenta",{"_index":1174,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cuerpo",{"_index":556,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["cuántas",{"_index":803,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["código",{"_index":243,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["código'})@apiparam({name",{"_index":417,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["data",{"_index":217,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{}}}],["database",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":305,"title":{},"body":{"entities/Encuesta.html":{}}}],["datos",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["de",{"_index":40,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["debe",{"_index":1125,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["deben",{"_index":628,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["declaración",{"_index":574,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["decorador",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["decoradores",{"_index":321,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"controllers/OpcionesController.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{}}}],["deeper",{"_index":1326,"title":{},"body":{"index.html":{}}}],["default",{"_index":354,"title":{},"body":{"entities/Encuesta.html":{}}}],["define",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["definidos",{"_index":292,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["definir",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["del",{"_index":32,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["delete",{"_index":819,"title":{},"body":{"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{}}}],["delete(':id",{"_index":816,"title":{},"body":{"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{}}}],["dentro",{"_index":799,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["dependencies",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1278,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1297,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1288,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1307,"title":{},"body":{"index.html":{}}}],["depuración",{"_index":515,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["depuración'})@apiparam({name",{"_index":393,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["desactiva",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["desconocido",{"_index":683,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["description",{"_index":264,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"index.html":{},"properties.html":{}}}],["desde",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/RespuestasController.html":{}}}],["deshabilita",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{}}}],["deshabilitada",{"_index":746,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["deshabilitar",{"_index":352,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["detallada",{"_index":392,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["determinar",{"_index":748,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["development",{"_index":1264,"title":{},"body":{"index.html":{}}}],["devolverla",{"_index":348,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["devtools",{"_index":1338,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":677,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["diferente",{"_index":1182,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["dinámico",{"_index":642,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["disable",{"_index":522,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["discord",{"_index":1323,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":1150,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["dive",{"_index":1325,"title":{},"body":{"index.html":{}}}],["documenta",{"_index":221,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["documentar",{"_index":200,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["documentation",{"_index":1194,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":33,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["dto.codigo",{"_index":492,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dto.preguntas",{"_index":626,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["dto.tipo",{"_index":493,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dtos/create",{"_index":444,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["dtos/obtener",{"_index":446,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dtos/visualizar",{"_index":1088,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["e2e",{"_index":1273,"title":{},"body":{"index.html":{}}}],["each",{"_index":231,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["efficient",{"_index":1252,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1285,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":708,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ejemplo",{"_index":347,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["ejemplorespuesta",{"_index":543,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["el",{"_index":57,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["elegidas",{"_index":806,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["elemento",{"_index":230,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["elimina",{"_index":910,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["eliminada",{"_index":852,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{}}}],["eliminan",{"_index":938,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminar",{"_index":909,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["eliminaropcion",{"_index":811,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["eliminaropcion(id",{"_index":815,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["eliminarpregunta",{"_index":891,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["eliminarpregunta(id",{"_index":896,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["eliminarpreguntaconopciones",{"_index":920,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminarpreguntaconopciones(idpregunta",{"_index":929,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["en",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["encontrada",{"_index":423,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["encuentra",{"_index":710,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuesta",{"_index":216,"title":{"entities/Encuesta.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["encuesta'})@apiparam({name",{"_index":1014,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["encuesta'})@apiresponse({status",{"_index":380,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["encuesta.codigorespuesta",{"_index":542,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.codigoresultados",{"_index":1159,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuesta.dto",{"_index":445,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.dto.ts",{"_index":185,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["encuesta.dto.ts:10",{"_index":763,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["encuesta.dto.ts:15",{"_index":765,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["encuesta.dto.ts:18",{"_index":192,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.dto.ts:26",{"_index":197,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.dto.ts:31",{"_index":190,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.dto.ts:36",{"_index":189,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.enlaceparticipacion",{"_index":473,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["encuesta.entity",{"_index":863,"title":{},"body":{"entities/Pregunta.html":{}}}],["encuesta.habilitada",{"_index":743,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuesta.id",{"_index":500,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.nombre",{"_index":501,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.preguntas",{"_index":872,"title":{},"body":{"entities/Pregunta-1.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.preguntas.foreach((pregunta",{"_index":759,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.preguntas.map((pregunta",{"_index":502,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["encuesta.preguntas.sort((a",{"_index":755,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuesta.respuestas",{"_index":724,"title":{},"body":{"injectables/EncuestasService.html":{},"entities/Respuesta-1.html":{}}}],["encuesta.respuestas)@joincolumn({name",{"_index":966,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["encuesta.respuestas.length",{"_index":738,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada",{"_index":638,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.codigorespuesta",{"_index":660,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.codigoresultados",{"_index":661,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.id",{"_index":659,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestaid",{"_index":1081,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuestarepository",{"_index":594,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["encuestas",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"modules/RespuestasModule.html":{}}}],["encuestas/dtos/actualizar",{"_index":900,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["encuestas/dtos/create",{"_index":822,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["encuestas/entities/encuesta.entity",{"_index":881,"title":{},"body":{"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}}}],["encuestas/entities/opcion.entity",{"_index":831,"title":{},"body":{"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta-1.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaOpcion.html":{}}}],["encuestas/entities/pregunta.entity",{"_index":832,"title":{},"body":{"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{}}}],["encuestas/enums/tipos",{"_index":880,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["encuestascontroller",{"_index":356,"title":{"controllers/EncuestasController.html":{}},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"coverage.html":{}}}],["encuestasmodule",{"_index":79,"title":{"modules/EncuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["encuestasservice",{"_index":440,"title":{"injectables/EncuestasService.html":{}},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"coverage.html":{},"overview.html":{}}}],["endpoint",{"_index":465,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["enlace",{"_index":239,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["enlacecorto",{"_index":187,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["enlaceparticipacion",{"_index":249,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["enlacevisualizacion",{"_index":250,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"injectables/EncuestasService.html":{}}}],["ensure",{"_index":1283,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1342,"title":{},"body":{"index.html":{}}}],["entidad",{"_index":324,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["entidades",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["entities",{"_index":295,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"overview.html":{}}}],["entities/encuesta.entity",{"_index":447,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{}}}],["entities/opcion.entity",{"_index":569,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["entities/pregunta.entity",{"_index":567,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["entities/respuesta",{"_index":1066,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["entities/respuesta.entity",{"_index":1065,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["entity",{"_index":294,"title":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"coverage.html":{}}}],["entity('respuestas",{"_index":964,"title":{},"body":{"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}}}],["entity('respuestas_abiertas",{"_index":985,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["entity('respuestas_opciones",{"_index":993,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["entorno",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":36,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{}}}],["enumerador",{"_index":287,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["enumerations",{"_index":1236,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/codigo",{"_index":449,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["enums/tipos",{"_index":34,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Pregunta.html":{}}}],["env",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":667,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["error.message",{"_index":676,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["es",{"_index":54,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"injectables/RespuestasService.html":{}}}],["eslint",{"_index":521,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["eslint/no",{"_index":526,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["especifica",{"_index":866,"title":{},"body":{"entities/Pregunta.html":{}}}],["específica",{"_index":1044,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["específico",{"_index":686,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["esquema",{"_index":1181,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["est",{"_index":222,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["esta",{"_index":52,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["estado",{"_index":742,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["este",{"_index":571,"title":{},"body":{"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["esto",{"_index":1179,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["estructura",{"_index":411,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["están",{"_index":1109,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["example",{"_index":398,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"index.html":{}}}],["excepción",{"_index":712,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["exclude",{"_index":328,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["excluir",{"_index":329,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["excluye",{"_index":344,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["existe",{"_index":932,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["exitosamente",{"_index":382,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["exitosamente'})@apiresponse({status",{"_index":421,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["experience",{"_index":1328,"title":{},"body":{"index.html":{}}}],["explicitamente",{"_index":948,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["explícitamente",{"_index":499,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["exporta",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["exportación",{"_index":579,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["exports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["express",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["extra",{"_index":351,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["extrae",{"_index":904,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["falla",{"_index":531,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["false",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"classes/CreatePreguntaDto.html":{},"entities/RespuestaAbierta.html":{}}}],["false})@isarray()@isoptional()@validatenested({each",{"_index":281,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["faltan",{"_index":1126,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["faltantes",{"_index":1120,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["fast",{"_index":1301,"title":{},"body":{"index.html":{}}}],["features",{"_index":1311,"title":{},"body":{"index.html":{}}}],["fechaactualizacion",{"_index":297,"title":{},"body":{"entities/Encuesta.html":{}}}],["fetch",{"_index":616,"title":{},"body":{"injectables/EncuestasService.html":{},"dependencies.html":{}}}],["few",{"_index":1303,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["filter((ra",{"_index":727,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["filter((ro",{"_index":734,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["filtra",{"_index":696,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["fina",{"_index":1186,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["flatmap((r",{"_index":725,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["focus",{"_index":1310,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1346,"title":{},"body":{"index.html":{}}}],["formato",{"_index":651,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["foránea",{"_index":783,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["framework",{"_index":1250,"title":{},"body":{"index.html":{}}}],["fue",{"_index":745,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["fueron",{"_index":805,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["full",{"_index":1341,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":350,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["función",{"_index":611,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["function",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1244,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1306,"title":{},"body":{"index.html":{}}}],["genera",{"_index":635,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generado",{"_index":241,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{}}}],["generando",{"_index":682,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generar",{"_index":471,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["generarcodigoqr",{"_index":587,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generarcodigoqr(texto",{"_index":598,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generarenlacecorto",{"_index":588,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generarenlacecorto(url",{"_index":600,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["get(':id",{"_index":386,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get(':id/resultados",{"_index":550,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get(':id/resultados')@apioperation({summary",{"_index":416,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('debug/:codigo",{"_index":514,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('debug/:codigo')@apioperation({summary",{"_index":389,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('estructura/:codigo",{"_index":540,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('estructura/:codigo')@apioperation({summary",{"_index":410,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('participar/:codigo",{"_index":512,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('participar/:codigo')@apioperation({summary",{"_index":407,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('participar/:id/:codigo",{"_index":494,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('participar/:id/:codigo')@apioperation({summary",{"_index":402,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('participar/:id/:tokenparticipacion",{"_index":1009,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["get('resultados/:codigo",{"_index":536,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('resultados/:codigo')@apioperation({summary",{"_index":427,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('resultados/:tokenvisualizacion",{"_index":1053,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["get('resultados/:tokenvisualizacion')@apioperation({summary",{"_index":1028,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["getting",{"_index":1246,"title":{"index.html":{}},"body":{}}],["global",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["globalmente",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1333,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1356,"title":{},"body":{"index.html":{}}}],["guarda",{"_index":637,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["ha",{"_index":1091,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["habilita",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{}}}],["habilitada",{"_index":298,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["habilitar/deshabilitar",{"_index":554,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["hace",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["hands",{"_index":1327,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1316,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1331,"title":{},"body":{"index.html":{}}}],["here",{"_index":1364,"title":{},"body":{"index.html":{}}}],["host",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:3000",{"_index":646,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["http://tinyurl.com/api",{"_index":663,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["httpcode",{"_index":1035,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["httpcode(httpstatus.created",{"_index":1045,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["https://nestjs.com",{"_index":1370,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":1036,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["id",{"_index":251,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["id_encuesta",{"_index":867,"title":{},"body":{"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"injectables/RespuestasService.html":{}}}],["id_encuesta'})@exclude",{"_index":854,"title":{},"body":{"entities/Pregunta.html":{}}}],["id_opcion",{"_index":987,"title":{},"body":{"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{}}}],["id_pregunta",{"_index":545,"title":{},"body":{"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["id_pregunta'})@exclude",{"_index":775,"title":{},"body":{"entities/Opcion.html":{}}}],["id_respuesta",{"_index":975,"title":{},"body":{"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{}}}],["identificar",{"_index":769,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["identifier",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["idopcion",{"_index":1148,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["idpregunta",{"_index":928,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["ids",{"_index":412,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["ignora",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreenvfile",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["import",{"_index":23,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["importa",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["importación",{"_index":320,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["imprimir",{"_index":1122,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["incluir",{"_index":498,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indica",{"_index":50,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"entities/Encuesta.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["información",{"_index":391,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["information",{"_index":1290,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1313,"title":{},"body":{"index.html":{}}}],["inicializar",{"_index":1167,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["inject",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":583,"title":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["injectables",{"_index":584,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"overview.html":{}}}],["injectrepository",{"_index":609,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(encuesta",{"_index":621,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(opcion",{"_index":842,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(pregunta",{"_index":843,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(respuesta",{"_index":622,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(respuestaabierta",{"_index":1089,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["injectrepository(respuestaopcion",{"_index":1090,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["innerjoinandselect('encuesta.preguntas",{"_index":691,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["insert",{"_index":337,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["insertar",{"_index":339,"title":{},"body":{"entities/Encuesta.html":{}}}],["install",{"_index":1305,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1262,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":675,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["instancia",{"_index":236,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["integración",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["intentar",{"_index":517,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["interact",{"_index":1334,"title":{},"body":{"index.html":{}}}],["invalido",{"_index":1101,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["inválido",{"_index":424,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["inválido'})@apiresponse({status",{"_index":1018,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["inválidos",{"_index":1020,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["inyección",{"_index":461,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["inyecta",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["inyectable",{"_index":620,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["inyectar",{"_index":607,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["isarray",{"_index":210,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isarray()@validatenested({each",{"_index":945,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["isenum",{"_index":26,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["isenum(codigotipoenum",{"_index":770,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["isenum(tiposrespuestaenum",{"_index":63,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["isglobal",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":211,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isnumber",{"_index":271,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isnumber()@isnotempty",{"_index":994,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isoptional",{"_index":24,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isoptional()@isarray()@isnumber",{"_index":996,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isoptional()@isenum(tiposrespuestaenum",{"_index":21,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["isoptional()@isstring",{"_index":17,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isstring",{"_index":25,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isstring()@isnotempty()@type(undefined",{"_index":999,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isuuid",{"_index":766,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["isuuid('4",{"_index":767,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["itera",{"_index":1160,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["job",{"_index":1349,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1351,"title":{},"body":{"index.html":{}}}],["join",{"_index":1362,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":778,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["json.stringify(opcionesdisponibles",{"_index":1154,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["junto",{"_index":911,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["kamil",{"_index":1367,"title":{},"body":{"index.html":{}}}],["key",{"_index":1280,"title":{},"body":{"index.html":{}}}],["la",{"_index":62,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["lanza",{"_index":711,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["las",{"_index":30,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["le",{"_index":624,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["learn",{"_index":1319,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('pregunta.opciones",{"_index":693,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["legend",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["license",{"_index":1373,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1354,"title":{},"body":{"index.html":{}}}],["line",{"_index":524,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["linkedin",{"_index":1348,"title":{},"body":{"index.html":{}}}],["lista",{"_index":237,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["listas",{"_index":1168,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["llama",{"_index":489,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["lo",{"_index":902,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["load",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":1291,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1344,"title":{},"body":{"index.html":{}}}],["los",{"_index":38,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{}}}],["lógica",{"_index":565,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["makes",{"_index":1299,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1312,"title":{},"body":{"index.html":{}}}],["manejar",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["manejarán",{"_index":576,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["manytoone",{"_index":779,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["manytoone(undefined",{"_index":871,"title":{},"body":{"entities/Pregunta-1.html":{},"entities/Respuesta-1.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":774,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["map((ra",{"_index":729,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["marca",{"_index":619,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["matching",{"_index":67,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":1295,"title":{},"body":{"index.html":{}}}],["mayor",{"_index":1051,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["menos",{"_index":229,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["mensaje",{"_index":744,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["message",{"_index":538,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["metadata",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":360,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["mica",{"_index":353,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["miscellaneous",{"_index":1235,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":1353,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1267,"title":{},"body":{"index.html":{}}}],["module",{"_index":68,"title":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["modules",{"_index":70,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/encuestas/encuestas.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/opciones/opciones.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/preguntas/preguntas.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1289,"title":{},"body":{"index.html":{}}}],["muchos",{"_index":342,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["myśliwiec",{"_index":1368,"title":{},"body":{"index.html":{}}}],["método",{"_index":623,"title":{},"body":{"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["módulo",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["módulos",{"_index":429,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["múltiple",{"_index":627,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["name",{"_index":331,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["necesarios",{"_index":430,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["need",{"_index":1339,"title":{},"body":{"index.html":{}}}],["negocio",{"_index":566,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["nest",{"_index":1257,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1372,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"index.html":{}}}],["nestjs/common",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":199,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["new",{"_index":534,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["next",{"_index":523,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["nico",{"_index":636,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["node",{"_index":617,"title":{},"body":{"injectables/EncuestasService.html":{},"dependencies.html":{}}}],["node.js",{"_index":1249,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["notfoundexception",{"_index":615,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["notfoundexception('encuesta",{"_index":721,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["notfoundexception('opción",{"_index":850,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["notfoundexception('pregunta",{"_index":845,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{}}}],["npm",{"_index":1261,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":379,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["nuevo",{"_index":61,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["nuevos",{"_index":907,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["nullable",{"_index":982,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["number",{"_index":262,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["numero",{"_index":267,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["número",{"_index":273,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["o",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["object",{"_index":219,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["object.assign(pregunta",{"_index":933,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["objeto",{"_index":233,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["objetos",{"_index":206,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["obligatorias",{"_index":1108,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["obtener",{"_index":390,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["obtenerencuesta",{"_index":364,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerencuesta(id",{"_index":384,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerencuestadebug",{"_index":365,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestadebug(@param('codigo",{"_index":516,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestadebug(codigo",{"_index":388,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestadto",{"_index":385,"title":{"classes/ObtenerEncuestaDto.html":{}},"body":{"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["obtenerencuestaparaparticipacion",{"_index":1003,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["obtenerencuestaparaparticipacion(id",{"_index":1007,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["obtenerencuestaparaparticipar",{"_index":366,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestaparaparticipar(id",{"_index":401,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestaparaparticiparlegacy",{"_index":367,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestaparaparticiparlegacy(codigo",{"_index":406,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerencuestaporcodigo",{"_index":589,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["obtenerencuestaporcodigo(codigo",{"_index":604,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["obtenerestructuraencuesta",{"_index":368,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerestructuraencuesta(codigo",{"_index":409,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerresultados",{"_index":369,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerresultados(id",{"_index":415,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerresultadosencuesta",{"_index":370,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenerresultadosencuesta(codigo",{"_index":426,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtenida",{"_index":1058,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["obtenidas",{"_index":1032,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["obtenidos",{"_index":420,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["obtiene",{"_index":483,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["offer",{"_index":1350,"title":{},"body":{"index.html":{}}}],["official",{"_index":1296,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":323,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}}}],["onetomany(undefined",{"_index":314,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}}}],["opcion",{"_index":568,"title":{"entities/Opcion.html":{}},"body":{"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["opcion.dto",{"_index":289,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["opcion.dto.ts",{"_index":266,"title":{},"body":{"classes/CreateOpcionDto.html":{},"coverage.html":{}}}],["opcion.dto.ts:14",{"_index":269,"title":{},"body":{"classes/CreateOpcionDto.html":{}}}],["opcion.dto.ts:9",{"_index":270,"title":{},"body":{"classes/CreateOpcionDto.html":{}}}],["opcion.entity",{"_index":782,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["opcion.entity.ts",{"_index":986,"title":{},"body":{"entities/RespuestaOpcion.html":{},"coverage.html":{}}}],["opcion.entity.ts:14",{"_index":988,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:17",{"_index":990,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:20",{"_index":989,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:24",{"_index":992,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:28",{"_index":991,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.id",{"_index":509,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["opcion.id).length",{"_index":736,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["opcion.numero",{"_index":510,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["opcion.pregunta",{"_index":858,"title":{},"body":{"entities/Pregunta.html":{},"entities/Pregunta-1.html":{}}}],["opcion.texto",{"_index":511,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["opcion_multiple_seleccion_multiple",{"_index":950,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"miscellaneous/enumerations.html":{}}}],["opcion_multiple_seleccion_simple",{"_index":949,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"miscellaneous/enumerations.html":{}}}],["opcional",{"_index":55,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["opcionalmente",{"_index":1100,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opcionconrespuestasdto",{"_index":788,"title":{"classes/OpcionConRespuestasDto.html":{}},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["opciones",{"_index":277,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["opcionesconteo",{"_index":731,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["opcionescontroller",{"_index":807,"title":{"controllers/OpcionesController.html":{}},"body":{"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"coverage.html":{}}}],["opcionesdisponibles",{"_index":1151,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opcionesmodule",{"_index":80,"title":{"modules/OpcionesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpcionesModule.html":{},"modules.html":{},"overview.html":{}}}],["opcionesservice",{"_index":820,"title":{"injectables/OpcionesService.html":{}},"body":{"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"coverage.html":{},"overview.html":{}}}],["opcionguardada",{"_index":847,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["opcionrepo",{"_index":922,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["opcionrepository",{"_index":839,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/RespuestasService.html":{}}}],["opción",{"_index":272,"title":{},"body":{"classes/CreateOpcionDto.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"injectables/OpcionesService.html":{},"modules/PreguntasModule.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["open",{"_index":1355,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["orden",{"_index":275,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["ordena",{"_index":704,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ordenar",{"_index":754,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["original",{"_index":671,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["otros",{"_index":582,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["out",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1377,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1113,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["p.id",{"_index":1118,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["p.numero).join",{"_index":1127,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["package",{"_index":1210,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":29,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["param",{"_index":432,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["param('codigo",{"_index":496,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["param('id",{"_index":482,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["param('preguntaid",{"_index":825,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["param('tokenparticipacion",{"_index":1047,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["param('tokenvisualizacion",{"_index":1055,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["parameters",{"_index":374,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["params",{"_index":488,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["parseintpipe",{"_index":818,"title":{},"body":{"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["part",{"_index":1340,"title":{},"body":{"index.html":{}}}],["participacion",{"_index":1099,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["participación",{"_index":397,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["participación'})@apiparam({name",{"_index":403,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["participado",{"_index":1092,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["participar",{"_index":254,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["parámetro",{"_index":484,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["parámetros",{"_index":486,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["password",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["pasándole",{"_index":906,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["patch",{"_index":433,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["patch(':id",{"_index":894,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["patch(':id/habilitar",{"_index":372,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["permite",{"_index":338,"title":{},"body":{"entities/Encuesta.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["permitido",{"_index":293,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Pregunta.html":{}}}],["permitidos",{"_index":288,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["personalizada",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["personalizado",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["pertenece",{"_index":785,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/RespuestasService.html":{}}}],["petición",{"_index":905,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["pg",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":1294,"title":{},"body":{"index.html":{}}}],["please",{"_index":1322,"title":{},"body":{"index.html":{}}}],["por",{"_index":346,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["port",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["posición",{"_index":276,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["possible",{"_index":1286,"title":{},"body":{"index.html":{}}}],["post",{"_index":434,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/RespuestasController.html":{}}}],["post(':id/:tokenparticipacion",{"_index":1043,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["post(':id/:tokenparticipacion')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1012,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["post('participar/:id/:tokenparticipacion",{"_index":1049,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["post('participar/:id/:tokenparticipacion')@httpcode(httpstatus.created)@apioperation({summary",{"_index":1023,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["post()@apioperation({summary",{"_index":378,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["postgres",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":359,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["pregunta",{"_index":46,"title":{"entities/Pregunta.html":{},"entities/Pregunta-1.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["pregunta.dto",{"_index":215,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["pregunta.dto.ts",{"_index":7,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["pregunta.dto.ts:12",{"_index":22,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["pregunta.dto.ts:20",{"_index":278,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:25",{"_index":283,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:30",{"_index":286,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:37",{"_index":282,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:8",{"_index":19,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["pregunta.encuesta",{"_index":315,"title":{},"body":{"entities/Encuesta.html":{}}}],["pregunta.entity",{"_index":326,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{}}}],["pregunta.id",{"_index":503,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.numero",{"_index":504,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.opciones",{"_index":507,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.opciones.foreach((opcion",{"_index":1124,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pregunta.opciones.length",{"_index":547,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.opciones.map((opcion",{"_index":508,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.opciones.sort((a",{"_index":760,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["pregunta.opciones?.length",{"_index":630,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["pregunta.opciones[0].id",{"_index":549,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["pregunta.texto",{"_index":505,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.tipo",{"_index":506,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas",{"_index":1162,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.id",{"_index":1163,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.numero",{"_index":1164,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.opciones",{"_index":1169,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.opciones.push",{"_index":1184,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.respuestas_abiertas",{"_index":1170,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.texto",{"_index":1165,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.tipo",{"_index":1166,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestasdto",{"_index":798,"title":{"classes/PreguntaConRespuestasDto.html":{}},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["preguntaid",{"_index":814,"title":{},"body":{"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{}}}],["preguntaopcion",{"_index":694,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["preguntarepo",{"_index":924,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["preguntarepository",{"_index":837,"title":{},"body":{"injectables/OpcionesService.html":{},"injectables/RespuestasService.html":{}}}],["preguntas",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["preguntas.opciones",{"_index":717,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["preguntas/:preguntaid/opciones",{"_index":809,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["preguntas/controllers/preguntas.controller",{"_index":917,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["preguntas/services/preguntas.service",{"_index":916,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["preguntascontroller",{"_index":888,"title":{"controllers/PreguntasController.html":{}},"body":{"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"coverage.html":{}}}],["preguntasfaltantes",{"_index":1111,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasfaltantes.length",{"_index":1115,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasfaltantes.map((p",{"_index":1121,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasmodule",{"_index":81,"title":{"modules/PreguntasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PreguntasModule.html":{},"modules.html":{},"overview.html":{}}}],["preguntasobligatorias",{"_index":1103,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasobligatorias.filter",{"_index":1112,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasobligatorias.map((p",{"_index":1117,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasrespondidas",{"_index":1104,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasrespondidas.includes(p.id",{"_index":1114,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntasservice",{"_index":898,"title":{"injectables/PreguntasService.html":{}},"body":{"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"coverage.html":{},"overview.html":{}}}],["primaria",{"_index":334,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["primarygeneratedcolumn",{"_index":310,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["primero",{"_index":518,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["principal",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":459,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["procesar",{"_index":722,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["process.env.app_url",{"_index":645,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["process.env.global_prefix",{"_index":648,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["process.env.node_env",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["producción",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":1248,"title":{},"body":{"index.html":{}}}],["project",{"_index":1259,"title":{},"body":{"index.html":{}}}],["promise",{"_index":376,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{},"properties.html":{}}}],["propiedad",{"_index":53,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["propiedades",{"_index":31,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["proporciona",{"_index":1096,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["proporcionado",{"_index":698,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["proveedores",{"_index":577,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["pueda",{"_index":580,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["puede",{"_index":395,"title":{},"body":{"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["puerto",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"injectables/EncuestasService.html":{}}}],["qr",{"_index":244,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["qrcode",{"_index":618,"title":{},"body":{"injectables/EncuestasService.html":{},"dependencies.html":{}}}],["qrcode.todataurl(texto",{"_index":679,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["qu",{"_index":749,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["que",{"_index":51,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["query",{"_index":435,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["query('codigo",{"_index":551,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["query.addorderby('preguntaopcion.numero",{"_index":707,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.andwhere('encuesta.codigorespuesta",{"_index":701,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.andwhere('encuesta.codigoresultados",{"_index":703,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.getone",{"_index":709,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.orderby('pregunta.numero",{"_index":705,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["questions",{"_index":1320,"title":{},"body":{"index.html":{}}}],["r",{"_index":786,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/RespuestasService.html":{}}}],["r.id_pregunta",{"_index":1106,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["r.opcion",{"_index":787,"title":{},"body":{"entities/Opcion.html":{}}}],["r.pregunta",{"_index":868,"title":{},"body":{"entities/Pregunta.html":{}}}],["r.respuestasabiertas",{"_index":726,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["r.respuestasopciones",{"_index":733,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["r.texto",{"_index":1173,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["ra",{"_index":957,"title":{},"body":{"entities/Respuesta.html":{}}}],["ra.id_pregunta",{"_index":728,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ra.respuesta",{"_index":958,"title":{},"body":{"entities/Respuesta.html":{}}}],["ra.texto",{"_index":730,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["read",{"_index":1363,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":460,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/OpcionesController.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["ready",{"_index":1277,"title":{},"body":{"index.html":{}}}],["real",{"_index":1335,"title":{},"body":{"index.html":{}}}],["recibe",{"_index":1046,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["recomendado",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["reemplaza",{"_index":477,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["referencia",{"_index":784,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["reflect",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["registarrespuestasdto",{"_index":1080,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registarrespuestasdto.respuestas",{"_index":1133,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registarrespuestasdto.respuestas.map",{"_index":1105,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registradas",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["registrar",{"_index":1013,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestas",{"_index":1004,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["registrarrespuestas(codigoparticipacion",{"_index":1079,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestas(id",{"_index":1011,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestasalternativa",{"_index":1005,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestasalternativa(id",{"_index":1022,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestasdto",{"_index":941,"title":{"classes/RegistrarRespuestasDto.html":{}},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["registrarrespuestasdto})@apiresponse({status",{"_index":1017,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registro",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["relacionada",{"_index":325,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["relacionadas",{"_index":340,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["relación",{"_index":341,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["relations",{"_index":716,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["relevantes",{"_index":658,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["repositorio",{"_index":610,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["repositorios",{"_index":608,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["repository",{"_index":591,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"index.html":{}}}],["representa",{"_index":274,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"modules/EncuestasModule.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["requerida",{"_index":1138,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["requerido",{"_index":552,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["required",{"_index":280,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["requiring",{"_index":1302,"title":{},"body":{"index.html":{}}}],["reset",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["resources",{"_index":1314,"title":{},"body":{"index.html":{}}}],["responder",{"_index":541,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/RespuestasService.html":{}}}],["responder'})@apiparam({name",{"_index":413,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["respondidas",{"_index":1110,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["response",{"_index":662,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["response.dto",{"_index":451,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["response.dto.ts",{"_index":246,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":258,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:14",{"_index":260,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:17",{"_index":261,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:20",{"_index":259,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:23",{"_index":253,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:5",{"_index":263,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.dto.ts:8",{"_index":255,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{}}}],["response.ok",{"_index":665,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["response.statustext",{"_index":669,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["response.text",{"_index":672,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["respuesta",{"_index":41,"title":{"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["respuesta.encuesta",{"_index":318,"title":{},"body":{"entities/Encuesta.html":{}}}],["respuesta.entity",{"_index":984,"title":{},"body":{"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["respuesta.enum",{"_index":35,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuesta.enum.ts",{"_index":1240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["respuestaabierta",{"_index":864,"title":{"entities/RespuestaAbierta.html":{}},"body":{"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestaabierta.respuesta",{"_index":970,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["respuestaabiertarepository",{"_index":1074,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaguardada",{"_index":1130,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaguardada.id",{"_index":1140,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaopcion",{"_index":780,"title":{"entities/RespuestaOpcion.html":{}},"body":{"entities/Opcion.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestaopcion.respuesta",{"_index":972,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["respuestaopciones",{"_index":1067,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["respuestaopcionrepository",{"_index":1075,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta",{"_index":1132,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.id_pregunta",{"_index":1135,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.opciones",{"_index":1142,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.opciones.length",{"_index":1143,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.texto",{"_index":1137,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.tipo",{"_index":1136,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapreguntadto",{"_index":944,"title":{"classes/RespuestaPreguntaDto.html":{}},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"coverage.html":{}}}],["respuestarepository",{"_index":592,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["respuestas",{"_index":299,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto",{"_index":1038,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["respuestas.dto.ts",{"_index":943,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"coverage.html":{}}}],["respuestas.dto.ts:14",{"_index":995,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:19",{"_index":1000,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:26",{"_index":998,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:32",{"_index":997,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:40",{"_index":947,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["respuestas.dtos",{"_index":454,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["respuestas.dtos.ts",{"_index":790,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["respuestas.dtos.ts:12",{"_index":883,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:13",{"_index":884,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:14",{"_index":886,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:15",{"_index":887,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:16",{"_index":885,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:17",{"_index":882,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dtos.ts:25",{"_index":793,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dtos.ts:26",{"_index":795,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dtos.ts:27",{"_index":794,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dtos.ts:28",{"_index":792,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dtos.ts:4",{"_index":1190,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dtos.ts:5",{"_index":1191,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dtos.ts:6",{"_index":1188,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dtos.ts:7",{"_index":1189,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dtos.ts:8",{"_index":1192,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.respuestasabiertas",{"_index":718,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["respuestas.respuestasopciones",{"_index":719,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["respuestas.respuestasopciones.opcion",{"_index":720,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["respuestas/dtos/visualizar",{"_index":453,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["respuestas/entities/respuesta",{"_index":963,"title":{},"body":{"entities/Respuesta.html":{}}}],["respuestas/entities/respuesta.entity",{"_index":327,"title":{},"body":{"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{}}}],["respuestas/respuestas.module",{"_index":570,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["respuestas/services/respuestas.service",{"_index":443,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["respuestas_abiertas",{"_index":800,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuestasabiertas",{"_index":869,"title":{},"body":{"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"injectables/RespuestasService.html":{}}}],["respuestasabiertas.map",{"_index":1172,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestascontroller",{"_index":1001,"title":{"controllers/RespuestasController.html":{}},"body":{"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"coverage.html":{}}}],["respuestasmodule",{"_index":82,"title":{"modules/RespuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/RespuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["respuestasopciones",{"_index":952,"title":{},"body":{"entities/Respuesta.html":{},"entities/Respuesta-1.html":{}}}],["respuestasservice",{"_index":442,"title":{"injectables/RespuestasService.html":{}},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"overview.html":{}}}],["respuestastexto",{"_index":723,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["resultado",{"_index":520,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["resultado.preguntas.push(preguntaconrespuestas",{"_index":1185,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["resultados",{"_index":257,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"miscellaneous/enumerations.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retorna",{"_index":490,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["retornar",{"_index":684,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["return",{"_index":475,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["returns",{"_index":375,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["ro",{"_index":960,"title":{},"body":{"entities/Respuesta.html":{}}}],["ro.opcion?.id",{"_index":735,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ro.respuesta",{"_index":961,"title":{},"body":{"entities/Respuesta.html":{}}}],["run",{"_index":1263,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1284,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":1024,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["rutas",{"_index":457,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["rxjs",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["saber",{"_index":558,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["scalable",{"_index":1253,"title":{},"body":{"index.html":{}}}],["se",{"_index":476,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["sea",{"_index":59,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["según",{"_index":234,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{}}}],["seleccion",{"_index":1147,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["seleccionada",{"_index":1144,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["select",{"_index":1153,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["ser",{"_index":396,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"classes/ObtenerEncuestaDto.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["serialización",{"_index":330,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["serializar",{"_index":345,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["server",{"_index":1254,"title":{},"body":{"index.html":{}}}],["services/encuestas.service",{"_index":441,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{}}}],["services/opciones.service",{"_index":821,"title":{},"body":{"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{}}}],["services/preguntas.service",{"_index":899,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["services/respuestas.service",{"_index":1064,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["servicio",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["servicios",{"_index":462,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["setup",{"_index":1260,"title":{},"body":{"index.html":{}}}],["shortid",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["si",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["side",{"_index":1255,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1304,"title":{},"body":{"index.html":{}}}],["sincronización",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["sino",{"_index":1102,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["sobre",{"_index":1161,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["solicitud",{"_index":557,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["solo",{"_index":1146,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"modules/OpcionesModule.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"index.html":{}}}],["sponsors",{"_index":1358,"title":{},"body":{"index.html":{}}}],["src/.../codigo",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tipos",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts",{"_index":358,"title":{},"body":{"controllers/EncuestasController.html":{},"coverage.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:123",{"_index":408,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:161",{"_index":400,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:227",{"_index":428,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:244",{"_index":414,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:308",{"_index":425,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:319",{"_index":373,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:40",{"_index":383,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:62",{"_index":387,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:85",{"_index":405,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/dtos/actualizar",{"_index":6,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"coverage.html":{}}}],["src/modules/encuestas/dtos/create",{"_index":184,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/encuestas/dtos/obtener",{"_index":761,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["src/modules/encuestas/encuestas.module.ts",{"_index":563,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["src/modules/encuestas/entities/encuesta.entity",{"_index":1068,"title":{},"body":{"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts",{"_index":296,"title":{},"body":{"entities/Encuesta.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:13",{"_index":311,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:16",{"_index":313,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:17",{"_index":306,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:21",{"_index":317,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:24",{"_index":302,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:28",{"_index":304,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:32",{"_index":309,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:35",{"_index":319,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/opcion.entity",{"_index":1070,"title":{},"body":{"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts",{"_index":771,"title":{},"body":{"entities/Opcion.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:19",{"_index":772,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:22",{"_index":777,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:25",{"_index":773,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:30",{"_index":776,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/pregunta.entity",{"_index":1069,"title":{},"body":{"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts",{"_index":853,"title":{},"body":{"entities/Pregunta.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:23",{"_index":856,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:26",{"_index":857,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:29",{"_index":860,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:36",{"_index":862,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:41",{"_index":855,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:44",{"_index":859,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts",{"_index":951,"title":{},"body":{"entities/Respuesta.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts:16",{"_index":954,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts:19",{"_index":956,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts:23",{"_index":953,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts:26",{"_index":959,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/encuestas/entities/respuesta.entity.ts:29",{"_index":962,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/encuestas/enums/codigo",{"_index":1241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/encuestas/enums/tipos",{"_index":796,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts",{"_index":585,"title":{},"body":{"injectables/EncuestasService.html":{},"coverage.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:100",{"_index":601,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:121",{"_index":599,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:135",{"_index":603,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:173",{"_index":606,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:22",{"_index":593,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:232",{"_index":596,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:255",{"_index":605,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:32",{"_index":597,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/opciones/controllers/opciones.controller.ts",{"_index":808,"title":{},"body":{"controllers/OpcionesController.html":{},"coverage.html":{}}}],["src/modules/opciones/controllers/opciones.controller.ts:17",{"_index":813,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["src/modules/opciones/controllers/opciones.controller.ts:25",{"_index":817,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["src/modules/opciones/opciones.module.ts",{"_index":830,"title":{},"body":{"modules/OpcionesModule.html":{}}}],["src/modules/opciones/services/opciones.service.ts",{"_index":835,"title":{},"body":{"injectables/OpcionesService.html":{},"coverage.html":{}}}],["src/modules/opciones/services/opciones.service.ts:17",{"_index":840,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["src/modules/opciones/services/opciones.service.ts:41",{"_index":841,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["src/modules/opciones/services/opciones.service.ts:9",{"_index":838,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts",{"_index":889,"title":{},"body":{"controllers/PreguntasController.html":{},"coverage.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts:20",{"_index":895,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts:29",{"_index":897,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts",{"_index":870,"title":{},"body":{"entities/Pregunta-1.html":{},"coverage.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:15",{"_index":874,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:18",{"_index":875,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:21",{"_index":877,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:28",{"_index":879,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:31",{"_index":873,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/entities/pregunta.entity.ts:34",{"_index":876,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["src/modules/preguntas/enums/tipos",{"_index":1243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/preguntas/preguntas.module.ts",{"_index":915,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts",{"_index":919,"title":{},"body":{"injectables/PreguntasService.html":{},"coverage.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:15",{"_index":923,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:26",{"_index":927,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:40",{"_index":930,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts",{"_index":1002,"title":{},"body":{"controllers/RespuestasController.html":{},"coverage.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:124",{"_index":1034,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:132",{"_index":1010,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:54",{"_index":1021,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:95",{"_index":1026,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/dtos/registrar",{"_index":942,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/dtos/visualizar",{"_index":789,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/RespuestasController.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta",{"_index":781,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta.entity",{"_index":1087,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts",{"_index":965,"title":{},"body":{"entities/Respuesta-1.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:16",{"_index":968,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:19",{"_index":969,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:23",{"_index":967,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:29",{"_index":971,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:35",{"_index":973,"title":{},"body":{"entities/Respuesta-1.html":{}}}],["src/modules/respuestas/respuestas.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/respuestas/respuestas.module.ts",{"_index":1062,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["src/modules/respuestas/services/respuestas.service",{"_index":1037,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts",{"_index":1072,"title":{},"body":{"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:195",{"_index":1085,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:21",{"_index":1076,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:278",{"_index":1078,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:37",{"_index":1082,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["start",{"_index":1265,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1268,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1269,"title":{},"body":{"index.html":{}}}],["started",{"_index":1247,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1258,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":464,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["stay",{"_index":1343,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1281,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1300,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["su",{"_index":481,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{}}}],["summary",{"_index":463,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["support",{"_index":1321,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sus",{"_index":797,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["svg",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":201,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["switch",{"_index":699,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["synchronize",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["tabla",{"_index":336,"title":{},"body":{"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["table",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1282,"title":{},"body":{"index.html":{}}}],["tener",{"_index":629,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["tenga",{"_index":227,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"injectables/EncuestasService.html":{}}}],["test",{"_index":1272,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1275,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1274,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1270,"title":{},"body":{"index.html":{}}}],["text",{"_index":981,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["texto",{"_index":11,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["thanks",{"_index":1357,"title":{},"body":{"index.html":{}}}],["this.encuestarepository",{"_index":688,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestarepository.create",{"_index":633,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestarepository.findone",{"_index":715,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["this.encuestarepository.save(encuesta",{"_index":639,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestasservice.actualizarestadoencuesta(id",{"_index":559,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.crearencuesta(dto",{"_index":470,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.generarcodigoqr(enlacecorto",{"_index":474,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.generarenlacecorto",{"_index":472,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.obtenerencuesta",{"_index":491,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.obtenerencuestaporcodigo",{"_index":513,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.obtenerresultados(id",{"_index":553,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.generarcodigoqr(enlacecorto",{"_index":657,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.generarenlacecorto(enlaceparticipacion",{"_index":656,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.opciones",{"_index":801,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["this.opcionesservice.crearopcion(preguntaid",{"_index":826,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["this.opcionesservice.eliminaropcion(id",{"_index":827,"title":{},"body":{"controllers/OpcionesController.html":{}}}],["this.opcionrepo.delete",{"_index":939,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.opcionrepository.create",{"_index":846,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["this.opcionrepository.delete(id",{"_index":851,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["this.opcionrepository.find",{"_index":1152,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.opcionrepository.findone",{"_index":1149,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.opcionrepository.findoneby",{"_index":849,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["this.opcionrepository.save(opcion",{"_index":848,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["this.preguntarepo.delete(idpregunta",{"_index":940,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.findone",{"_index":937,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.findoneby",{"_index":931,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.save(pregunta",{"_index":935,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepository.findone",{"_index":1134,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.preguntarepository.findoneby",{"_index":844,"title":{},"body":{"injectables/OpcionesService.html":{}}}],["this.preguntasservice.actualizarpregunta(id",{"_index":908,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["this.preguntasservice.eliminarpreguntaconopciones(id",{"_index":912,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["this.respuestaabiertarepository.create",{"_index":1139,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaabiertarepository.find",{"_index":1171,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaabiertarepository.save(respuestasabiertas",{"_index":1141,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.count",{"_index":1177,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.create",{"_index":1155,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.save(respuestaopcion",{"_index":1156,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestarepository.create",{"_index":1129,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestarepository.save(respuesta",{"_index":1131,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestas_abiertas",{"_index":802,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["this.respuestasservice.obtenerencuestaparaparticipacion",{"_index":1057,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["this.respuestasservice.registrarrespuestas",{"_index":1048,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["this.respuestasservice.visualizarrespuestasdto(codigo",{"_index":537,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.respuestasservice.visualizarrespuestasdto(tokenvisualizacion",{"_index":1056,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["throw",{"_index":533,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/OpcionesService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["time",{"_index":1336,"title":{},"body":{"index.html":{}}}],["tinyurl",{"_index":668,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["tipo",{"_index":12,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["tipo.enum",{"_index":450,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["tipo.enum.ts",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tipo_respuesta",{"_index":878,"title":{},"body":{"entities/Pregunta-1.html":{}}}],["tipos",{"_index":39,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["tiposrespuestaenum",{"_index":20,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{}}}],["tiposrespuestaenum.abierta",{"_index":544,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_simple",{"_index":1145,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["tiposrespuestaenum})@isenum(tiposrespuestaenum)@isnotempty",{"_index":285,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["todas",{"_index":1107,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["token",{"_index":1015,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["tokenparticipacion",{"_index":1008,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["tokenvisualizacion",{"_index":1029,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["totalrespuestas",{"_index":737,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["touch",{"_index":1365,"title":{},"body":{"index.html":{}}}],["trabajar",{"_index":572,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["transfer",{"_index":218,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["transforma",{"_index":235,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["transformar",{"_index":204,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{}}}],["transformer",{"_index":202,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"dependencies.html":{}}}],["true",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["true})@type(undefined",{"_index":196,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["true})@type(undefined)@isnotempty",{"_index":946,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["try",{"_index":519,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["tu",{"_index":1180,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["twitter",{"_index":1371,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateEncuestaResponseDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"controllers/OpcionesController.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"injectables/OpcionesService.html":{},"entities/Pregunta.html":{},"entities/Pregunta-1.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/Respuesta-1.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["typeormmodule.forfeature",{"_index":1071,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["typeormmodule.forfeature([encuesta",{"_index":573,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["typeormmodule.forfeature([opcion",{"_index":834,"title":{},"body":{"modules/OpcionesModule.html":{}}}],["typeormmodule.forfeature([pregunta",{"_index":918,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["typeormmodule.forrootasync",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":525,"title":{},"body":{"controllers/EncuestasController.html":{},"index.html":{}}}],["un",{"_index":64,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["una",{"_index":45,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["undefined",{"_index":279,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["undefined})@isarray()@arraynotempty()@arrayminsize(1)@validatenested({each",{"_index":195,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["une",{"_index":692,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["unit",{"_index":1271,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":680,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["unlicensed",{"_index":1383,"title":{},"body":{"properties.html":{}}}],["uno",{"_index":290,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["unused",{"_index":527,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["updatedto",{"_index":926,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["updates",{"_index":1345,"title":{},"body":{"index.html":{}}}],["url",{"_index":485,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["usamos",{"_index":640,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["usando",{"_index":670,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["usar",{"_index":751,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["usefactory",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1337,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/RespuestasService.html":{}}}],["utilidad",{"_index":203,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["utilidades",{"_index":322,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{}}}],["utilizado",{"_index":581,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["utilizando",{"_index":467,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["uuid",{"_index":614,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"dependencies.html":{}}}],["uuids",{"_index":612,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["v1",{"_index":650,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["v4",{"_index":613,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["vacía",{"_index":685,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["vacío",{"_index":223,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["valida",{"_index":56,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/PreguntasController.html":{}}}],["validaciones",{"_index":28,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["validadores",{"_index":213,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["validar",{"_index":205,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["validatenested",{"_index":212,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["validator",{"_index":27,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"dependencies.html":{}}}],["valor",{"_index":58,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["valores",{"_index":291,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/PreguntasService.html":{}}}],["value",{"_index":1242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variables",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["vars",{"_index":528,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["veces",{"_index":804,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["verificar",{"_index":714,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["version",{"_index":1381,"title":{},"body":{"properties.html":{}}}],["versión",{"_index":478,"title":{},"body":{"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["video",{"_index":1329,"title":{},"body":{"index.html":{}}}],["vinculada",{"_index":1128,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visit",{"_index":1318,"title":{},"body":{"index.html":{}}}],["visualización",{"_index":1030,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["visualizar",{"_index":256,"title":{},"body":{"classes/CreateEncuestaResponseDto.html":{},"controllers/RespuestasController.html":{}}}],["visualizarlas",{"_index":1157,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visualizarrespuestas",{"_index":1006,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualizarrespuestas(tokenvisualizacion",{"_index":1027,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualizarrespuestasdto",{"_index":452,"title":{"classes/VisualizarRespuestasDto.html":{}},"body":{"controllers/EncuestasController.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["visualizarrespuestasdto(codigovisualizacion",{"_index":1084,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visualizarrespuestasdto})@apiresponse({status",{"_index":1033,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualize",{"_index":1332,"title":{},"body":{"index.html":{}}}],["válido",{"_index":65,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["válidos",{"_index":42,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["watch",{"_index":1266,"title":{},"body":{"index.html":{}}}],["website",{"_index":1369,"title":{},"body":{"index.html":{}}}],["where('encuesta.id",{"_index":695,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["wherecondition",{"_index":752,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["wherecondition.id",{"_index":1098,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["working",{"_index":1317,"title":{},"body":{"index.html":{}}}],["x",{"_index":1347,"title":{},"body":{"index.html":{}}}],["xito",{"_index":539,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["xyz789uvw012",{"_index":1054,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["xyz789uvw012'})@apiresponse({status",{"_index":1031,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["y",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["ya",{"_index":47,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["yes",{"_index":1083,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["you'd",{"_index":1361,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1276,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/OpcionesModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActualizarPreguntaDto.html":{"url":"classes/ActualizarPreguntaDto.html","title":"class - ActualizarPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActualizarPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/actualizar-pregunta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                texto\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/actualizar-pregunta.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(TiposRespuestaEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/actualizar-pregunta.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsEnum } from 'class-validator'; // Validaciones para las propiedades del DTO\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum'; // Enum con los tipos de respuesta válidos\n\n// Clase DTO para actualizar una pregunta ya creada\nexport class ActualizarPreguntaDto {\n  @IsOptional() // Indica que esta propiedad es opcional\n  @IsString() // Valida que el valor sea una cadena de texto\n  texto?: string; // Nuevo texto de la pregunta\n\n  @IsOptional() // Indica que esta propiedad es opcional\n  @IsEnum(TiposRespuestaEnum) // Valida que sea un valor válido del enum TiposRespuestaEnum\n  tipo?: TiposRespuestaEnum; // Nuevo tipo de respuesta para la pregunta\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nEncuestasModule\n\nEncuestasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEncuestasModule->AppModule\n\n\n\n\n\nOpcionesModule\n\nOpcionesModule\n\nAppModule -->\n\nOpcionesModule->AppModule\n\n\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nAppModule -->\n\nPreguntasModule->AppModule\n\n\n\n\n\nRespuestasModule\n\nRespuestasModule\n\nAppModule -->\n\nRespuestasModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EncuestasModule\n                        \n                        \n                            OpcionesModule\n                        \n                        \n                            PreguntasModule\n                        \n                        \n                            RespuestasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'; // Decorador para definir un módulo en NestJS\nimport { ConfigModule, ConfigService } from '@nestjs/config'; // Módulo y servicio para manejar configuraciones\nimport configuration from './config/configuration'; // Archivo de configuración personalizado\nimport { EncuestasModule } from './modules/encuestas/encuestas.module'; // Módulo de encuestas\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo para la integración con TypeORM\nimport { PreguntasModule } from './modules/preguntas/preguntas.module';\nimport { RespuestasModule } from 'src/modules/respuestas/respuestas.module';\nimport { OpcionesModule } from './modules/opciones/opciones.module';\n\n@Module({\n  imports: [\n    // Importa el módulo de encuestas y preguntas\n    EncuestasModule,\n    PreguntasModule,\n    RespuestasModule,\n    OpcionesModule,\n    // Configuración global del módulo de configuración\n    ConfigModule.forRoot({\n      load: [configuration], // Carga la configuración personalizada desde un archivo\n      isGlobal: true, // Hace que el módulo de configuración sea accesible globalmente\n      ignoreEnvFile: process.env.NODE_ENV === 'production', // Ignora el archivo .env si el entorno es producción\n    }),\n\n    // Configuración de TypeORM para la conexión con la base de datos\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule], // Importa el módulo de configuración para acceder a las variables de entorno\n      inject: [ConfigService], // Inyecta el servicio de configuración\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres', // Tipo de base de datos (PostgreSQL)\n        host: configService.get('database.host'), // Host de la base de datos\n        port: configService.get('database.port'), // Puerto de la base de datos\n        username: configService.get('database.username'), // Usuario de la base de datos\n        password: configService.get('database.password'), // Contraseña de la base de datos\n        database: configService.get('database.name'), // Nombre de la base de datos\n        synchronize: false, // Desactiva la sincronización automática (recomendado en producción)\n        autoLoadEntities: true, // Carga automáticamente las entidades registradas\n        logging: configService.get('database.logging'), // Habilita o deshabilita el registro de consultas\n        logger: configService.get('database.logger'), // Define el tipo de logger para la base de datos\n      }),\n    }),\n  ],\n})\nexport class AppModule {} // Exporta la clase del módulo principal\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEncuestaDto.html":{"url":"classes/CreateEncuestaDto.html","title":"class - CreateEncuestaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEncuestaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-encuesta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                codigoQR\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                enlaceCorto\n                            \n                            \n                                    \n                                    \n                                    \n                                nombre\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                preguntas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        codigoQR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        enlaceCorto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePreguntaDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@IsArray()@ArrayNotEmpty()@ArrayMinSize(1)@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { Type } from 'class-transformer'; // Utilidad para transformar y validar objetos anidados\nimport {\n  ArrayMinSize,\n  ArrayNotEmpty,\n  IsArray,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator'; // Validadores para las propiedades del DTO\nimport { CreatePreguntaDto } from './create-pregunta.dto'; // DTO para las preguntas de la encuesta\n\n// Clase DTO (Data Transfer Object) para crear una encuesta\nexport class CreateEncuestaDto {\n  @ApiProperty() // Documenta la propiedad \"nombre\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  nombre: string; // Nombre de la encuesta\n\n  @ApiProperty({ type: [CreatePreguntaDto] }) // Documenta la propiedad \"preguntas\" en Swagger como un arreglo de CreatePreguntaDto\n  @IsArray() // Valida que el valor sea un arreglo\n  @ArrayNotEmpty() // Valida que el arreglo no esté vacío\n  @ArrayMinSize(1) // Valida que el arreglo tenga al menos un elemento\n  @ValidateNested({ each: true }) // Valida que cada elemento del arreglo sea un objeto válido según CreatePreguntaDto\n  @Type(() => CreatePreguntaDto) // Transforma cada elemento del arreglo en una instancia de CreatePreguntaDto\n  preguntas: CreatePreguntaDto[]; // Lista de preguntas asociadas a la encuesta\n\n  //Propiedad para el enlace corto\n  @ApiProperty()\n  @IsString()\n  enlaceCorto?: string; // generado automaticamente\n\n  // Propiedad para el código QR\n  @ApiProperty()\n  @IsString()\n  codigoQR?: string; // generado automáticamente\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEncuestaResponseDto.html":{"url":"classes/CreateEncuestaResponseDto.html","title":"class - CreateEncuestaResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEncuestaResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-encuesta-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codigoQR\n                            \n                            \n                                    \n                                codigoRespuesta\n                            \n                            \n                                    \n                                codigoResultados\n                            \n                            \n                                    \n                                enlaceCorto\n                            \n                            \n                                    \n                                enlaceParticipacion\n                            \n                            \n                                    \n                                enlaceVisualizacion\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigoQR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Código QR generado automáticamente'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigoRespuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Código para participar en la encuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Código para visualizar resultados'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enlaceCorto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Enlace corto generado automáticamente'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enlaceParticipacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Enlace para participar en la encuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        enlaceVisualizacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Enlace para visualizar resultados'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID de la encuesta creada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateEncuestaResponseDto {\n  @ApiProperty({ description: 'ID de la encuesta creada' })\n  id: number;\n\n  @ApiProperty({ description: 'Código para participar en la encuesta' })\n  codigoRespuesta: string;\n\n  @ApiProperty({ description: 'Código para visualizar resultados' })\n  codigoResultados: string;\n\n  @ApiProperty({ description: 'Enlace para participar en la encuesta' })\n  enlaceParticipacion: string;\n\n  @ApiProperty({ description: 'Enlace para visualizar resultados' })\n  enlaceVisualizacion: string;\n\n  @ApiProperty({ description: 'Enlace corto generado automáticamente' })\n  enlaceCorto: string;\n\n  @ApiProperty({ description: 'Código QR generado automáticamente' })\n  codigoQR: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOpcionDto.html":{"url":"classes/CreateOpcionDto.html","title":"class - CreateOpcionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOpcionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-opcion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-opcion.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-opcion.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator'; // Validadores para las propiedades del DTO\n\n// Clase DTO (Data Transfer Object) para crear una opción\nexport class CreateOpcionDto {\n  @ApiProperty() // Documenta la propiedad \"texto\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  texto: string; // Texto de la opción\n\n  @ApiProperty() // Documenta la propiedad \"numero\" en Swagger\n  @IsNumber() // Valida que el valor sea un número\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  numero: number; // Número que representa el orden o posición de la opción\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePreguntaDto.html":{"url":"classes/CreatePreguntaDto.html","title":"class - CreatePreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-pregunta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                opciones\n                            \n                            \n                                    \n                                    \n                                    \n                                texto\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOpcionDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false})@IsArray()@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TiposRespuestaEnum})@IsEnum(TiposRespuestaEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator'; // Validadores para las propiedades del DTO\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum'; // Enumerador para los tipos de respuesta permitidos\nimport { Type } from 'class-transformer'; // Utilidad para transformar y validar objetos anidados\nimport { CreateOpcionDto } from './create-opcion.dto'; // DTO para las opciones de una pregunta\n\n// Clase DTO (Data Transfer Object) para crear una pregunta\nexport class CreatePreguntaDto {\n  @ApiProperty() // Documenta la propiedad \"numero\" en Swagger\n  @IsNumber() // Valida que el valor sea un número\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  numero: number; // Número que representa el orden o posición de la pregunta\n\n  @ApiProperty() // Documenta la propiedad \"texto\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  texto: string; // Texto de la pregunta\n\n  @ApiProperty({ enum: TiposRespuestaEnum }) // Documenta la propiedad \"tipo\" en Swagger como un enumerador\n  @IsEnum(TiposRespuestaEnum) // Valida que el valor sea uno de los valores definidos en el enumerador\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  tipo: TiposRespuestaEnum; // Tipo de respuesta permitido para la pregunta\n\n  @ApiProperty({ type: [CreateOpcionDto], required: false }) // Documenta la propiedad \"opciones\" en Swagger como un arreglo de CreateOpcionDto\n  @IsArray() // Valida que el valor sea un arreglo\n  @IsOptional() // Valida que esta propiedad sea opcional\n  @ValidateNested({ each: true }) // Valida que cada elemento del arreglo sea un objeto válido según CreateOpcionDto\n  @Type(() => CreateOpcionDto) // Transforma cada elemento del arreglo en una instancia de CreateOpcionDto\n  opciones: CreateOpcionDto[]; // Opciones asociadas a la pregunta (opcional)\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Encuesta.html":{"url":"entities/Encuesta.html","title":"entity - Encuesta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Encuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/encuesta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codigoRespuesta\n                            \n                            \n                                    \n                                    \n                                codigoResultados\n                            \n                            \n                                fechaActualizacion\n                            \n                            \n                                    \n                                habilitada\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nombre\n                            \n                            \n                                    \n                                preguntas\n                            \n                            \n                                    \n                                respuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigoRespuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'codigo_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'codigo_resultados'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fechaActualizacion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        habilitada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pregunta[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, pregunta => pregunta.encuesta, {cascade: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        respuestas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Respuesta[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, respuesta => respuesta.encuesta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n// Importación de la entidad relacionada \"Pregunta\"\nimport { Pregunta } from './pregunta.entity';\n// Importación de la entidad relacionada \"Respuesta\"\nimport { Respuesta } from '../../respuestas/entities/respuesta.entity';\n// Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n\n@Entity({ name: 'encuestas' }) // Define la clase como una entidad de la base de datos con el nombre \"encuestas\"\nexport class Encuesta {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"nombre\" en la tabla\n  nombre: string;\n  fechaActualizacion: Date;\n  @OneToMany(() => Pregunta, (pregunta) => pregunta.encuesta, {\n    cascade: ['insert'], // Permite insertar automáticamente las preguntas relacionadas\n  })\n  preguntas: Pregunta[]; // Relación uno a muchos con la entidad \"Pregunta\"\n\n  @Column({ name: 'codigo_respuesta' }) // Define la columna \"codigo_respuesta\" en la tabla\n  codigoRespuesta: string;\n\n  @Column({ name: 'codigo_resultados' }) // Define la columna \"codigo_resultados\" en la tabla\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  codigoResultados: string;\n\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  @Column({ default: true })\n  habilitada: boolean; // Columna que indica si la encuesta está habilitada o no\n\n  @OneToMany(() => Respuesta, (respuesta) => respuesta.encuesta)\n  respuestas: Respuesta[]; // Relación uno a muchos con la entidad \"Respuesta\"\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EncuestasController.html":{"url":"controllers/EncuestasController.html","title":"controller - EncuestasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EncuestasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/controllers/encuestas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                encuestas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                cambiarEstadoEncuesta\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                crearEncuesta\n                            \n                            \n                                    \n                                    Async\n                                obtenerEncuesta\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                obtenerEncuestaDebug\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                obtenerEncuestaParaParticipar\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                obtenerEncuestaParaParticiparLegacy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                obtenerEstructuraEncuesta\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                obtenerResultados\n                            \n                            \n                                    \n                                    \n                                    Async\n                                obtenerResultadosEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        cambiarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    cambiarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/habilitar')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:319\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearEncuesta(dto: CreateEncuestaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear una nueva encuesta'})@ApiResponse({status: 201, description: 'Encuesta creada exitosamente', type: CreateEncuestaResponseDto})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        obtenerEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuesta(id: number, dto: ObtenerEncuestaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            ObtenerEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        obtenerEncuestaDebug\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaDebug(codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('debug/:codigo')@ApiOperation({summary: 'Obtener información detallada de la encuesta para depuración'})@ApiParam({name: 'codigo', description: 'Código de la encuesta (puede ser de participación o resultados)', example: 'abc123def456'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        obtenerEncuestaParaParticipar\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaParaParticipar(id: number, codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('participar/:id/:codigo')@ApiOperation({summary: 'Obtener encuesta para participación'})@ApiParam({name: 'id', description: 'ID de la encuesta', example: '1'})@ApiParam({name: 'codigo', description: 'Código de participación de la encuesta', example: 'abc123def456'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        obtenerEncuestaParaParticiparLegacy\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaParaParticiparLegacy(codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('participar/:codigo')@ApiOperation({summary: 'Obtener encuesta para participación'})@ApiParam({name: 'codigo', description: 'Código de participación de la encuesta', example: 'abc123def456'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        obtenerEstructuraEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEstructuraEncuesta(codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('estructura/:codigo')@ApiOperation({summary: 'Obtener estructura de la encuesta con IDs para responder'})@ApiParam({name: 'codigo', description: 'Código de participación de la encuesta', example: 'abc123def456'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:244\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        obtenerResultados\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerResultados(id: number, codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/resultados')@ApiOperation({summary: 'Obtener resultados de una encuesta por ID y código'})@ApiParam({name: 'id', description: 'ID de la encuesta', example: '1'})@ApiResponse({status: 200, description: 'Resultados obtenidos exitosamente'})@ApiResponse({status: 404, description: 'Encuesta no encontrada o código inválido'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:308\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        obtenerResultadosEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerResultadosEncuesta(codigo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('resultados/:codigo')@ApiOperation({summary: 'Obtener resultados de una encuesta'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiResponse } from '@nestjs/swagger';\n// Importación del servicio de encuestas\nimport { EncuestasService } from '../services/encuestas.service';\n// Importación del servicio de respuestas\nimport { RespuestasService } from '../../respuestas/services/respuestas.service';\n// Importación del DTO para crear encuestas\nimport { CreateEncuestaDto } from '../dtos/create-encuesta.dto';\n// Importación del DTO para obtener encuestas\nimport { ObtenerEncuestaDto } from '../dtos/obtener-encuesta.dto';\n// Importación de la entidad Encuesta\nimport { Encuesta } from '../entities/encuesta.entity';\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum';\nimport { CreateEncuestaResponseDto } from '../dtos/create-encuesta-response.dto';\nimport { VisualizarRespuestasDto } from '../../respuestas/dtos/visualizar-respuestas.dtos';\n@Controller('encuestas') // Define el controlador para manejar las rutas relacionadas con \"encuestas\"\nexport class EncuestasController {\n  constructor(\n    private readonly encuestasService: EncuestasService,\n    private readonly respuestasService: RespuestasService,\n  ) {} // Inyección de los servicios\n  @Post()\n  @ApiOperation({ summary: 'Crear una nueva encuesta' })\n  @ApiResponse({\n    status: 201,\n    description: 'Encuesta creada exitosamente',\n    type: CreateEncuestaResponseDto,\n  }) // Define un endpoint POST para crear una nueva encuesta\n  async crearEncuesta(\n    @Body() dto: CreateEncuestaDto,\n  ): Promise {\n    // Crea la encuesta utilizando el servicio\n    const encuesta = await this.encuestasService.crearEncuesta(dto);\n\n    //  Generar enlace corto\n    const enlaceCorto = await this.encuestasService.generarEnlaceCorto(\n      encuesta.enlaceParticipacion,\n    );\n\n    //  Generar código QR\n    const codigoQR = await this.encuestasService.generarCodigoQR(enlaceCorto);\n\n    return {\n      ...encuesta,\n      enlaceParticipacion: enlaceCorto, // Se reemplaza el enlace con la versión corta\n      codigoQR, // Se añade el código QR\n    };\n  }\n\n  @Get(':id') // Define un endpoint GET para obtener una encuesta por su ID\n  async obtenerEncuesta(\n    @Param('id') id: number, // Obtiene el parámetro \"id\" de la URL\n    @Query() dto: ObtenerEncuestaDto, // Obtiene los parámetros de consulta (query params)\n  ): Promise {\n    // Llama al servicio para obtener la encuesta y la retorna\n    return await this.encuestasService.obtenerEncuesta(\n      id,\n      dto.codigo, // Código de respuesta o resultados\n      dto.tipo, // Tipo de código (respuesta o resultados)\n    );\n  }\n  @Get('participar/:id/:codigo')\n  @ApiOperation({ summary: 'Obtener encuesta para participación' })\n  @ApiParam({\n    name: 'id',\n    description: 'ID de la encuesta',\n    example: '1',\n  })\n  @ApiParam({\n    name: 'codigo',\n    description: 'Código de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  async obtenerEncuestaParaParticipar(\n    @Param('id') id: number,\n    @Param('codigo') codigo: string,\n  ): Promise {\n    const encuesta = await this.encuestasService.obtenerEncuesta(\n      id,\n      codigo,\n      CodigoTipoEnum.RESPUESTA,\n    );\n    // Transformar la respuesta para incluir explícitamente los IDs\n    return {\n      id: encuesta.id,\n      nombre: encuesta.nombre,\n      preguntas: encuesta.preguntas.map((pregunta) => ({\n        id: pregunta.id,\n        numero: pregunta.numero,\n        texto: pregunta.texto,\n        tipo: pregunta.tipo,\n        opciones: pregunta.opciones\n          ? pregunta.opciones.map((opcion) => ({\n              id: opcion.id,\n              numero: opcion.numero,\n              texto: opcion.texto,\n            }))\n          : [],\n      })),\n    };\n  }\n\n  @Get('participar/:codigo')\n  @ApiOperation({\n    summary: 'Obtener encuesta para participación',\n  })\n  @ApiParam({\n    name: 'codigo',\n    description: 'Código de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  async obtenerEncuestaParaParticiparLegacy(\n    @Param('codigo') codigo: string,\n  ): Promise {\n    const encuesta = await this.encuestasService.obtenerEncuestaPorCodigo(\n      codigo,\n      CodigoTipoEnum.RESPUESTA,\n    );\n\n    // Transformar la respuesta para incluir explícitamente los IDs\n    return {\n      id: encuesta.id,\n      nombre: encuesta.nombre,\n      preguntas: encuesta.preguntas.map((pregunta) => ({\n        id: pregunta.id,\n        numero: pregunta.numero,\n        texto: pregunta.texto,\n        tipo: pregunta.tipo,\n        opciones: pregunta.opciones\n          ? pregunta.opciones.map((opcion) => ({\n              id: opcion.id,\n              numero: opcion.numero,\n              texto: opcion.texto,\n            }))\n          : [],\n      })),\n    };\n  }\n\n  @Get('debug/:codigo')\n  @ApiOperation({\n    summary: 'Obtener información detallada de la encuesta para depuración',\n  })\n  @ApiParam({\n    name: 'codigo',\n    description:\n      'Código de la encuesta (puede ser de participación o resultados)',\n    example: 'abc123def456',\n  })\n  async obtenerEncuestaDebug(@Param('codigo') codigo: string): Promise {\n    // Intentar primero con código de respuesta\n    try {\n      const encuesta = await this.encuestasService.obtenerEncuestaPorCodigo(\n        codigo,\n        CodigoTipoEnum.RESPUESTA,\n      );\n\n      // Transformar la respuesta para incluir explícitamente los IDs\n      const resultado = {\n        id: encuesta.id,\n        nombre: encuesta.nombre,\n        preguntas: encuesta.preguntas.map((pregunta) => ({\n          id: pregunta.id,\n          numero: pregunta.numero,\n          texto: pregunta.texto,\n          tipo: pregunta.tipo,\n          opciones: pregunta.opciones\n            ? pregunta.opciones.map((opcion) => ({\n                id: opcion.id,\n                numero: opcion.numero,\n                texto: opcion.texto,\n              }))\n            : [],\n        })),\n      };\n\n      return resultado;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (_) {\n      // Si falla, intentar con código de resultados\n      try {\n        const encuesta = await this.encuestasService.obtenerEncuestaPorCodigo(\n          codigo,\n          CodigoTipoEnum.RESULTADOS,\n        );\n\n        // Transformar la respuesta para incluir explícitamente los IDs\n        const resultado = {\n          id: encuesta.id,\n          nombre: encuesta.nombre,\n          preguntas: encuesta.preguntas.map((pregunta) => ({\n            id: pregunta.id,\n            numero: pregunta.numero,\n            texto: pregunta.texto,\n            tipo: pregunta.tipo,\n            opciones: pregunta.opciones\n              ? pregunta.opciones.map((opcion) => ({\n                  id: opcion.id,\n                  numero: opcion.numero,\n                  texto: opcion.texto,\n                }))\n              : [],\n          })),\n        };\n\n        return resultado;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (_) {\n        throw new BadRequestException('Código de encuesta no válido');\n      }\n    }\n  }\n\n  @Get('resultados/:codigo')\n  @ApiOperation({ summary: 'Obtener resultados de una encuesta' })\n  async obtenerResultadosEncuesta(\n    @Param('codigo') codigo: string,\n  ): Promise {\n    const resultado =\n      await this.respuestasService.visualizarRespuestasDto(codigo);\n    return { message: 'Éxito', data: resultado };\n  }\n\n  @Get('estructura/:codigo')\n  @ApiOperation({\n    summary: 'Obtener estructura de la encuesta con IDs para responder',\n  })\n  @ApiParam({\n    name: 'codigo',\n    description: 'Código de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  async obtenerEstructuraEncuesta(\n    @Param('codigo') codigo: string,\n  ): Promise {\n    const encuesta = await this.encuestasService.obtenerEncuestaPorCodigo(\n      codigo,\n      CodigoTipoEnum.RESPUESTA,\n    );\n\n    return {\n      id: encuesta.id,\n      nombre: encuesta.nombre,\n      codigoRespuesta: encuesta.codigoRespuesta,\n      preguntas: encuesta.preguntas.map((pregunta) => ({\n        id: pregunta.id,\n        numero: pregunta.numero,\n        texto: pregunta.texto,\n        tipo: pregunta.tipo,\n        opciones: pregunta.opciones\n          ? pregunta.opciones.map((opcion) => ({\n              id: opcion.id,\n              numero: opcion.numero,\n              texto: opcion.texto,\n            }))\n          : [],\n      })),\n      ejemploRespuesta: {\n        respuestas: encuesta.preguntas.map((pregunta) => {\n          if (pregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n            return {\n              id_pregunta: pregunta.id,\n              tipo: pregunta.tipo,\n              texto: 'Ejemplo de respuesta abierta',\n            };\n          } else {\n            return {\n              id_pregunta: pregunta.id,\n              tipo: pregunta.tipo,\n              opciones:\n                pregunta.opciones && pregunta.opciones.length > 0\n                  ? [pregunta.opciones[0].id]\n                  : [],\n            };\n          }\n        }),\n      },\n    };\n  }\n  @Get(':id/resultados')\n  @ApiOperation({\n    summary: 'Obtener resultados de una encuesta por ID y código',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'ID de la encuesta',\n    example: '1',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Resultados obtenidos exitosamente',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o código inválido',\n  })\n  async obtenerResultados(\n    @Param('id') id: number,\n    @Query('codigo') codigo: string,\n  ): Promise {\n    if (!codigo) {\n      throw new BadRequestException('Código de resultados requerido');\n    }\n    return this.encuestasService.obtenerResultados(id, codigo);\n  }\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  @Patch(':id/habilitar') // Define un endpoint PATCH para habilitar/deshabilitar una encuesta\n  async cambiarEstadoEncuesta(\n    @Param('id') id: number, // Obtiene el parámetro \"id\" de la URL\n    @Body('habilitada') habilitada: boolean, // Obtiene el cuerpo de la solicitud para saber si se habilita o deshabilita\n  ): Promise {\n    return await this.encuestasService.actualizarEstadoEncuesta(id, habilitada);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncuestasModule.html":{"url":"modules/EncuestasModule.html","title":"module - EncuestasModule","body":"\n                   \n\n\n\n\n    Modules\n    EncuestasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EncuestasModule\n\n\n\ncluster_EncuestasModule_imports\n\n\n\ncluster_EncuestasModule_providers\n\n\n\n\nRespuestasModule\n\nRespuestasModule\n\n\n\nEncuestasModule\n\nEncuestasModule\n\nEncuestasModule -->\n\nRespuestasModule->EncuestasModule\n\n\n\n\n\nEncuestasService\n\nEncuestasService\n\nEncuestasModule -->\n\nEncuestasService->EncuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/encuestas/encuestas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EncuestasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EncuestasController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RespuestasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { EncuestasController } from './controllers/encuestas.controller'; // Controlador para manejar las rutas relacionadas con encuestas\nimport { EncuestasService } from './services/encuestas.service'; // Servicio para la lógica de negocio de encuestas\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Encuesta } from './entities/encuesta.entity'; // Entidad que representa la tabla \"Encuesta\" en la base de datos\nimport { Pregunta } from './entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from './entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\nimport { Respuesta } from '../respuestas/entities/respuesta.entity'; // Entidad que representa la tabla \"Respuesta\" en la base de datos\nimport { RespuestasModule } from '../respuestas/respuestas.module'; // Importación del módulo de respuestas\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([Encuesta, Pregunta, Opcion, Respuesta]),\n    RespuestasModule,\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  controllers: [EncuestasController],\n  // Declaración de los proveedores que contienen la lógica de negocio\n  providers: [EncuestasService],\n})\n// Exportación del módulo de encuestas para que pueda ser utilizado en otros módulos\nexport class EncuestasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncuestasService.html":{"url":"injectables/EncuestasService.html","title":"injectable - EncuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/services/encuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                actualizarEstadoEncuesta\n                            \n                            \n                                    Async\n                                crearEncuesta\n                            \n                            \n                                    Async\n                                generarCodigoQR\n                            \n                            \n                                    Async\n                                generarEnlaceCorto\n                            \n                            \n                                    Async\n                                obtenerEncuesta\n                            \n                            \n                                    Async\n                                obtenerEncuestaPorCodigo\n                            \n                            \n                                    Async\n                                obtenerResultados\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(encuestaRepository: Repository, respuestaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/encuestas/services/encuestas.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encuestaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        respuestaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        actualizarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearEncuesta(dto: CreateEncuestaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generarCodigoQR\n                        \n                    \n                \n            \n            \n                \n                        \n                    generarCodigoQR(texto: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                texto\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generarEnlaceCorto\n                        \n                    \n                \n            \n            \n                \n                        \n                    generarEnlaceCorto(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        obtenerEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuesta(id: number, codigo: string, codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoTipo\n                                            \n                                                            CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        obtenerEncuestaPorCodigo\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaPorCodigo(codigo: string, codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoTipo\n                                            \n                                                            CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        obtenerResultados\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerResultados(id: number, codigoResultados: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoResultados\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\n// Decorador para inyectar repositorios de TypeORM\nimport { InjectRepository } from '@nestjs/typeorm';\n// Importación de la entidad Encuesta\nimport { Encuesta } from '../entities/encuesta.entity';\n// Importación del repositorio de TypeORM\nimport { Repository } from 'typeorm';\n// Importación del DTO para crear encuestas\nimport { CreateEncuestaDto } from '../dtos/create-encuesta.dto';\n// Importación de la función para generar UUIDs\nimport { v4 } from 'uuid';\n// Importación del enumerador para los tipos de código\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\nimport { NotFoundException } from '@nestjs/common';\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum';\nimport { Respuesta } from '../../respuestas/entities/respuesta.entity';\nimport fetch from 'node-fetch';\nimport * as QRCode from 'qrcode';\n\n@Injectable() // Decorador que marca esta clase como un servicio inyectable\nexport class EncuestasService {\n  constructor(\n    // Inyección del repositorio de la entidad Encuesta\n    @InjectRepository(Encuesta)\n    private encuestaRepository: Repository,\n    @InjectRepository(Respuesta)\n    private respuestaRepository: Repository,\n  ) {}\n\n  // Método para crear una nueva encuesta se le agrega codigo de enlace corto y codigoqr\n  async crearEncuesta(dto: CreateEncuestaDto): Promise {\n    for (const pregunta of dto.preguntas) {\n      if (\n        pregunta.tipo !== TiposRespuestaEnum.ABIERTA &&\n        (!pregunta.opciones || pregunta.opciones.length === 0)\n      ) {\n        throw new BadRequestException(\n          `Las preguntas de opción múltiple deben tener opciones`,\n        );\n      }\n      if (\n        pregunta.tipo === TiposRespuestaEnum.ABIERTA &&\n        pregunta.opciones?.length > 0\n      ) {\n        throw new BadRequestException(\n          `Las preguntas abiertas no deben tener opciones`,\n        );\n      }\n    }\n    const codigoRespuesta = v4();\n    const codigoResultados = v4();\n\n    // Creación de una nueva instancia de Encuesta con los datos del DTO\n    const encuesta: Encuesta = this.encuestaRepository.create({\n      ...dto, // Copia las propiedades del DTO\n      codigoRespuesta, // Genera un código único para las respuestas\n      codigoResultados, // Genera un código único para los resultados\n    });\n\n    // Guarda la encuesta en la base de datos\n    const encuestaCreada = await this.encuestaRepository.save(encuesta);\n\n    // Usamos APP_URL para que sea dinámico con el puerto que esté activo\n    const baseUrl = process.env.APP_URL || 'http://localhost:3000';\n    const apiPrefix = process.env.GLOBAL_PREFIX || 'api';\n    const apiVersion = 'v1';\n\n    // Formato: /api/v1/respuestas/participar/{id}/{codigoRespuesta}\n    const enlaceParticipacion = `${baseUrl}/${apiPrefix}/${apiVersion}/respuestas/participar/${encuestaCreada.id}/${codigoRespuesta}`;\n\n    // Formato: /api/v1/encuestas/resultados/{id}?codigo={codigoResultados}\n    const enlaceVisualizacion = `${baseUrl}/${apiPrefix}/${apiVersion}/encuestas/${encuestaCreada.id}/resultados?codigo=${codigoResultados}`;\n\n    //Generar enlace corto\n    const enlaceCorto = await this.generarEnlaceCorto(enlaceParticipacion);\n\n    //Generar QR\n    const codigoQR = await this.generarCodigoQR(enlaceCorto);\n\n    // Retorna los datos relevantes de la encuesta creada\n    return {\n      id: encuestaCreada.id,\n      codigoRespuesta: encuestaCreada.codigoRespuesta,\n      codigoResultados: encuestaCreada.codigoResultados,\n      enlaceParticipacion: enlaceCorto, // usamos el enlace corto\n      enlaceVisualizacion,\n      enlaceCorto,\n      codigoQR,\n    };\n  }\n  async generarEnlaceCorto(url: string): Promise {\n    try {\n      const response = await fetch(\n        `http://tinyurl.com/api-create.php?url=${encodeURIComponent(url)}`,\n      );\n      if (!response.ok) {\n        console.warn(\n          `Error en la API de TinyURL: ${response.statusText}, usando URL original`,\n        );\n        return url; // Se retorna la URL original\n      }\n      return await response.text();\n    } catch (error) {\n      console.error(\n        'Error al acortar enlace:',\n        error instanceof Error ? error.message : error,\n      );\n      return url; // Devuelve la URL original en caso de error\n    }\n  }\n\n  async generarCodigoQR(texto: string): Promise {\n    try {\n      const qr = await QRCode.toDataURL(texto);\n      return qr;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        console.error('Error generando QR:', error.message);\n      } else {\n        console.error('Error desconocido generando QR:', error);\n      }\n      return ''; // En caso de error, retornar cadena vacía\n    }\n  }\n  // Método para obtener una encuesta por su ID y un código específico\n  async obtenerEncuesta(\n    id: number, // ID de la encuesta\n    codigo: string, // Código de respuesta o resultados\n    codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS, // Tipo de código\n  ): Promise {\n    // Construcción de la consulta para obtener la encuesta\n    const query = this.encuestaRepository\n      .createQueryBuilder('encuesta') // Alias para la tabla Encuesta\n      .innerJoinAndSelect('encuesta.preguntas', 'pregunta') // Une las preguntas relacionadas\n      .leftJoinAndSelect('pregunta.opciones', 'preguntaOpcion') // Une las opciones de las preguntas\n      .where('encuesta.id = :id', { id }) // Filtra por el ID de la encuesta\n      .andWhere('encuesta.habilitada = true');\n    // Filtra según el tipo de código proporcionado\n    switch (codigoTipo) {\n      case CodigoTipoEnum.RESPUESTA:\n        query.andWhere('encuesta.codigoRespuesta = :codigo', { codigo });\n        break;\n\n      case CodigoTipoEnum.RESULTADOS:\n        query.andWhere('encuesta.codigoResultados = :codigo', { codigo });\n        break;\n    }\n\n    // Ordena las preguntas y opciones por su número\n    query.orderBy('pregunta.numero', 'ASC');\n    query.addOrderBy('preguntaOpcion.numero', 'ASC');\n\n    // Ejecuta la consulta y obtiene la encuesta\n    const encuesta = await query.getOne();\n\n    // Si no se encuentra la encuesta, lanza una excepción\n    if (!encuesta) {\n      throw new BadRequestException('Datos de encuesta no válidos');\n    }\n\n    // Retorna la encuesta encontrada\n    return encuesta;\n  }\n  async obtenerResultados(id: number, codigoResultados: string): Promise {\n    // Verificar primero que el código sea válido\n    const encuesta = await this.encuestaRepository.findOne({\n      where: { id, codigoResultados: codigoResultados, habilitada: true },\n      relations: [\n        'preguntas',\n        'preguntas.opciones',\n        'respuestas',\n        'respuestas.respuestasAbiertas',\n        'respuestas.respuestasOpciones',\n        'respuestas.respuestasOpciones.opcion',\n      ],\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException('Encuesta no encontrada o código inválido');\n    }\n\n    // Procesar resultados\n    const resultados = encuesta.preguntas.map((pregunta) => {\n      if (pregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n        const respuestasTexto = encuesta.respuestas\n          .flatMap((r) => r.respuestasAbiertas)\n          .filter((ra) => ra.id_pregunta === pregunta.id)\n          .map((ra) => ra.texto);\n\n        return {\n          pregunta: pregunta.texto,\n          tipo: 'ABIERTA',\n          respuestas: respuestasTexto,\n        };\n      } else {\n        const opcionesConteo = pregunta.opciones.map((opcion) => {\n          const conteo = encuesta.respuestas\n            .flatMap((r) => r.respuestasOpciones)\n            .filter((ro) => ro.opcion?.id === opcion.id).length;\n\n          return {\n            id: opcion.id,\n            opcion: opcion.texto,\n            conteo,\n          };\n        });\n\n        return {\n          pregunta: pregunta.texto,\n          tipo: pregunta.tipo,\n          opciones: opcionesConteo,\n        };\n      }\n    });\n\n    return {\n      encuesta: encuesta.nombre,\n      totalRespuestas: encuesta.respuestas.length,\n      resultados,\n    };\n  }\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  async actualizarEstadoEncuesta(\n    id: number,\n    habilitada: boolean,\n  ): Promise {\n    // Busca la encuesta por su ID\n    const encuesta = await this.encuestaRepository.findOne({ where: { id } });\n\n    // Si no se encuentra la encuesta, lanza una excepción\n    if (!encuesta) {\n      throw new BadRequestException('Encuesta no encontrada');\n    }\n\n    // Actualiza el estado de la encuesta\n    encuesta.habilitada = habilitada;\n    await this.encuestaRepository.save(encuesta);\n\n    // Retorna un mensaje de éxito\n    return {\n      mensaje: `La encuesta fue ${habilitada ? 'habilitada' : 'deshabilitada'} correctamente`,\n    };\n  }\n\n  // Método para obtener una encuesta por su código de respuesta\n  async obtenerEncuestaPorCodigo(\n    codigo: string,\n    codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS,\n  ): Promise {\n    // Determinar qué campo usar según el tipo de código\n    const whereCondition =\n      codigoTipo === CodigoTipoEnum.RESPUESTA\n        ? { codigoRespuesta: codigo, habilitada: true }\n        : { codigoResultados: codigo, habilitada: true };\n\n    // Buscar la encuesta que tenga este código\n    const encuesta = await this.encuestaRepository.findOne({\n      where: whereCondition,\n      relations: ['preguntas', 'preguntas.opciones'],\n    });\n\n    if (!encuesta) {\n      throw new BadRequestException('Código de encuesta no válido');\n    }\n\n    // Ordenar las preguntas y opciones\n    encuesta.preguntas.sort((a, b) => a.numero - b.numero);\n    encuesta.preguntas.forEach((pregunta) => {\n      if (pregunta.opciones) {\n        pregunta.opciones.sort((a, b) => a.numero - b.numero);\n      }\n    });\n\n    return encuesta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ObtenerEncuestaDto.html":{"url":"classes/ObtenerEncuestaDto.html","title":"class - ObtenerEncuestaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ObtenerEncuestaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/obtener-encuesta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                codigo\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        codigo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID('4')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/obtener-encuesta.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodigoTipoEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: CodigoTipoEnum})@IsEnum(CodigoTipoEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/obtener-encuesta.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { IsEnum, IsNotEmpty, IsUUID } from 'class-validator'; // Validadores para las propiedades del DTO\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum'; // Enumerador para los tipos de código permitidos\n\n// Clase DTO (Data Transfer Object) para obtener una encuesta\nexport class ObtenerEncuestaDto {\n  @ApiProperty() // Documenta la propiedad \"codigo\" en Swagger\n  @IsUUID('4') // Valida que el valor sea un UUID versión 4\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  codigo: string; // Código único para identificar la encuesta\n\n  @ApiProperty({ enum: CodigoTipoEnum }) // Documenta la propiedad \"tipo\" en Swagger como un enumerador\n  @IsEnum(CodigoTipoEnum) // Valida que el valor sea uno de los valores definidos en el enumerador\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  tipo: CodigoTipoEnum; // Tipo de código (puede ser \"RESULTADOS\" o \"RESPUESTA\")\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Opcion.html":{"url":"entities/Opcion.html","title":"entity - Opcion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Opcion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/opcion.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                pregunta\n                            \n                            \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pregunta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_pregunta'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n// Importación de decoradores y utilidades de TypeORM\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  //OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n// Importación de la entidad relacionada \"Pregunta\"\nimport { Pregunta } from './pregunta.entity';\n//import { RespuestaOpcion } from 'src/modules/respuestas/entities/respuesta-opcion.entity';\n\n@Entity({ name: 'opciones' }) // Define la clase como una entidad de la base de datos con el nombre \"opciones\"\nexport class Opcion {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"texto\" en la tabla\n  texto: string;\n\n  @Column() // Define la columna \"numero\" en la tabla\n  numero: number;\n\n  @ManyToOne(() => Pregunta) // Relación muchos a uno con la entidad \"Pregunta\"\n  @JoinColumn({ name: 'id_pregunta' }) // Define la columna \"id_pregunta\" como la clave foránea\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  pregunta: Pregunta; // Referencia a la pregunta a la que pertenece esta opción\n\n  // EXTRA POR MÓDULO RESPUESTAS\n  // @OneToMany(() => RespuestaOpcion, (r) => r.opcion)\n  // respuestas: RespuestaOpcion[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpcionConRespuestasDto.html":{"url":"classes/OpcionConRespuestasDto.html","title":"class - OpcionConRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpcionConRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cantidad_respuestas\n                            \n                            \n                                id\n                            \n                            \n                                numero\n                            \n                            \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cantidad_respuestas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpcionesController.html":{"url":"controllers/OpcionesController.html","title":"controller - OpcionesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpcionesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/opciones/controllers/opciones.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                preguntas/:preguntaId/opciones\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                crearOpcion\n                            \n                            \n                                    \n                                    Async\n                                eliminarOpcion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        crearOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearOpcion(preguntaId: number, createOpcionDto: CreateOpcionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/opciones/controllers/opciones.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                preguntaId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOpcionDto\n                                            \n                                                            CreateOpcionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarOpcion(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/opciones/controllers/opciones.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  ParseIntPipe,\n  Delete,\n} from '@nestjs/common';\nimport { OpcionesService } from '../services/opciones.service';\nimport { CreateOpcionDto } from '../../encuestas/dtos/create-opcion.dto';\n\n@Controller('preguntas/:preguntaId/opciones')\nexport class OpcionesController {\n  constructor(private readonly opcionesService: OpcionesService) {}\n\n  @Post()\n  async crearOpcion(\n    @Param('preguntaId', ParseIntPipe) preguntaId: number,\n    @Body() createOpcionDto: CreateOpcionDto,\n  ): Promise {\n    return this.opcionesService.crearOpcion(preguntaId, createOpcionDto);\n  }\n\n  @Delete(':id')\n  async eliminarOpcion(\n    @Param('id', ParseIntPipe) id: number,\n  ): Promise {\n    return this.opcionesService.eliminarOpcion(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpcionesModule.html":{"url":"modules/OpcionesModule.html","title":"module - OpcionesModule","body":"\n                   \n\n\n\n\n    Modules\n    OpcionesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpcionesModule\n\n\n\ncluster_OpcionesModule_providers\n\n\n\n\nOpcionesService\n\nOpcionesService\n\n\n\nOpcionesModule\n\nOpcionesModule\n\nOpcionesModule -->\n\nOpcionesService->OpcionesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/opciones/opciones.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OpcionesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OpcionesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Opcion } from '../encuestas/entities/opcion.entity';\nimport { Pregunta } from '../encuestas/entities/pregunta.entity';\nimport { OpcionesService } from './services/opciones.service';\nimport { OpcionesController } from './controllers/opciones.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Opcion, Pregunta])],\n  controllers: [OpcionesController],\n  providers: [OpcionesService],\n})\nexport class OpcionesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpcionesService.html":{"url":"injectables/OpcionesService.html","title":"injectable - OpcionesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpcionesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/opciones/services/opciones.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                crearOpcion\n                            \n                            \n                                    Async\n                                eliminarOpcion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opcionRepository: Repository, preguntaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/opciones/services/opciones.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opcionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        preguntaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crearOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearOpcion(preguntaId: number, createOpcionDto: CreateOpcionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/opciones/services/opciones.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                preguntaId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOpcionDto\n                                            \n                                                            CreateOpcionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarOpcion(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/opciones/services/opciones.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Opcion } from '../../encuestas/entities/opcion.entity';\nimport { Pregunta } from '../../encuestas/entities/pregunta.entity';\nimport { CreateOpcionDto } from '../../encuestas/dtos/create-opcion.dto';\n\n@Injectable()\nexport class OpcionesService {\n  constructor(\n    @InjectRepository(Opcion)\n    private opcionRepository: Repository,\n    @InjectRepository(Pregunta)\n    private preguntaRepository: Repository,\n  ) {}\n\n  async crearOpcion(\n    preguntaId: number,\n    createOpcionDto: CreateOpcionDto,\n  ): Promise {\n    const pregunta = await this.preguntaRepository.findOneBy({\n      id: preguntaId,\n    });\n    if (!pregunta) {\n      throw new NotFoundException('Pregunta no encontrada');\n    }\n\n    const opcion = this.opcionRepository.create({\n      ...createOpcionDto,\n      pregunta,\n    });\n\n    const opcionGuardada = await this.opcionRepository.save(opcion);\n\n    return {\n      mensaje: 'Opción creada correctamente',\n      opcion: opcionGuardada,\n    };\n  }\n\n  async eliminarOpcion(id: number): Promise {\n    const opcion = await this.opcionRepository.findOneBy({ id });\n    if (!opcion) {\n      throw new NotFoundException('Opción no encontrada');\n    }\n\n    await this.opcionRepository.delete(id);\n    return { mensaje: 'Opción eliminada correctamente' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Pregunta.html":{"url":"entities/Pregunta.html","title":"entity - Pregunta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/pregunta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                opciones\n                            \n                            \n                                    \n                                texto\n                            \n                            \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_encuesta'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opcion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, opcion => opcion.pregunta, {cascade: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TiposRespuestaEnum, name: 'tipo'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n// Importación del enumerador para los tipos de respuesta\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum';\n// Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n// Importación de la entidad relacionada \"Encuesta\"\nimport { Encuesta } from './encuesta.entity';\n// Importación de la entidad relacionada \"Opcion\"\nimport { Opcion } from './opcion.entity';\n//import { RespuestaAbierta } from 'src/modules/respuestas/entities/respuesta-abierta.entity';\n\n@Entity({ name: 'preguntas' }) // Define la clase como una entidad de la base de datos con el nombre \"preguntas\"\nexport class Pregunta {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"numero\" en la tabla\n  numero: number;\n\n  @Column() // Define la columna \"texto\" en la tabla\n  texto: string;\n\n  @Column({\n    type: 'enum',\n    enum: TiposRespuestaEnum,\n    name: 'tipo', // Nombre de la columna en la base de datos\n  }) // Define la columna \"tipo\" como un enumerador\n  tipo: TiposRespuestaEnum; // Especifica el tipo de respuesta permitido para la pregunta\n\n  @ManyToOne(() => Encuesta) // Relación muchos a uno con la entidad \"Encuesta\"\n  @JoinColumn({ name: 'id_encuesta' }) // Define la columna \"id_encuesta\" como la clave foránea\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  encuesta: Encuesta; // Referencia a la encuesta a la que pertenece esta pregunta\n\n  @OneToMany(() => Opcion, (opcion) => opcion.pregunta, { cascade: ['insert'] }) // Relación uno a muchos con la entidad \"Opcion\"\n  opciones: Opcion[]; // Lista de opciones asociadas a la pregunta\n\n  // EXTRA POR EL MÓDULO DE RESPUESTAS\n  // @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  // @OneToMany(() => RespuestaAbierta, (r) => r.pregunta)\n  // respuestasAbiertas: RespuestaAbierta[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Pregunta-1.html":{"url":"entities/Pregunta-1.html","title":"entity - Pregunta-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/preguntas/entities/pregunta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                opciones\n                            \n                            \n                                    \n                                texto\n                            \n                            \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, encuesta => encuesta.preguntas)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opcion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, opcion => opcion.pregunta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TiposRespuestaEnum, name: 'tipo_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/preguntas/entities/pregunta.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { TiposRespuestaEnum } from '../../encuestas/enums/tipos-respuesta.enum';\nimport { Encuesta } from '../../encuestas/entities/encuesta.entity';\nimport { Opcion } from '../../encuestas/entities/opcion.entity';\n\n@Entity({ name: 'preguntas' })\nexport class Pregunta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  numero: number;\n\n  @Column()\n  texto: string;\n\n  @Column({\n    type: 'enum',\n    enum: TiposRespuestaEnum,\n    name: 'tipo_respuesta', // Nombre de la columna en la base de datos\n  })\n  tipo: TiposRespuestaEnum;\n\n  @ManyToOne(() => Encuesta, (encuesta) => encuesta.preguntas)\n  encuesta: Encuesta;\n\n  @OneToMany(() => Opcion, (opcion) => opcion.pregunta)\n  opciones: Opcion[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PreguntaConRespuestasDto.html":{"url":"classes/PreguntaConRespuestasDto.html","title":"class - PreguntaConRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PreguntaConRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                numero\n                            \n                            \n                                opciones\n                            \n                            \n                                respuestas_abiertas\n                            \n                            \n                                texto\n                            \n                            \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpcionConRespuestasDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        respuestas_abiertas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PreguntasController.html":{"url":"controllers/PreguntasController.html","title":"controller - PreguntasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PreguntasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/preguntas/controllers/preguntas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                preguntas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                actualizarPregunta\n                            \n                            \n                                    \n                                    Async\n                                eliminarPregunta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        actualizarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarPregunta(id: number, actualizarDto: ActualizarPreguntaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/preguntas/controllers/preguntas.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actualizarDto\n                                            \n                                                            ActualizarPreguntaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        eliminarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarPregunta(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/preguntas/controllers/preguntas.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport {\n  Body,\n  Controller,\n  Param,\n  Patch,\n  Delete,\n  ParseIntPipe,\n} from '@nestjs/common';\n// Importación del servicio de preguntas\nimport { PreguntasService } from '../services/preguntas.service';\n// Importación del DTO para actualizar una pregunta\nimport { ActualizarPreguntaDto } from '../../encuestas/dtos/actualizar-pregunta.dto';\n\n@Controller('preguntas') // Define el controlador para manejar las rutas relacionadas con \"/preguntas\"\nexport class PreguntasController {\n  constructor(private readonly preguntasService: PreguntasService) {} // Inyección del servicio de preguntas\n\n  @Patch(':id') // Define un endpoint PATCH para actualizar una pregunta por su ID\n  async actualizarPregunta(\n    @Param('id', ParseIntPipe) id: number, // Obtiene el parámetro \"id\" de la URL y lo convierte en número.\n    @Body() actualizarDto: ActualizarPreguntaDto, // Extrae el cuerpo de la petición y lo valida según ActualizarPreguntaDto.\n  ): Promise {\n    // Llama al método actualizarPregunta del servicio, pasándole el id y los nuevos datos.\n    return this.preguntasService.actualizarPregunta(id, actualizarDto);\n  }\n\n  @Delete(':id') // Define un endpoint DELETE para eliminar una pregunta y sus opciones\n  async eliminarPregunta(\n    @Param('id', ParseIntPipe) id: number, // Obtiene el parámetro \"id\" de la URL y lo convierte en número.\n  ): Promise {\n    // Llama al método del servicio que elimina la pregunta junto con sus opciones\n    return this.preguntasService.eliminarPreguntaConOpciones(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreguntasModule.html":{"url":"modules/PreguntasModule.html","title":"module - PreguntasModule","body":"\n                   \n\n\n\n\n    Modules\n    PreguntasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PreguntasModule\n\n\n\ncluster_PreguntasModule_providers\n\n\n\n\nPreguntasService\n\nPreguntasService\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nPreguntasModule -->\n\nPreguntasService->PreguntasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/preguntas/preguntas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PreguntasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PreguntasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Pregunta } from '../encuestas/entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from '../encuestas/entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\nimport { PreguntasService } from '../preguntas/services/preguntas.service'; // Servicio para la lógica de negocio de preguntas\nimport { PreguntasController } from '../preguntas/controllers/preguntas.controller'; // Controlador para manejar las rutas relacionadas con preguntas\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([Pregunta, Opcion]),\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  controllers: [PreguntasController],\n  // Declaración de los proveedores que contienen la lógica de negocio\n  providers: [PreguntasService],\n})\n// Exportación del módulo de preguntas para que pueda ser utilizado en otros módulos\nexport class PreguntasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreguntasService.html":{"url":"injectables/PreguntasService.html","title":"injectable - PreguntasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PreguntasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/preguntas/services/preguntas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                actualizarPregunta\n                            \n                            \n                                    Async\n                                eliminarPreguntaConOpciones\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(preguntaRepo: Repository, opcionRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/preguntas/services/preguntas.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preguntaRepo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opcionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        actualizarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarPregunta(idPregunta: number, updateDto: ActualizarPreguntaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/preguntas/services/preguntas.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idPregunta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            ActualizarPreguntaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminarPreguntaConOpciones\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarPreguntaConOpciones(idPregunta: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/preguntas/services/preguntas.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idPregunta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NotFoundException, Injectable } from '@nestjs/common';\n// Decorador para inyectar repositorios de TypeORM\nimport { InjectRepository } from '@nestjs/typeorm';\n// Importación del repositorio de TypeORM\nimport { Repository } from 'typeorm';\n// Importación de la entidad Pregunta\nimport { Pregunta } from '../../encuestas/entities/pregunta.entity';\n// Importación de la entidad Opcion\nimport { Opcion } from '../../encuestas/entities/opcion.entity';\n// Importación del DTO para actualizar una pregunta\nimport { ActualizarPreguntaDto } from '../../encuestas/dtos/actualizar-pregunta.dto';\n\n@Injectable() // Decorador que marca esta clase como un servicio inyectable\nexport class PreguntasService {\n  constructor(\n    // Inyección del repositorio de la entidad Pregunta\n    @InjectRepository(Pregunta)\n    private readonly preguntaRepo: Repository,\n    // Inyección del repositorio de la entidad Opcion\n    @InjectRepository(Opcion)\n    private readonly opcionRepo: Repository,\n  ) {}\n\n  // Método para actualizar una pregunta\n  async actualizarPregunta(\n    idPregunta: number,\n    updateDto: ActualizarPreguntaDto,\n  ): Promise {\n    const pregunta = await this.preguntaRepo.findOneBy({ id: idPregunta }); // Busca la pregunta por ID\n    if (!pregunta) throw new NotFoundException('Pregunta no encontrada'); // Si no existe, lanza una excepción 404\n\n    Object.assign(pregunta, updateDto); // Asigna los nuevos valores a la entidad pregunta\n    await this.preguntaRepo.save(pregunta); // Guarda la entidad actualizada en la base de datos\n\n    return { mensaje: 'Pregunta actualizada correctamente' }; // Retorna un mensaje de éxito\n  }\n\n  // Método para eliminar una pregunta y sus opciones\n  async eliminarPreguntaConOpciones(\n    idPregunta: number,\n  ): Promise {\n    const pregunta = await this.preguntaRepo.findOne({\n      // Busca la pregunta junto con sus opciones\n      where: { id: idPregunta },\n      relations: ['opciones'],\n    });\n\n    if (!pregunta) throw new NotFoundException('Pregunta no encontrada'); // Si no existe, lanza excepción 404\n\n    // Se eliminan las opciones relacionadas\n    if (pregunta.opciones && pregunta.opciones.length > 0) {\n      await this.opcionRepo.delete({ pregunta: { id: idPregunta } });\n    }\n\n    // Se elimina la pregunta\n    await this.preguntaRepo.delete(idPregunta);\n\n    return { mensaje: 'Pregunta eliminada correctamente' }; // Retorna un mensaje de éxito\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarRespuestasDto.html":{"url":"classes/RegistrarRespuestasDto.html","title":"class - RegistrarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                respuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        respuestas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RespuestaPreguntaDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class RespuestaPreguntaDto {\n  @IsNumber()\n  @IsNotEmpty()\n  id_pregunta: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @Type(() => String) // Transforma explicitamente el tipo\n  tipo:\n    | 'ABIERTA'\n    | 'OPCION_MULTIPLE_SELECCION_SIMPLE'\n    | 'OPCION_MULTIPLE_SELECCION_MULTIPLE';\n\n  @IsOptional()\n  @IsString()\n  texto?: string; // preguntas abiertas\n\n  @IsOptional()\n  @IsArray()\n  @IsNumber({}, { each: true })\n  @Type(() => Number) // Transforma cada elemento a número\n  opciones?: number[]; // preguntas de opción múltiple\n}\n\nexport class RegistrarRespuestasDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => RespuestaPreguntaDto)\n  @IsNotEmpty()\n  respuestas: RespuestaPreguntaDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Respuesta.html":{"url":"entities/Respuesta.html","title":"entity - Respuesta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Respuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/respuesta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_encuesta\n                            \n                            \n                                    \n                                respuestasAbiertas\n                            \n                            \n                                    \n                                respuestasOpciones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_encuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/respuesta.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/respuesta.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/respuesta.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        respuestasAbiertas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RespuestaAbierta[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, ra => ra.respuesta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/respuesta.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        respuestasOpciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RespuestaOpcion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, ro => ro.respuesta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/respuesta.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n} from 'typeorm';\nimport { Encuesta } from '../../encuestas/entities/encuesta.entity';\nimport { RespuestaAbierta } from '../../respuestas/entities/respuesta-abierta.entity';\nimport { RespuestaOpcion } from '../../respuestas/entities/respuesta-opcion.entity';\n\n@Entity('respuestas')\nexport class Respuesta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int')\n  id_encuesta: number;\n\n  @ManyToOne(() => Encuesta)\n  @JoinColumn({ name: 'id_encuesta' })\n  encuesta: Encuesta;\n\n  @OneToMany(() => RespuestaAbierta, (ra) => ra.respuesta)\n  respuestasAbiertas: RespuestaAbierta[];\n\n  @OneToMany(() => RespuestaOpcion, (ro) => ro.respuesta)\n  respuestasOpciones: RespuestaOpcion[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Respuesta-1.html":{"url":"entities/Respuesta-1.html","title":"entity - Respuesta-1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Respuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_encuesta\n                            \n                            \n                                    \n                                respuestasAbiertas\n                            \n                            \n                                    \n                                respuestasOpciones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, encuesta => encuesta.respuestas)@JoinColumn({name: 'id_encuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        respuestasAbiertas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RespuestaAbierta[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, respuestaAbierta => respuestaAbierta.respuesta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        respuestasOpciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RespuestaOpcion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, respuestaOpcion => respuestaOpcion.respuesta)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  OneToMany,\n  JoinColumn,\n} from 'typeorm';\nimport { Encuesta } from '../../encuestas/entities/encuesta.entity';\nimport { RespuestaAbierta } from './respuesta-abierta.entity';\nimport { RespuestaOpcion } from './respuesta-opcion.entity';\n\n@Entity('respuestas')\nexport class Respuesta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int')\n  id_encuesta: number;\n\n  @ManyToOne(() => Encuesta, (encuesta) => encuesta.respuestas)\n  @JoinColumn({ name: 'id_encuesta' })\n  encuesta: Encuesta;\n\n  @OneToMany(\n    () => RespuestaAbierta,\n    (respuestaAbierta) => respuestaAbierta.respuesta,\n  )\n  respuestasAbiertas: RespuestaAbierta[];\n\n  @OneToMany(\n    () => RespuestaOpcion,\n    (respuestaOpcion) => respuestaOpcion.respuesta,\n  )\n  respuestasOpciones: RespuestaOpcion[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RespuestaAbierta.html":{"url":"entities/RespuestaAbierta.html","title":"entity - RespuestaAbierta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RespuestaAbierta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta-abierta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_pregunta\n                            \n                            \n                                    \n                                id_respuesta\n                            \n                            \n                                    \n                                    \n                                pregunta\n                            \n                            \n                                    \n                                    \n                                respuesta\n                            \n                            \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pregunta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_pregunta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Respuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Pregunta } from '../../encuestas/entities/pregunta.entity';\nimport { Respuesta } from './respuesta.entity';\n\n@Entity('respuestas_abiertas')\nexport class RespuestaAbierta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'text', nullable: false })\n  texto: string;\n\n  @Column('int')\n  id_pregunta: number;\n\n  @Column('int')\n  id_respuesta: number;\n\n  @ManyToOne(() => Pregunta)\n  @JoinColumn({ name: 'id_pregunta' })\n  pregunta: Pregunta;\n\n  @ManyToOne(() => Respuesta)\n  @JoinColumn({ name: 'id_respuesta' })\n  respuesta: Respuesta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RespuestaOpcion.html":{"url":"entities/RespuestaOpcion.html","title":"entity - RespuestaOpcion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RespuestaOpcion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta-opcion.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_opcion\n                            \n                            \n                                    \n                                id_respuesta\n                            \n                            \n                                    \n                                    \n                                opcion\n                            \n                            \n                                    \n                                    \n                                respuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_opcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        opcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opcion\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_opcion'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Respuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Respuesta } from './respuesta.entity';\nimport { Opcion } from '../../encuestas/entities/opcion.entity';\n\n@Entity('respuestas_opciones')\nexport class RespuestaOpcion {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int')\n  id_respuesta: number;\n\n  @Column('int')\n  id_opcion: number;\n\n  @ManyToOne(() => Respuesta)\n  @JoinColumn({ name: 'id_respuesta' })\n  respuesta: Respuesta;\n\n  @ManyToOne(() => Opcion)\n  @JoinColumn({ name: 'id_opcion' })\n  opcion: Opcion;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RespuestaPreguntaDto.html":{"url":"classes/RespuestaPreguntaDto.html","title":"class - RespuestaPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RespuestaPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id_pregunta\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                opciones\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                texto\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsNumber({}, {each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class RespuestaPreguntaDto {\n  @IsNumber()\n  @IsNotEmpty()\n  id_pregunta: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @Type(() => String) // Transforma explicitamente el tipo\n  tipo:\n    | 'ABIERTA'\n    | 'OPCION_MULTIPLE_SELECCION_SIMPLE'\n    | 'OPCION_MULTIPLE_SELECCION_MULTIPLE';\n\n  @IsOptional()\n  @IsString()\n  texto?: string; // preguntas abiertas\n\n  @IsOptional()\n  @IsArray()\n  @IsNumber({}, { each: true })\n  @Type(() => Number) // Transforma cada elemento a número\n  opciones?: number[]; // preguntas de opción múltiple\n}\n\nexport class RegistrarRespuestasDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => RespuestaPreguntaDto)\n  @IsNotEmpty()\n  respuestas: RespuestaPreguntaDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RespuestasController.html":{"url":"controllers/RespuestasController.html","title":"controller - RespuestasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RespuestasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/controllers/respuestas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                respuestas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                obtenerEncuestaParaParticipacion\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                registrarRespuestas\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                registrarRespuestasAlternativa\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                visualizarRespuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        obtenerEncuestaParaParticipacion\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaParaParticipacion(id: number, tokenParticipacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('participar/:id/:tokenParticipacion')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrarRespuestas(id: number, tokenParticipacion: string, registrarRespuestasDto: RegistrarRespuestasDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/:tokenParticipacion')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Registrar respuestas de una encuesta'})@ApiParam({name: 'id', description: 'ID de la encuesta', example: '1'})@ApiParam({name: 'tokenParticipacion', description: 'Token de participación de la encuesta', example: 'abc123def456'})@ApiBody({type: RegistrarRespuestasDto})@ApiResponse({status: 201, description: 'Respuestas registradas exitosamente'})@ApiResponse({status: 404, description: 'Encuesta no encontrada o enlace inválido'})@ApiResponse({status: 400, description: 'Datos de respuesta inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registrarRespuestasDto\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        registrarRespuestasAlternativa\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrarRespuestasAlternativa(id: number, tokenParticipacion: string, registrarRespuestasDto: RegistrarRespuestasDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('participar/:id/:tokenParticipacion')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Registrar respuestas de una encuesta (ruta alternativa)'})@ApiParam({name: 'id', description: 'ID de la encuesta', example: '1'})@ApiParam({name: 'tokenParticipacion', description: 'Token de participación de la encuesta', example: 'abc123def456'})@ApiBody({type: RegistrarRespuestasDto})@ApiResponse({status: 201, description: 'Respuestas registradas exitosamente'})@ApiResponse({status: 404, description: 'Encuesta no encontrada o enlace inválido'})@ApiResponse({status: 400, description: 'Datos de respuesta inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registrarRespuestasDto\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        visualizarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    visualizarRespuestas(tokenVisualizacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('resultados/:tokenVisualizacion')@ApiOperation({summary: 'Visualizar respuestas de una encuesta'})@ApiParam({name: 'tokenVisualizacion', description: 'Token de visualización de resultados', example: 'xyz789uvw012'})@ApiResponse({status: 200, description: 'Respuestas obtenidas exitosamente', type: VisualizarRespuestasDto})@ApiResponse({status: 404, description: 'Encuesta no encontrada o enlace inválido'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenVisualizacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  HttpCode,\n  HttpStatus,\n  Get,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { CreateEncuestaDto } from 'src/modules/encuestas/dtos/create-encuesta.dto';\nimport { RespuestasService } from 'src/modules/respuestas/services/respuestas.service';\nimport { RegistrarRespuestasDto } from 'src/modules/respuestas/dtos/registrar-respuestas.dto';\nimport { VisualizarRespuestasDto } from 'src/modules/respuestas/dtos/visualizar-respuestas.dtos';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiParam,\n  ApiBody,\n  ApiResponse,\n} from '@nestjs/swagger';\n\n@ApiTags('respuestas')\n@Controller('respuestas')\nexport class RespuestasController {\n  constructor(private readonly respuestasService: RespuestasService) {}\n\n  @Post(':id/:tokenParticipacion') // Permite registrar respuestas para una encuesta específica.\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: 'Registrar respuestas de una encuesta' })\n  @ApiParam({\n    name: 'id',\n    description: 'ID de la encuesta',\n    example: '1',\n  })\n  @ApiParam({\n    name: 'tokenParticipacion',\n    description: 'Token de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  @ApiBody({ type: RegistrarRespuestasDto })\n  @ApiResponse({\n    status: 201,\n    description: 'Respuestas registradas exitosamente',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o enlace inválido',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Datos de respuesta inválidos',\n  })\n  async registrarRespuestas(\n    @Param('id') id: number, // Recibe el ID de la encuesta\n    @Param('tokenParticipacion') tokenParticipacion: string, //Recibe el token de participación desde la URL.\n    @Body() registrarRespuestasDto: RegistrarRespuestasDto, // Recibe las respuestas en el cuerpo de la solicitud.\n  ): Promise {\n    await this.respuestasService.registrarRespuestas(\n      tokenParticipacion,\n      registrarRespuestasDto,\n      id,\n    );\n    return { message: 'Respuestas registradas exitosamente' };\n  }\n\n  @Post('participar/:id/:tokenParticipacion') // Ruta alternativa para mayor compatibilidad\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: 'Registrar respuestas de una encuesta (ruta alternativa)',\n  })\n  @ApiParam({\n    name: 'id',\n    description: 'ID de la encuesta',\n    example: '1',\n  })\n  @ApiParam({\n    name: 'tokenParticipacion',\n    description: 'Token de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  @ApiBody({ type: RegistrarRespuestasDto })\n  @ApiResponse({\n    status: 201,\n    description: 'Respuestas registradas exitosamente',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o enlace inválido',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Datos de respuesta inválidos',\n  })\n  async registrarRespuestasAlternativa(\n    @Param('id') id: number,\n    @Param('tokenParticipacion') tokenParticipacion: string,\n    @Body() registrarRespuestasDto: RegistrarRespuestasDto,\n  ): Promise {\n    await this.respuestasService.registrarRespuestas(\n      tokenParticipacion,\n      registrarRespuestasDto,\n      id,\n    );\n    return { message: 'Respuestas registradas exitosamente' };\n  }\n\n  @Get('resultados/:tokenVisualizacion') //obtiene las respuestas\n  @ApiOperation({ summary: 'Visualizar respuestas de una encuesta' })\n  @ApiParam({\n    name: 'tokenVisualizacion',\n    description: 'Token de visualización de resultados',\n    example: 'xyz789uvw012',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Respuestas obtenidas exitosamente',\n    type: VisualizarRespuestasDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o enlace inválido',\n  })\n  async visualizarRespuestas(\n    @Param('tokenVisualizacion') tokenVisualizacion: string, //Recibe el token para visualizar los resultados.\n  ): Promise {\n    const resultado =\n      await this.respuestasService.visualizarRespuestasDto(tokenVisualizacion);\n    return { message: 'Éxito', data: resultado };\n  }\n  @Get('participar/:id/:tokenParticipacion')\n  async obtenerEncuestaParaParticipacion(\n    @Param('id', ParseIntPipe) id: number,\n    @Param('tokenParticipacion') tokenParticipacion: string,\n  ): Promise {\n    const encuesta =\n      await this.respuestasService.obtenerEncuestaParaParticipacion(\n        id,\n        tokenParticipacion,\n      );\n    return { message: 'Encuesta obtenida exitosamente', data: encuesta };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RespuestasModule.html":{"url":"modules/RespuestasModule.html","title":"module - RespuestasModule","body":"\n                   \n\n\n\n\n    Modules\n    RespuestasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RespuestasModule\n\n\n\ncluster_RespuestasModule_exports\n\n\n\ncluster_RespuestasModule_providers\n\n\n\n\nRespuestasService \n\nRespuestasService \n\n\n\nRespuestasModule\n\nRespuestasModule\n\nRespuestasService  -->\n\nRespuestasModule->RespuestasService \n\n\n\n\n\nRespuestasService\n\nRespuestasService\n\nRespuestasModule -->\n\nRespuestasService->RespuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/respuestas/respuestas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RespuestasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RespuestasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RespuestasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { RespuestasController } from './controllers/respuestas.controller'; // Controlador para manejar las rutas relacionadas con respuesta\nimport { RespuestasService } from './services/respuestas.service'; // Servicio para la lógica de negocio de respuesta\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Respuesta } from './entities/respuesta.entity'; // Entidad que representa la tabla \"Respuesta\" en la base de datos\nimport { RespuestaAbierta } from './entities/respuesta-abierta.entity'; //Entidad que representa la tabla \"Respuesta Abierta\" en la base de datos\nimport { RespuestaOpcion } from './entities/respuesta-opcion.entity'; //Entidad que representa la tabla \"RespuestaOpciones\" en la base de datos\nimport { Encuesta } from 'src/modules/encuestas/entities/encuesta.entity'; // Entidad que representa la tabla \"Encuesta\" en la base de datos\nimport { Pregunta } from 'src/modules/encuestas/entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from 'src/modules/encuestas/entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([\n      Encuesta,\n      Pregunta,\n      Opcion,\n      Respuesta,\n      RespuestaAbierta,\n      RespuestaOpcion,\n    ]),\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  // Declaración de los proveedores que contienen la lógica de negocio\n  controllers: [RespuestasController],\n  providers: [RespuestasService],\n  exports: [RespuestasService],\n})\n// Exportación del módulo de encuestas para que pueda ser utilizado en otros módulos\nexport class RespuestasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RespuestasService.html":{"url":"injectables/RespuestasService.html","title":"injectable - RespuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RespuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/services/respuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                obtenerEncuestaParaParticipacion\n                            \n                            \n                                    Async\n                                registrarRespuestas\n                            \n                            \n                                    Async\n                                visualizarRespuestasDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(respuestaRepository: Repository, respuestaAbiertaRepository: Repository, respuestaOpcionRepository: Repository, encuestaRepository: Repository, preguntaRepository: Repository, opcionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/respuestas/services/respuestas.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        respuestaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        respuestaAbiertaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        respuestaOpcionRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encuestaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        preguntaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opcionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        obtenerEncuestaParaParticipacion\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuestaParaParticipacion(id: number, codigoParticipacion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/respuestas/services/respuestas.service.ts:278\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrarRespuestas(codigoParticipacion: string, registarRespuestasDto: RegistrarRespuestasDto, encuestaId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/respuestas/services/respuestas.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registarRespuestasDto\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encuestaId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        visualizarRespuestasDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    visualizarRespuestasDto(codigoVisualizacion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/respuestas/services/respuestas.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoVisualizacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Respuesta } from 'src/modules/respuestas/entities/respuesta.entity';\nimport { RespuestaAbierta } from 'src/modules/respuestas/entities/respuesta-abierta.entity';\nimport { RespuestaOpcion } from 'src/modules/respuestas/entities/respuesta-opcion.entity';\nimport { Encuesta } from 'src/modules/encuestas/entities/encuesta.entity';\nimport { Pregunta } from 'src/modules/encuestas/entities/pregunta.entity';\nimport { Opcion } from 'src/modules/encuestas/entities/opcion.entity';\nimport { RegistrarRespuestasDto } from 'src/modules/respuestas/dtos/registrar-respuestas.dto';\nimport { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\nimport { VisualizarRespuestasDto } from '../dtos/visualizar-respuestas.dtos';\nimport { PreguntaConRespuestasDto } from '../dtos/visualizar-respuestas.dtos';\nimport { CreateEncuestaDto } from 'src/modules/encuestas/dtos/create-encuesta.dto';\n\n@Injectable()\nexport class RespuestasService {\n  constructor(\n    @InjectRepository(Respuesta)\n    private respuestaRepository: Repository,\n    @InjectRepository(RespuestaAbierta)\n    private respuestaAbiertaRepository: Repository,\n    @InjectRepository(RespuestaOpcion)\n    private respuestaOpcionRepository: Repository,\n    @InjectRepository(Encuesta)\n    private encuestaRepository: Repository,\n    @InjectRepository(Pregunta)\n    private preguntaRepository: Repository,\n    @InjectRepository(Opcion)\n    private opcionRepository: Repository,\n  ) {}\n  //recibe las respuestas de un usuario que ha participado en una encuesta y las guarda en la base de datos\n  async registrarRespuestas(\n    codigoParticipacion: string,\n    registarRespuestasDto: RegistrarRespuestasDto,\n    encuestaId?: number,\n  ): Promise {\n    // Construir la condición de búsqueda con un tipo específico\n    const whereCondition: {\n      codigoRespuesta: string;\n      habilitada: boolean;\n      id?: number;\n    } = {\n      codigoRespuesta: codigoParticipacion,\n      habilitada: true,\n    };\n\n    // Si se proporciona el ID de la encuesta, añadirlo a la condición\n    if (encuestaId) {\n      whereCondition.id = encuestaId;\n    }\n\n    const encuesta = await this.encuestaRepository.findOne({\n      where: whereCondition, //busca la encuesta con el codigo de participacion y opcionalmente el ID\n      relations: ['preguntas', 'preguntas.opciones'],\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException('Encuesta no encontrada o enlace invalido'); //sino existe el codigo mensaje de error\n    }\n\n    const preguntasObligatorias = encuesta.preguntas;\n    const preguntasRespondidas = registarRespuestasDto.respuestas.map(\n      (r) => r.id_pregunta,\n    );\n\n    // Verificar si todas las preguntas obligatorias están respondidas\n    const preguntasFaltantes = preguntasObligatorias.filter(\n      (p) => !preguntasRespondidas.includes(p.id),\n    );\n\n    if (preguntasFaltantes.length > 0) {\n      console.log(\n        'Preguntas obligatorias:',\n        preguntasObligatorias.map((p) => p.id),\n      );\n      console.log('Preguntas respondidas:', preguntasRespondidas);\n      console.log(\n        'Preguntas faltantes:',\n        preguntasFaltantes.map((p) => p.id),\n      );\n      // Imprimir información detallada de las preguntas y opciones\n      encuesta.preguntas.forEach((pregunta) => {\n        console.log(\n          `Pregunta ID: ${pregunta.id}, Número: ${pregunta.numero}, Texto: \"${pregunta.texto}\"`,\n        );\n        if (pregunta.opciones && pregunta.opciones.length > 0) {\n          console.log('Opciones:');\n          pregunta.opciones.forEach((opcion) => {\n            console.log(\n              `  Opción ID: ${opcion.id}, Número: ${opcion.numero}, Texto: \"${opcion.texto}\"`,\n            );\n          });\n        }\n      });\n\n      throw new BadRequestException(\n        `Debe responder todas las preguntas obligatorias. Faltan las preguntas: ${preguntasFaltantes.map((p) => p.numero).join(', ')}`,\n      );\n    }\n    //crea una nueva respuesta vinculada a la encuesta\n    const respuesta = this.respuestaRepository.create({\n      id_encuesta: encuesta.id,\n    });\n\n    const respuestaGuardada = await this.respuestaRepository.save(respuesta); //guarda las respuestas en la base de datos\n    for (const respuestaPregunta of registarRespuestasDto.respuestas) {\n      const pregunta = await this.preguntaRepository.findOne({\n        where: {\n          id: respuestaPregunta.id_pregunta,\n          encuesta: { id: encuesta.id },\n        },\n      });\n\n      if (!pregunta) {\n        throw new BadRequestException(\n          `Pregunta ${respuestaPregunta.id_pregunta} no encontrada o no pertenece a la encuesta`,\n        );\n      }\n\n      if (respuestaPregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n        if (!respuestaPregunta.texto) {\n          throw new BadRequestException(\n            'Respuesta de texto requerida para preguntas abiertas',\n          );\n        }\n\n        const respuestasAbiertas = this.respuestaAbiertaRepository.create({\n          texto: respuestaPregunta.texto,\n          id_pregunta: pregunta.id,\n          id_respuesta: respuestaGuardada.id,\n        });\n        await this.respuestaAbiertaRepository.save(respuestasAbiertas);\n      } else {\n        if (\n          !respuestaPregunta.opciones ||\n          respuestaPregunta.opciones.length === 0\n        ) {\n          throw new BadRequestException(\n            'Al menos una opcion debe ser seleccionada',\n          );\n        }\n\n        if (\n          pregunta.tipo ===\n            TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE &&\n          respuestaPregunta.opciones.length > 1\n        ) {\n          throw new BadRequestException(\n            'Solo se permite una seleccion para este tipo de pregunta',\n          );\n        }\n\n        for (const idOpcion of respuestaPregunta.opciones) {\n          const opcion = await this.opcionRepository.findOne({\n            where: {\n              id: idOpcion,\n              pregunta: { id: pregunta.id },\n            },\n          });\n\n          if (!opcion) {\n            // Obtener todas las opciones disponibles para esta pregunta para depuración\n            const opcionesDisponibles = await this.opcionRepository.find({\n              where: { pregunta: { id: pregunta.id } },\n              select: ['id', 'texto', 'numero'],\n            });\n\n            console.log(\n              `Error: Opción ${idOpcion} no encontrada para la pregunta ${pregunta.id}`,\n            );\n            console.log(\n              'Opciones disponibles para esta pregunta:',\n              opcionesDisponibles,\n            );\n\n            throw new BadRequestException(\n              `Opcion ${idOpcion} no encontrada o no pertenece a esta pregunta. Opciones disponibles: ${JSON.stringify(opcionesDisponibles)}`,\n            );\n          }\n          const respuestaOpcion = this.respuestaOpcionRepository.create({\n            id_respuesta: respuestaGuardada.id,\n            id_opcion: idOpcion,\n          });\n          await this.respuestaOpcionRepository.save(respuestaOpcion);\n        }\n      }\n    }\n  }\n  // obtiene las respuestas registradas de una encuesta específica para visualizarlas.\n  async visualizarRespuestasDto(\n    codigoVisualizacion: string,\n  ): Promise {\n    // Busca la encuesta con el código de visualización\n    const encuesta = await this.encuestaRepository.findOne({\n      where: { codigoResultados: codigoVisualizacion },\n      relations: ['preguntas', 'preguntas.opciones'],\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException('Encuesta no encontrada o enlace inválido'); //si no existe mensaje de error.\n    }\n\n    // Imprimir información detallada de las preguntas y opciones para depuración\n    console.log('Información de la encuesta para depuración:');\n    encuesta.preguntas.forEach((pregunta) => {\n      console.log(\n        `Pregunta ID: ${pregunta.id}, Número: ${pregunta.numero}, Texto: \"${pregunta.texto}\"`,\n      );\n      if (pregunta.opciones && pregunta.opciones.length > 0) {\n        console.log('Opciones:');\n        pregunta.opciones.forEach((opcion) => {\n          console.log(\n            `  Opción ID: ${opcion.id}, Número: ${opcion.numero}, Texto: \"${opcion.texto}\"`,\n          );\n        });\n      }\n    });\n\n    // Construir el objeto\n    const resultado: VisualizarRespuestasDto = {\n      id: encuesta.id,\n      nombre: encuesta.nombre,\n      codigoRespuesta: encuesta.codigoRespuesta,\n      codigoResultados: encuesta.codigoResultados,\n      preguntas: [],\n    };\n    //itera sobre las preguntas de la encuesta\n    for (const pregunta of encuesta.preguntas) {\n      const preguntaConRespuestas = new PreguntaConRespuestasDto(); //crea un dto de la pregunta.\n\n      preguntaConRespuestas.id = pregunta.id;\n      preguntaConRespuestas.numero = pregunta.numero;\n      preguntaConRespuestas.texto = pregunta.texto;\n      preguntaConRespuestas.tipo = pregunta.tipo;\n      // Inicializar las listas de opciones y respuestas abiertas\n      preguntaConRespuestas.opciones = [];\n      preguntaConRespuestas.respuestas_abiertas = [];\n      //obtiene las preguntas abiertas\n      if (pregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n        const respuestasAbiertas = await this.respuestaAbiertaRepository.find({\n          where: { id_pregunta: pregunta.id },\n        });\n        preguntaConRespuestas.respuestas_abiertas = respuestasAbiertas.map(\n          (r) => r.texto,\n        );\n      }\n\n      if (pregunta.opciones && pregunta.opciones.length > 0) {\n        for (const opcion of pregunta.opciones) {\n          // cuenta cuantas veces fue seleccionada cada opcion\n          const cantidadRespuestas = await this.respuestaOpcionRepository.count(\n            {\n              where: { id_opcion: opcion.id }, // Ajusta esto a tu esquema si es diferente\n            },\n          );\n\n          //  Añade la opción con la cantidad de respuestas al DTO\n\n          preguntaConRespuestas.opciones.push({\n            id: opcion.id,\n            texto: opcion.texto,\n            numero: opcion.numero,\n            cantidad_respuestas: cantidadRespuestas,\n          });\n        }\n      }\n\n      resultado.preguntas.push(preguntaConRespuestas); //Añade la pregunta con sus respuestas al resultado fina\n    }\n\n    return resultado;\n  }\n  async obtenerEncuestaParaParticipacion(\n    id: number,\n    codigoParticipacion: string,\n  ): Promise {\n    // Buscar la encuesta por ID y código de participación\n    const encuesta = await this.encuestaRepository.findOne({\n      where: { id, codigoRespuesta: codigoParticipacion, habilitada: true },\n      relations: ['preguntas', 'preguntas.opciones'],\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException(\n        'Encuesta no encontrada o código de participación inválido',\n      );\n    }\n\n    // Convertir la entidad `Encuesta` a `CreateEncuestaDto`\n    return {\n      nombre: encuesta.nombre,\n      preguntas: encuesta.preguntas.map((pregunta) => ({\n        numero: pregunta.numero,\n        texto: pregunta.texto,\n        tipo: pregunta.tipo,\n        opciones: pregunta.opciones.map((opcion) => ({\n          id: opcion.id,\n          texto: opcion.texto,\n          numero: opcion.numero,\n        })),\n      })),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VisualizarRespuestasDto.html":{"url":"classes/VisualizarRespuestasDto.html","title":"class - VisualizarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VisualizarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codigoRespuesta\n                            \n                            \n                                codigoResultados\n                            \n                            \n                                id\n                            \n                            \n                                nombre\n                            \n                            \n                                preguntas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codigoRespuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PreguntaConRespuestasDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/controllers/encuestas.controller.ts\n            \n            controller\n            EncuestasController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/actualizar-pregunta.dto.ts\n            \n            class\n            ActualizarPreguntaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-encuesta-response.dto.ts\n            \n            class\n            CreateEncuestaResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-encuesta.dto.ts\n            \n            class\n            CreateEncuestaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-opcion.dto.ts\n            \n            class\n            CreateOpcionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-pregunta.dto.ts\n            \n            class\n            CreatePreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/obtener-encuesta.dto.ts\n            \n            class\n            ObtenerEncuestaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/encuesta.entity.ts\n            \n            entity\n            Encuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/opcion.entity.ts\n            \n            entity\n            Opcion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/pregunta.entity.ts\n            \n            entity\n            Pregunta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/respuesta.entity.ts\n            \n            entity\n            Respuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/services/encuestas.service.ts\n            \n            injectable\n            EncuestasService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/opciones/controllers/opciones.controller.ts\n            \n            controller\n            OpcionesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/opciones/services/opciones.service.ts\n            \n            injectable\n            OpcionesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/preguntas/controllers/preguntas.controller.ts\n            \n            controller\n            PreguntasController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/preguntas/entities/pregunta.entity.ts\n            \n            entity\n            Pregunta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/preguntas/services/preguntas.service.ts\n            \n            injectable\n            PreguntasService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/respuestas/controllers/respuestas.controller.ts\n            \n            controller\n            RespuestasController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n            \n            class\n            RegistrarRespuestasDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n            \n            class\n            RespuestaPreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n            \n            class\n            OpcionConRespuestasDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n            \n            class\n            PreguntaConRespuestasDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dtos.ts\n            \n            class\n            VisualizarRespuestasDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta-abierta.entity.ts\n            \n            entity\n            RespuestaAbierta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta-opcion.entity.ts\n            \n            entity\n            RespuestaOpcion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta.entity.ts\n            \n            entity\n            Respuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/services/respuestas.service.ts\n            \n            injectable\n            RespuestasService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.2\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.1.0\n        \n            node-fetch : ^3.3.2\n        \n            pg : ^8.14.1\n        \n            qrcode : ^1.5.4\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            shortid : ^2.2.17\n        \n            typeorm : ^0.3.24\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodigoTipoEnum   (src/.../codigo-tipo.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-respuesta.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-respuesta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/encuestas/enums/codigo-tipo.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CodigoTipoEnum\n                    \n                \n                        \n                            \n                                 RESULTADOS\n                            \n                        \n                        \n                            \n                                Value : RESULTADOS\n                            \n                        \n                        \n                            \n                                 RESPUESTA\n                            \n                        \n                        \n                            \n                                Value : RESPUESTA\n                            \n                        \n            \n        \n\n    src/modules/encuestas/enums/tipos-respuesta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n            \n        \n\n    src/modules/preguntas/enums/tipos-respuesta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncuestasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpcionesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreguntasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RespuestasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_EncuestasModule\n\n\n\ncluster_EncuestasModule_providers\n\n\n\ncluster_OpcionesModule\n\n\n\ncluster_OpcionesModule_providers\n\n\n\ncluster_PreguntasModule\n\n\n\ncluster_PreguntasModule_providers\n\n\n\ncluster_RespuestasModule\n\n\n\ncluster_RespuestasModule_exports\n\n\n\ncluster_RespuestasModule_providers\n\n\n\n\nEncuestasModule\n\nEncuestasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEncuestasModule->AppModule\n\n\n\n\n\nOpcionesModule\n\nOpcionesModule\n\nAppModule -->\n\nOpcionesModule->AppModule\n\n\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nAppModule -->\n\nPreguntasModule->AppModule\n\n\n\n\n\nRespuestasModule\n\nRespuestasModule\n\nEncuestasModule -->\n\nRespuestasModule->EncuestasModule\n\n\n\nAppModule -->\n\nRespuestasModule->AppModule\n\n\n\n\n\nRespuestasService \n\nRespuestasService \n\nRespuestasService  -->\n\nRespuestasModule->RespuestasService \n\n\n\n\n\nEncuestasService\n\nEncuestasService\n\nEncuestasModule -->\n\nEncuestasService->EncuestasModule\n\n\n\n\n\nOpcionesService\n\nOpcionesService\n\nOpcionesModule -->\n\nOpcionesService->OpcionesModule\n\n\n\n\n\nPreguntasService\n\nPreguntasService\n\nPreguntasModule -->\n\nPreguntasService->PreguntasModule\n\n\n\n\n\nRespuestasService\n\nRespuestasService\n\nRespuestasModule -->\n\nRespuestasService->RespuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
