var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ActualizarPreguntaDto.html",[0,0.09,1,1.904]],["body/classes/ActualizarPreguntaDto.html",[0,0.132,1,2.818,2,1.296,3,0.324,4,0.281,5,0.281,6,4.478,7,2.681,8,0.369,9,0.971,10,2.547,11,1.779,12,1.715,13,0.543,14,0.03,15,1.055,16,1.145,17,3.072,18,0.673,19,3.667,20,2.547,21,3.667,22,3.667,23,0.424,24,3.481,25,2.563,26,2.681,27,1.648,28,3.667,29,1.082,30,0.681,31,1.518,32,1.145,33,1.833,34,2.681,35,1.793,36,3.123,37,0.875,38,1.199,39,2.155,40,0.642,41,0.971,42,3.072,43,1.296,44,2.681,45,1.342,46,1.082,47,3.667,48,3.072,49,0.324,50,4.018,51,1.353,52,2.155,53,2.155,54,3.506,55,4.018,56,2.563,57,0.875,58,2.818,59,2.563,60,2.388,61,4.796,62,0.742,63,3.072,64,1.199,65,2.681,66,0.022,67,0.022]],["title/modules/AppModule.html",[68,1.342,69,2.11]],["body/modules/AppModule.html",[0,0.072,3,0.231,4,0.2,5,0.2,12,1.148,13,0.296,14,0.031,23,0.495,29,1.1,30,0.705,32,0.906,37,0.906,40,0.736,43,0.924,49,0.231,51,0.624,54,1.911,57,1.371,59,1.397,62,0.942,64,1.241,66,0.017,67,0.017,68,1.851,69,3.873,70,1.278,71,1.278,72,1.536,73,1.536,74,1.278,75,1.536,76,1.536,77,2.19,78,2.19,79,3.193,80,3.193,81,3.193,82,2.23,83,1.536,84,1.397,85,2.614,86,2.911,87,0.924,88,0.999,89,2.614,90,3.13,91,0.906,92,1.278,93,3.796,94,4.905,95,2.19,96,0.768,97,1.706,98,1.397,99,2.614,100,3.796,101,2.614,102,4.47,103,3.741,104,2.614,105,2.614,106,2.029,107,1.702,108,1.175,109,1.702,110,1.062,111,2.614,112,2.614,113,3.796,114,0.791,115,2.614,116,2.614,117,2.614,118,3.796,119,2.614,120,2.19,121,2.614,122,2.029,123,2.614,124,2.614,125,2.614,126,2.614,127,2.614,128,2.19,129,2.614,130,2.614,131,1.397,132,3.796,133,3.796,134,2.614,135,2.196,136,1.737,137,2.614,138,2.614,139,2.614,140,2.614,141,2.614,142,2.614,143,2.614,144,2.614,145,3.796,146,2.614,147,2.614,148,2.614,149,2.614,150,2.614,151,2.614,152,2.19,153,2.614,154,2.614,155,2.614,156,2.614,157,2.614,158,1.082,159,2.614,160,1.911,161,2.614,162,2.614,163,2.614,164,2.614,165,2.614,166,2.19,167,1.702,168,1.911,169,2.614,170,2.614,171,2.19,172,1.082,173,2.19,174,2.614,175,2.614,176,3.796,177,2.614,178,1.082,179,2.614,180,2.614]],["title/classes/CreateEncuestaDto.html",[0,0.09,181,1.904]],["body/classes/CreateEncuestaDto.html",[0,0.135,2,1.081,3,0.27,4,0.234,5,0.234,8,0.307,9,0.859,11,0.925,13,0.626,14,0.031,15,0.934,16,1.013,18,0.595,23,0.465,25,2.268,27,1.374,29,1.119,30,0.788,31,1.757,32,1.163,33,1.863,40,0.648,43,1.081,45,1.363,49,0.27,51,1.366,53,1.907,56,3.058,57,1.32,58,2.863,59,2.605,60,1.991,62,0.855,64,1.721,65,2.235,66,0.019,67,0.019,88,1.169,91,1.257,96,0.619,114,1.731,122,1.634,158,2.289,181,2.493,182,3.174,183,2.235,184,2.235,185,3.058,186,3.896,187,2.562,188,3.058,189,2.235,190,3.058,191,3.174,192,1.634,193,1.991,194,3.174,195,1.374,196,2.562,197,2.562,198,2.562,199,2.562,200,2.562,201,3.058,202,4.243,203,2.763,204,2.268,205,2.763,206,1.991,207,2.562,208,2.235,209,1.257,210,1.797,211,1.991,212,1.991,213,1.797,214,2.763,215,2.493,216,2.763,217,1.374,218,4.794,219,3.058,220,3.058,221,1.496,222,2.562,223,3.174,224,1.991,225,1.907,226,2.235,227,1.991,228,1.991,229,2.235,230,2.562,231,2.235]],["title/classes/CreateOpcionDto.html",[0,0.09,232,2.11]],["body/classes/CreateOpcionDto.html",[0,0.13,2,1.265,3,0.316,4,0.274,5,0.274,8,0.36,9,0.956,11,1.813,13,0.535,14,0.03,15,1.039,16,1.127,18,0.662,23,0.417,25,2.523,27,1.609,29,1.069,30,0.665,31,1.955,32,0.855,33,1.805,40,0.598,43,1.265,45,1.321,49,0.316,51,1.394,53,2.121,56,3.002,57,1.394,58,3.3,59,2.523,60,2.331,62,0.869,64,1.17,66,0.022,67,0.022,88,1.368,91,1.261,172,1.482,182,3.44,184,2.617,191,3.44,192,1.913,193,2.331,194,3.44,204,2.823,206,2.331,210,2.103,211,2.331,212,2.331,213,2.103,214,3.074,215,2.774,216,3.074,232,3.074,233,2.999,234,2.523,235,1.039,236,2.999,237,3.58,238,3.58,239,3.074,240,2.187,241,2.523,242,1.609,243,2.999,244,2.999]],["title/classes/CreatePreguntaDto.html",[0,0.09,186,2.11]],["body/classes/CreatePreguntaDto.html",[0,0.121,2,0.891,3,0.223,4,0.193,5,0.193,7,1.844,8,0.254,9,0.749,11,1.623,12,1.119,13,0.628,14,0.031,15,0.814,16,1.151,18,0.677,20,2.167,23,0.454,24,2.409,25,1.977,26,1.844,27,1.133,29,1.123,30,0.687,31,1.531,32,1.046,33,1.674,34,1.844,35,1.234,36,1.643,38,1.209,39,1.482,40,0.657,41,0.749,43,0.891,45,1.349,46,1.086,49,0.223,51,1.408,52,1.133,53,2.307,55,3.099,56,3.102,57,1.385,58,3.258,59,2.869,60,1.643,62,0.88,63,2.114,64,1.679,65,1.844,66,0.017,67,0.017,88,0.964,91,1.324,96,0.511,122,1.348,160,1.844,172,1.044,182,3.344,184,1.844,186,2.409,187,2.114,189,1.844,191,3.344,192,1.348,193,1.643,194,3.344,195,1.133,196,2.114,197,2.114,198,2.114,199,2.114,200,2.114,203,2.409,204,2.578,205,2.409,206,1.643,207,2.114,210,1.482,211,1.643,212,1.643,213,1.482,214,3.141,215,2.573,216,2.852,217,1.662,218,4.041,223,2.409,224,1.643,225,1.662,226,1.844,227,1.643,228,1.643,229,1.844,231,1.844,232,3.704,234,2.167,235,0.814,236,2.114,239,2.409,241,1.977,242,1.133,243,2.114,244,2.114,245,1.754,246,4.379,247,2.523,248,1.844,249,3.699,250,2.523,251,2.523,252,2.523,253,2.114,254,2.523,255,2.523,256,2.852,257,2.114,258,2.523,259,1.482,260,1.844,261,2.114,262,2.114]],["title/entities/Encuesta.html",[209,0.774,263,0.98]],["body/entities/Encuesta.html",[0,0.112,3,0.252,4,0.218,5,0.218,8,0.286,9,0.817,13,0.633,14,0.031,15,1.231,16,1.335,18,0.785,23,0.414,29,0.817,30,0.529,31,1.179,32,0.68,37,0.964,40,0.61,43,1.006,45,1.312,46,1.19,49,0.252,50,2.386,51,0.68,52,1.28,53,1.28,57,0.68,62,0.972,66,0.018,67,0.018,88,1.089,91,1.286,96,0.576,106,2.158,110,1.129,114,1.543,122,2.158,131,1.522,135,1.089,136,0.861,158,2.23,166,2.386,172,1.179,178,2.23,195,1.28,209,1.218,215,1.673,217,1.814,221,1.974,235,0.888,248,2.082,259,1.673,263,1.221,264,1.393,265,2.386,266,2.506,267,2.506,268,3.729,269,1.427,270,4.037,271,4.689,272,2.848,273,2.848,274,2.848,275,2.951,276,2.848,277,2.848,278,2.506,279,2.848,280,2.99,281,2.848,282,2.386,283,4.037,284,3.382,285,2.848,286,1.657,287,1.179,288,1.855,289,2.951,290,2.112,291,2.082,292,2.386,293,3.428,294,2.082,295,2.082,296,1.533,297,3.937,298,2.082,299,2.082,300,2.082,301,2.293,302,2.386,303,2.082,304,2.848,305,1.28,306,2.082,307,2.082,308,4.037,309,2.082,310,2.082,311,1.393,312,2.082,313,2.082,314,2.082,315,2.082,316,1.673,317,2.082,318,2.082,319,2.848]],["title/controllers/EncuestasController.html",[320,1.585,321,2.11]],["body/controllers/EncuestasController.html",[0,0.07,3,0.223,4,0.194,5,0.194,8,0.254,10,1.971,12,0.765,13,0.497,14,0.031,16,1.047,18,0.615,23,0.454,29,1.195,30,0.47,32,1.153,33,2.122,37,0.604,38,1.212,40,0.678,41,0.75,45,1.438,49,0.223,57,1.153,62,0.831,64,1.434,66,0.017,67,0.017,87,0.894,92,1.237,96,0.888,97,2.17,98,1.352,106,2.872,131,1.352,136,0.765,171,2.12,172,1.816,173,2.12,178,2,181,2.838,209,1.359,213,2.578,221,1.813,235,1.182,268,3.531,269,1.593,275,3.207,286,1.817,287,1.048,290,1.048,296,1.434,305,1.137,311,1.237,315,1.85,316,1.487,317,1.85,318,1.85,320,1.237,321,2.414,322,1.237,323,2.12,324,1.85,325,1.981,326,3.104,327,4.387,328,3.106,329,3.676,330,2.53,331,3.707,332,2.53,333,2.345,334,2.345,335,2.872,336,2.12,337,4.047,338,2.53,339,2.12,340,3.146,341,3.707,342,2.53,343,1.487,344,1.487,345,1.85,346,1.85,347,3.106,348,3.676,349,2.345,350,2.12,351,2.12,352,3.106,353,3.207,354,2.53,355,1.85,356,2.53,357,1.487,358,1.487,359,1.85,360,1.648,361,1.648,362,3.676,363,1.85,364,2.53,365,3.106,366,2.71,367,2.12,368,2.345,369,2.578,370,2.53,371,1.85,372,3.106,373,2.838,374,3.106,375,2.71,376,2.53,377,2.12,378,2.53,379,2.53,380,2.53,381,2.414,382,2.178,383,2.53,384,2.53,385,2.53,386,1.85,387,2.12,388,2.53,389,1.648,390,2.53]],["title/modules/EncuestasModule.html",[68,1.342,79,1.904]],["body/modules/EncuestasModule.html",[0,0.087,3,0.277,4,0.24,5,0.24,14,0.031,23,0.522,29,1.167,30,0.917,32,0.748,37,1.178,38,1.411,40,0.729,46,0.999,49,0.277,51,1.376,62,0.956,66,0.02,67,0.02,68,2.044,70,1.532,71,1.532,72,1.841,73,1.841,74,1.532,75,2.9,76,1.841,79,3.387,82,2.535,83,1.841,84,1.675,86,2.04,87,1.107,90,2.843,91,1.27,92,1.532,96,0.634,97,1.408,98,1.675,103,2.04,106,2.638,107,2.04,108,1.408,109,2.04,110,1.207,135,2.033,136,1.609,167,2.04,209,1.03,240,1.297,242,2.218,286,1.525,287,1.297,290,2.044,301,2.414,305,1.939,321,3.214,322,2.11,343,2.9,344,2.535,349,3.081,350,2.625,355,2.29,357,1.841,358,2.535,391,2.625,392,2.625,393,3.133,394,3.133,395,3.155,396,3.155,397,3.133,398,1.525,399,3.133,400,2.81,401,2.29,402,3.133,403,3.155,404,2.29,405,2.29,406,2.29,407,2.29,408,2.29,409,2.29,410,1.841,411,2.29,412,2.29]],["title/injectables/EncuestasService.html",[349,1.732,413,1.585]],["body/injectables/EncuestasService.html",[0,0.053,3,0.169,4,0.147,5,0.147,8,0.193,10,1.882,12,0.908,13,0.474,14,0.031,15,0.814,18,0.588,23,0.446,29,1.133,30,0.896,31,0.793,32,1.152,33,1.739,37,0.457,38,1.369,39,1.126,40,0.694,41,0.388,42,1.605,43,0.677,45,1.35,46,0.388,48,1.605,49,0.169,51,0.457,52,0.861,57,0.884,62,0.942,64,1.487,66,0.014,67,0.014,87,0.677,88,1.147,91,0.457,96,0.749,97,0.861,106,1.024,108,0.861,110,1.035,114,1.119,131,1.604,135,0.732,136,1.119,172,0.793,181,2.461,209,1.513,213,1.764,217,0.861,227,1.248,229,1.401,235,1.062,241,1.024,245,0.981,256,1.248,266,1.604,267,1.604,268,3.527,269,1.592,275,2.706,286,1.607,290,1.243,296,1.369,301,0.937,305,0.861,311,2.049,315,1.401,316,1.126,317,1.401,318,1.401,325,1.604,326,2.869,328,2.515,329,3.101,333,2.239,334,1.978,335,2.579,336,2.515,339,1.605,348,1.605,349,1.604,351,1.605,352,1.605,353,2.194,355,1.401,361,1.248,363,2.194,366,2.706,367,1.605,368,1.978,369,2.461,371,2.706,373,1.126,377,2.515,381,3.285,382,1.764,389,1.955,413,1.468,414,1.248,415,1.605,416,3.701,417,1.604,418,1.916,419,2.728,420,1.916,421,2.515,422,1.916,423,1.916,424,1.916,425,3.687,426,4.189,427,4.189,428,4.189,429,1.916,430,1.605,431,1.605,432,1.605,433,1.401,434,2.515,435,1.916,436,1.916,437,1.916,438,3.701,439,1.401,440,1.401,441,1.605,442,1.605,443,1.605,444,1.605,445,1.605,446,1.401,447,2.194,448,1.916,449,2.962,450,1.916,451,1.916,452,3.002,453,2.515,454,0.732,455,1.401,456,1.916,457,3.002,458,1.916,459,1.916,460,1.916,461,1.916,462,1.916,463,1.916,464,1.916,465,1.916,466,1.916,467,3.002,468,1.916,469,1.916,470,1.916,471,3.002,472,1.916,473,1.916,474,3.002,475,1.916,476,3.002,477,1.916,478,1.916,479,1.916,480,3.002,481,1.916,482,1.916,483,1.916,484,3.002,485,2.515,486,2.515,487,2.194,488,1.955,489,1.916,490,1.955,491,1.401,492,1.605,493,1.916,494,1.916,495,1.916,496,1.916,497,2.194,498,1.401,499,1.605,500,1.916,501,1.605]],["title/classes/ObtenerEncuestaDto.html",[0,0.09,340,2.11]],["body/classes/ObtenerEncuestaDto.html",[0,0.126,2,1.195,3,0.299,4,0.259,5,0.259,8,0.34,9,0.92,12,1.733,13,0.515,14,0.03,15,1,16,1.085,18,0.638,23,0.454,26,2.473,27,1.52,29,1.16,30,0.628,31,1.882,32,0.808,33,1.738,36,2.203,38,1.486,39,1.987,40,0.581,41,0.685,43,1.195,45,0.946,49,0.299,51,1.311,53,2.043,56,2.935,57,1.368,58,3.226,59,2.43,62,0.794,64,1.486,66,0.021,67,0.021,88,1.293,91,1.311,172,1.4,183,2.473,191,3.344,192,1.808,193,2.203,194,3.344,204,2.745,206,2.203,209,1.085,210,1.987,211,2.203,212,2.203,214,2.961,215,2.671,216,2.961,217,1.52,253,2.834,256,3.344,257,2.834,259,1.987,260,2.473,261,2.834,340,2.961,353,2.473,381,3.344,382,1.987,410,1.987,425,4.014,439,2.473,440,4.014,441,2.834,442,2.834,453,2.834,502,4.302,503,3.383,504,3.383,505,3.383,506,3.383,507,3.383,508,3.383,509,3.383,510,2.834,511,3.383,512,3.383,513,3.383]],["title/entities/Opcion.html",[263,0.98,398,1.145]],["body/entities/Opcion.html",[0,0.117,3,0.269,4,0.233,5,0.233,8,0.306,9,0.856,11,1.588,13,0.595,14,0.031,15,0.93,16,1.254,18,0.737,23,0.464,29,0.616,31,1.259,32,0.726,37,1.009,40,0.625,43,1.075,45,1.183,46,1.244,49,0.269,51,0.726,52,1.899,53,1.366,57,0.726,62,0.988,66,0.019,67,0.019,88,1.162,90,1.625,91,1.254,96,0.616,110,1.183,135,1.162,136,0.92,158,1.259,178,2.285,195,1.366,217,2.183,221,2.067,234,2.359,235,1.156,240,1.259,245,1.382,259,1.787,263,1.279,264,1.487,269,1.469,278,2.597,280,2.95,286,1.717,287,1.259,288,1.981,289,3.09,290,2.174,291,2.223,292,2.548,293,3.552,294,2.223,295,2.223,296,1.382,297,3.839,298,3.09,299,2.223,300,2.223,301,2.067,306,2.223,307,2.223,309,2.223,310,2.223,311,2.067,312,2.223,313,2.223,314,2.223,316,1.787,398,1.494,454,1.616,514,2.548,515,3.041,516,3.041,517,1.787,518,3.041,519,3.041,520,3.041,521,2.484,522,2.484,523,2.597,524,1.625,525,1.981,526,2.484,527,2.548,528,2.548,529,2.223,530,2.223,531,3.041]],["title/classes/OpcionConRespuestasDto.html",[0,0.09,532,1.904]],["body/classes/OpcionConRespuestasDto.html",[0,0.149,2,1.322,3,0.33,4,0.286,5,0.286,8,0.376,9,0.984,11,1.728,12,1.132,13,0.647,14,0.03,15,1.359,18,0.801,20,2.183,23,0.33,30,0.695,35,1.83,37,0.893,40,0.55,41,0.757,46,0.757,49,0.477,62,0.752,66,0.022,67,0.022,96,0.757,114,1.132,158,1.549,178,1.549,209,1.16,225,1.681,234,2.567,235,1.393,242,2.183,245,1.588,266,2,267,2,269,1.656,417,2,454,1.43,532,3.171,533,3.856,534,2,535,3.515,536,3.742,537,3.742,538,3.742,539,3.135,540,2.198,541,2,542,1.83,543,2.597,544,2.735,545,2.735,546,2.735,547,2.735,548,2.735,549,2.437,550,2.735,551,2.735]],["title/entities/Pregunta.html",[46,0.656,263,0.98]],["body/entities/Pregunta.html",[0,0.1,3,0.218,4,0.189,5,0.189,8,0.248,9,0.736,11,1.443,12,1.539,13,0.623,14,0.031,15,0.801,16,1.271,18,0.747,20,2.286,23,0.47,29,0.875,31,1.021,32,0.869,34,1.803,35,1.206,36,3.107,37,1.032,38,0.806,39,1.449,40,0.664,41,0.736,43,0.871,45,1.209,46,1.03,49,0.218,51,0.589,52,1.942,53,1.635,57,1.032,62,0.987,64,0.806,66,0.017,67,0.017,88,0.943,90,1.318,91,1.215,96,0.499,110,1.018,114,1.1,135,0.943,136,0.746,158,1.021,178,2.204,195,1.108,209,1.401,217,2.144,221,2.333,230,2.066,231,1.803,234,2.144,235,1.05,245,1.56,248,1.803,256,2.369,259,2.137,262,2.066,263,1.1,264,1.206,269,1.335,278,2.31,280,2.846,282,2.066,284,3.048,286,1.798,287,1.021,288,1.606,289,3.16,290,2.28,291,2.659,293,3.488,294,1.803,295,1.803,296,1.189,297,3.719,298,2.659,299,1.803,300,1.803,301,1.779,302,2.066,306,2.659,307,2.659,309,2.659,310,2.659,311,2.114,312,2.659,313,2.659,314,2.659,316,1.449,398,1.997,454,0.943,517,1.449,521,2.137,522,2.137,524,1.318,525,1.606,527,2.066,528,2.066,529,1.803,530,1.803,552,2.066,553,2.466,554,2.466,555,2.466,556,2.466,557,3.638,558,2.466,559,2.466,560,2.066,561,2.466,562,2.466,563,2.31,564,1.803,565,2.466,566,2.659,567,2.466,568,2.066]],["title/classes/PreguntaConRespuestasDto.html",[0,0.09,543,1.732]],["body/classes/PreguntaConRespuestasDto.html",[0,0.146,2,1.262,3,0.316,4,0.274,5,0.274,8,0.359,9,0.954,11,1.697,12,1.596,13,0.678,14,0.03,15,1.365,18,0.857,20,2.371,23,0.316,30,0.663,35,1.747,37,0.853,40,0.534,41,0.723,46,0.723,49,0.466,62,0.729,66,0.022,67,0.022,96,0.723,114,1.08,158,1.479,178,1.479,209,1.125,225,1.605,234,2.521,235,1.365,242,2.118,245,1.834,266,1.909,267,1.909,269,1.632,417,2.82,454,1.365,532,3.1,533,4.038,534,1.909,535,2.326,540,2.099,541,1.909,542,1.747,543,2.82,544,2.611,545,3.857,546,2.611,547,2.611,548,2.611,549,2.326,550,2.611,551,2.611,569,4.714,570,3.572,571,3.572,572,3.572,573,2.993,574,3.572]],["title/controllers/PreguntasController.html",[320,1.585,575,2.11]],["body/controllers/PreguntasController.html",[0,0.072,1,3.053,3,0.229,4,0.199,5,0.199,8,0.261,10,2.001,13,0.504,14,0.03,16,1.063,18,0.625,23,0.393,29,1.052,30,0.482,32,1.295,33,0.993,37,0.902,38,0.849,40,0.673,44,2.762,45,1.566,46,1.098,49,0.229,51,0.902,56,1.388,57,1.295,62,0.804,64,1.456,66,0.017,67,0.017,87,0.918,91,1.063,92,1.27,96,1.133,97,2.335,98,1.388,114,1.479,136,0.786,178,2.025,208,1.899,221,2.178,227,1.692,235,1.287,241,2.381,245,1.235,269,1.683,286,1.574,287,1.075,296,1.456,305,1.167,311,1.27,320,1.27,322,1.27,324,1.899,325,2.02,326,3.125,333,2.381,334,2.381,335,2.898,343,1.526,344,1.526,345,2.762,346,1.899,347,3.166,357,1.526,358,1.526,359,1.899,360,1.692,361,1.692,362,3.732,365,3.732,368,2.381,371,1.899,372,3.732,373,2.617,374,3.732,375,3.256,386,1.899,398,1.335,447,3.256,541,2.02,575,2.461,576,2.177,577,4.098,578,3.732,579,4.454,580,2.598,581,4.891,582,3.779,583,2.598,584,2.598,585,3.779,586,2.598,587,2.598,588,3.779,589,2.598,590,4.454,591,4.891,592,2.381,593,2.598,594,2.177,595,2.598,596,4.891,597,4.454,598,2.598,599,2.598,600,2.598,601,2.177,602,2.598,603,3.166,604,3.166,605,2.177,606,2.598,607,2.598]],["title/modules/PreguntasModule.html",[68,1.342,80,1.904]],["body/modules/PreguntasModule.html",[0,0.09,3,0.286,4,0.248,5,0.248,14,0.03,23,0.515,29,1.179,30,0.933,32,0.774,37,1.2,38,1.444,40,0.729,46,0.894,49,0.286,51,1.348,62,0.939,66,0.02,67,0.02,68,2.081,70,1.586,71,1.586,72,1.906,73,1.906,74,1.586,75,2.953,76,1.906,80,3.423,82,2.596,83,1.906,84,1.734,86,2.112,87,1.146,90,2.884,91,1.2,92,1.586,96,0.657,97,1.457,98,1.734,103,2.112,107,2.112,108,1.457,109,2.112,110,1.236,114,1.52,135,1.921,136,1.52,167,2.112,240,1.343,242,1.985,286,1.561,287,1.343,290,1.829,301,2.161,305,1.985,322,2.161,343,2.953,344,2.596,357,1.906,358,2.596,395,3.23,396,3.23,398,1.561,400,2.878,401,2.371,403,3.23,404,2.371,405,2.371,406,2.371,407,2.371,408,2.371,409,2.371,410,1.906,411,2.371,412,2.371,575,3.273,592,3.114,608,2.718,609,2.718,610,3.244,611,2.718,612,2.718,613,3.244,614,3.244,615,3.244]],["title/injectables/PreguntasService.html",[413,1.585,592,1.732]],["body/injectables/PreguntasService.html",[0,0.062,1,2.682,3,0.199,4,0.173,5,0.173,8,0.227,10,2.051,13,0.517,14,0.031,18,0.64,23,0.455,29,0.992,30,0.419,32,1.09,33,0.862,37,0.538,38,0.737,40,0.66,43,0.797,44,2.487,45,1.441,46,1.258,49,0.199,51,0.538,52,1.013,62,0.914,64,1.492,66,0.016,67,0.016,87,0.797,88,1.301,91,0.538,96,0.456,97,1.013,108,1.013,110,1.146,131,2.19,135,0.862,136,0.682,208,1.648,217,1.013,235,1.239,240,1.89,245,1.492,260,1.648,269,1.441,286,1.613,290,2.132,296,1.492,305,1.013,311,1.664,325,1.819,326,3.01,333,2.439,334,2.19,335,2.753,360,2.216,361,2.216,366,2.996,368,2.19,369,3.141,389,2.216,398,1.731,413,1.664,414,1.468,417,1.819,419,3.482,431,1.889,432,1.889,433,1.648,434,3.433,443,1.889,444,1.889,446,2.487,447,2.996,449,2.669,455,1.648,485,3.433,486,3.433,487,2.996,488,2.669,490,2.669,491,2.996,497,3.765,498,2.996,501,3.433,541,1.819,577,3.433,578,2.851,592,1.819,594,1.889,601,1.889,603,2.851,604,2.851,605,1.889,611,1.889,612,1.889,616,1.889,617,4.098,618,2.255,619,4.098,620,2.255,621,3.403,622,2.255,623,4.564,624,2.255,625,5.346,626,3.403,627,2.255,628,2.851,629,2.255,630,2.255,631,1.889,632,1.889,633,1.889,634,2.255,635,3.403,636,3.433,637,3.433,638,2.255,639,2.255,640,2.255,641,3.403,642,2.255,643,1.889,644,2.255,645,1.889,646,1.889,647,1.648,648,2.255,649,2.255,650,3.403,651,2.255,652,2.255,653,2.255]],["title/classes/RegistrarRespuestasDto.html",[0,0.09,654,1.732]],["body/classes/RegistrarRespuestasDto.html",[0,0.16,2,1.372,3,0.343,4,0.297,5,0.297,8,0.39,9,1.007,11,1.174,12,1.505,13,0.678,14,0.031,15,1.095,16,0.927,18,0.545,23,0.44,24,3.577,25,2.936,27,1.744,40,0.44,49,0.44,57,0.927,66,0.023,67,0.023,114,1.505,122,2.66,195,1.744,203,3.577,204,3.096,205,3.241,223,2.528,224,3.241,225,1.744,228,3.241,235,1.209,239,3.577,240,1.607,241,2.075,245,1.269,454,2.099,526,2.281,534,2.075,654,2.66,655,2.924,656,3.772,657,3.882,658,3.882,659,3.882,660,3.252,661,2.528,662,2.838,663,2.838,664,2.838,665,3.252]],["title/entities/Respuesta.html",[41,0.656,263,0.98]],["body/entities/Respuesta.html",[0,0.117,3,0.373,4,0.324,5,0.324,8,0.425,9,1.063,13,0.647,14,0.03,16,1.364,18,0.801,23,0.464,41,1.063,49,0.373,66,0.024,67,0.024,110,1.183,209,1.516,235,1.315,263,1.279,264,2.068,269,1.598,278,3.054,280,2.26,296,1.382,517,2.484,521,3.086,522,3.086,566,4.492,666,3.543,667,4.229,668,4.229,669,3.839,670,4.229,671,3.091,672,4.229]],["title/entities/RespuestaAbierta.html",[263,0.98,563,1.732]],["body/entities/RespuestaAbierta.html",[0,0.098,3,0.314,4,0.272,5,0.272,8,0.358,9,0.952,11,1.593,13,0.691,14,0.031,15,1.034,16,1.429,18,0.839,23,0.465,40,0.532,41,1.235,46,1.235,49,0.314,66,0.021,67,0.021,96,0.72,110,1.315,160,3.436,235,1.317,263,1.076,264,1.74,269,1.473,278,2.814,280,2.513,286,1.257,287,1.473,288,2.316,296,1.537,517,2.762,521,3.094,522,3.094,524,3.262,526,3.422,560,2.98,563,2.513,669,4.095,673,2.98,674,4.258,675,3.557,676,3.557,677,3.557,678,3.557,679,3.557,680,4.701,681,4.701,682,3.557,683,2.6,684,2.98,685,3.557]],["title/entities/RespuestaOpcion.html",[263,0.98,523,1.732]],["body/entities/RespuestaOpcion.html",[0,0.105,3,0.336,4,0.291,5,0.291,8,0.382,9,0.994,13,0.674,14,0.031,16,1.421,18,0.835,23,0.48,41,1.255,49,0.336,66,0.022,67,0.022,110,1.064,235,1.341,263,1.15,264,1.859,269,1.521,278,2.907,280,2.032,296,1.605,398,2.191,517,2.885,521,3.195,522,3.195,523,2.624,524,3.257,669,4.201,674,4.35,684,3.185,686,3.185,687,4.986,688,3.802,689,3.802,690,3.802,691,3.802,692,3.802,693,2.779,694,3.802]],["title/classes/RespuestaPreguntaDto.html",[0,0.09,656,2.11]],["body/classes/RespuestaPreguntaDto.html",[0,0.154,2,1.249,3,0.312,4,0.271,5,0.271,8,0.355,9,0.948,10,2.511,11,1.587,12,1.69,13,0.701,14,0.031,15,1.155,16,1.334,17,2.961,18,0.784,23,0.413,24,3.418,25,2.805,27,1.588,40,0.4,49,0.413,57,0.844,66,0.021,67,0.021,114,1.416,122,2.502,189,2.584,195,1.588,203,3.418,204,2.986,205,3.048,223,2.302,224,3.418,225,1.588,228,3.048,235,1.279,239,3.418,240,1.463,241,1.889,245,1.716,454,1.351,526,3.084,534,1.889,539,2.961,573,2.961,654,1.889,655,3.415,656,3.639,660,2.961,661,3.048,662,3.422,663,3.422,664,2.584,665,2.961,695,3.534,696,3.534,697,3.534,698,3.534,699,3.534]],["title/controllers/RespuestasController.html",[320,1.585,700,2.11]],["body/controllers/RespuestasController.html",[0,0.069,3,0.222,4,0.192,5,0.192,8,0.252,10,1.656,13,0.58,14,0.03,15,1.179,16,0.88,18,0.517,23,0.453,29,0.746,30,0.685,38,0.821,40,0.707,41,0.746,45,1.434,49,0.222,57,1.043,62,0.745,66,0.017,67,0.017,87,0.887,91,0.6,120,2.104,136,1.115,168,3.193,172,1.992,192,1.342,209,1.384,210,1.475,296,1.573,303,1.836,320,1.228,322,1.228,324,1.836,325,1.97,326,2.864,333,1.97,334,1.97,335,2.572,337,2.104,345,2.695,346,1.836,359,1.836,360,1.635,368,1.97,369,2.166,373,1.475,375,1.836,382,2.566,386,1.836,387,2.104,449,1.635,454,2.333,490,3.134,498,1.836,542,1.803,637,4.032,654,3.098,655,1.475,700,2.401,701,2.104,702,3.66,703,4.368,704,2.511,705,2.511,706,4.368,707,3.686,708,5.126,709,4.5,710,5.358,711,4.368,712,4.032,713,2.511,714,2.511,715,3.686,716,2.511,717,4.032,718,2.511,719,3.686,720,3.686,721,2.511,722,2.511,723,2.511,724,4.368,725,4.813,726,3.089,727,2.511,728,3.686,729,3.686,730,4.813,731,2.511,732,3.66,733,2.511,734,2.511,735,2.511,736,2.335,737,2.511,738,3.089,739,2.104,740,2.511,741,4.368,742,4.368,743,3.686,744,5.358,745,2.511,746,2.511,747,2.511,748,2.104,749,2.511,750,3.686,751,2.511,752,5.126,753,2.511,754,3.66,755,2.511,756,3.686,757,2.511,758,2.511,759,2.511,760,3.089,761,2.511]],["title/modules/RespuestasModule.html",[68,1.342,81,1.904]],["body/modules/RespuestasModule.html",[0,0.077,3,0.245,4,0.213,5,0.213,14,0.031,23,0.532,29,1.123,30,0.859,32,0.663,37,1.104,38,1.296,40,0.727,41,1.123,46,0.936,49,0.245,51,1.419,62,0.98,66,0.018,67,0.018,68,1.914,70,1.358,71,1.358,72,1.631,73,1.631,74,1.358,75,2.717,76,2.717,81,3.354,82,2.329,83,1.631,84,1.484,86,1.808,87,0.981,90,2.696,91,1.363,92,1.358,96,0.562,97,1.247,98,1.484,103,1.808,106,1.484,107,1.808,108,1.247,109,1.808,110,1.109,135,2.182,136,1.727,167,1.808,209,1.104,240,1.149,242,2.492,286,1.401,287,1.149,290,2.296,301,2.713,305,1.781,322,1.939,343,2.717,344,2.329,357,1.631,358,2.329,395,2.898,396,2.898,398,1.401,400,2.582,401,2.029,403,2.898,404,2.029,405,2.029,406,2.029,407,2.029,408,2.029,409,2.029,410,1.631,411,2.029,412,2.029,523,2.119,525,1.808,563,2.119,564,2.029,661,1.808,671,2.029,683,2.029,693,2.029,700,3.011,736,3.293,762,2.326,763,2.326,764,2.326,765,2.776,766,2.776,767,2.776,768,2.776,769,3.964,770,2.776,771,2.776]],["title/injectables/RespuestasService.html",[413,1.585,736,1.732]],["body/injectables/RespuestasService.html",[0,0.047,3,0.149,4,0.129,5,0.129,8,0.169,10,1.528,11,1.028,12,0.509,13,0.385,14,0.031,15,1.004,18,0.477,20,0.757,23,0.494,29,0.688,30,0.926,33,1.036,35,0.824,37,0.93,40,0.642,41,0.789,45,1.195,46,1.07,49,0.149,51,0.402,52,0.757,54,1.231,57,0.93,62,0.835,64,0.886,66,0.012,67,0.012,87,0.595,91,0.812,96,0.549,108,0.757,110,0.471,114,1.291,131,1.448,135,1.036,136,0.82,152,1.411,158,0.697,168,1.231,172,1.613,209,1.335,221,1.663,222,1.411,225,0.757,226,1.231,234,0.757,240,0.697,245,0.551,266,1.448,267,1.448,269,1.276,296,1.111,303,1.231,325,1.448,326,2.438,333,1.817,334,1.448,335,2.082,363,1.231,368,0.9,369,3.025,373,1.592,381,1.097,389,1.097,398,1.695,400,1.097,410,0.99,413,1.325,414,1.097,417,1.448,419,3.877,421,2.849,425,1.981,430,3.822,433,1.231,445,1.411,446,3.335,449,3.777,454,1.833,455,1.981,487,3.506,488,3.248,490,2.537,491,1.981,492,2.27,497,1.981,499,1.411,523,1.448,524,1.448,525,1.097,526,1.592,529,1.981,530,1.231,535,1.097,540,0.99,541,0.9,542,2.088,543,1.448,549,1.097,563,0.9,564,1.231,566,1.231,568,2.27,628,3.264,631,1.411,632,1.411,633,1.411,636,2.27,643,1.411,645,2.27,646,1.411,647,1.981,654,2.082,655,0.99,664,2.485,671,1.231,674,1.981,683,1.231,687,2.27,693,1.231,702,2.849,717,2.27,726,1.411,732,1.411,736,1.448,738,2.849,739,2.27,748,1.411,754,1.411,760,2.849,772,1.411,773,1.684,774,3.4,775,3.4,776,3.4,777,3.4,778,1.684,779,2.71,780,1.684,781,3.4,782,1.684,783,3.4,784,1.684,785,1.684,786,3.4,787,1.684,788,1.684,789,1.684,790,1.684,791,1.684,792,1.684,793,1.684,794,2.71,795,1.684,796,1.684,797,2.71,798,2.71,799,1.684,800,1.684,801,3.4,802,1.684,803,1.684,804,2.71,805,2.71,806,1.684,807,1.684,808,1.684,809,1.684,810,2.71,811,1.684,812,2.71,813,2.71,814,1.684,815,1.684,816,3.896,817,2.71,818,1.684,819,2.71,820,2.71,821,1.684,822,2.71,823,3.4,824,1.684,825,1.684,826,1.684,827,1.684,828,1.684,829,1.684,830,1.684,831,1.684,832,1.684,833,1.684,834,1.684,835,1.684,836,1.684,837,1.684,838,1.684,839,1.684,840,1.684,841,1.684,842,1.684,843,1.684,844,1.684,845,1.684,846,1.684,847,1.684,848,2.71,849,1.684,850,1.684,851,1.684,852,1.684,853,1.684,854,2.71,855,1.684,856,2.71,857,1.684,858,1.684,859,1.684,860,1.684,861,1.684,862,2.71,863,1.684,864,1.684,865,1.684,866,1.684,867,1.684,868,1.684]],["title/classes/VisualizarRespuestasDto.html",[0,0.09,542,1.585]],["body/classes/VisualizarRespuestasDto.html",[0,0.148,2,1.299,3,0.325,4,0.281,5,0.281,8,0.369,9,0.972,11,1.453,12,1.112,13,0.667,14,0.03,15,1.388,18,0.826,20,2.158,23,0.325,30,0.683,35,1.797,37,0.877,40,0.544,41,0.744,46,0.744,49,0.473,62,0.743,66,0.022,67,0.022,96,0.744,114,1.618,158,2.215,178,1.522,209,1.147,225,1.651,234,2.158,235,1.354,242,2.158,245,1.57,266,2.86,267,2.86,269,1.647,417,1.964,454,1.405,532,2.822,533,3.932,534,1.964,535,2.393,540,2.159,541,1.964,542,2.349,543,2.86,544,2.687,545,2.687,546,2.687,547,2.687,548,2.687,549,2.393,550,2.687,551,2.687,869,3.675,870,3.675,871,3.675,872,3.675,873,3.675]],["title/coverage.html",[874,3.228]],["body/coverage.html",[0,0.174,1,2.046,5,0.267,6,2.917,7,3.388,13,0.394,14,0.03,41,0.705,46,0.705,66,0.021,67,0.021,74,1.703,181,2.046,182,3.393,183,3.388,186,2.268,209,0.831,232,2.268,233,2.917,263,1.799,265,2.917,320,2.548,321,2.268,323,2.917,340,2.268,349,1.861,398,1.23,413,2.548,415,2.917,488,2.268,502,2.917,514,2.917,523,1.861,524,2.477,532,2.046,533,3.393,534,3.092,542,1.703,543,1.861,552,2.917,563,1.861,575,2.268,576,2.917,592,1.861,616,2.917,647,4.857,654,1.861,655,2.723,656,2.268,666,2.917,673,2.917,686,2.917,700,2.268,701,2.917,736,1.861,772,2.917,874,2.546,875,2.917,876,3.482,877,3.482,878,2.917,879,3.482,880,6.071,881,5.21,882,5.784,883,5.784,884,3.482,885,3.482,886,3.482,887,3.482,888,3.482]],["title/dependencies.html",[71,1.905,889,2.27]],["body/dependencies.html",[0,0.152,14,0.031,27,2.046,66,0.025,67,0.025,71,2.227,87,1.609,95,3.816,108,2.046,110,1.274,192,2.434,195,2.046,439,3.329,890,5.903,891,4.554,892,4.554,893,4.554,894,4.554,895,4.554,896,4.554,897,4.554,898,4.554,899,4.554,900,4.554,901,4.554,902,4.554,903,4.554,904,4.554,905,4.554,906,4.554,907,4.554,908,4.554,909,4.554]],["title/miscellaneous/enumerations.html",[910,1.765,911,3.264]],["body/miscellaneous/enumerations.html",[8,0.473,14,0.03,20,2.52,41,1.135,66,0.026,67,0.026,382,3.295,440,4.099,540,2.767,661,3.652,662,4.099,663,4.099,910,3.067,911,3.946,912,4.709,913,5.608,914,4.709,915,5.608,916,4.709,917,6.333]],["title/miscellaneous/functions.html",[910,1.765,918,3.264]],["body/miscellaneous/functions.html",[8,0.513,14,0.027,66,0.027,67,0.027,74,3.027,878,4.274,910,3.322,918,4.274,919,5.101]],["title/index.html",[8,0.272,920,2.71,921,2.71]],["body/index.html",[4,0.228,14,0.029,66,0.019,67,0.019,84,3.032,92,2.906,128,3.488,419,1.938,709,2.175,712,4.358,874,2.175,875,3.488,922,2.976,923,2.976,924,4.803,925,4.164,926,2.976,927,2.976,928,2.976,929,2.976,930,4.164,931,4.803,932,2.976,933,2.976,934,5.202,935,2.976,936,5.943,937,2.976,938,5.824,939,2.976,940,2.976,941,2.976,942,4.164,943,2.976,944,2.976,945,4.803,946,2.976,947,4.164,948,2.976,949,2.976,950,2.976,951,2.976,952,2.976,953,5.202,954,5.673,955,2.976,956,4.164,957,2.976,958,2.976,959,2.976,960,2.976,961,2.976,962,5.673,963,4.164,964,5.202,965,2.976,966,4.164,967,2.976,968,2.976,969,4.164,970,5.673,971,5.202,972,2.976,973,4.164,974,2.976,975,2.976,976,2.976,977,2.976,978,5.202,979,2.976,980,2.976,981,2.976,982,2.976,983,4.164,984,2.976,985,2.976,986,2.976,987,2.976,988,2.976,989,4.164,990,2.976,991,2.976,992,2.976,993,4.164,994,2.976,995,2.976,996,4.358,997,4.164,998,2.976,999,2.976,1000,2.976,1001,2.976,1002,2.976,1003,2.976,1004,2.976,1005,2.976,1006,4.164,1007,2.976,1008,2.976,1009,2.976,1010,2.976,1011,4.803,1012,2.976,1013,2.976,1014,2.976,1015,2.976,1016,2.976,1017,2.976,1018,4.164,1019,2.976,1020,2.976,1021,2.976,1022,2.976,1023,2.976,1024,4.164,1025,2.976,1026,2.976,1027,2.976,1028,4.164,1029,4.164,1030,2.976,1031,2.976,1032,2.976,1033,2.976,1034,2.976,1035,2.976,1036,2.976,1037,2.976,1038,2.976,1039,2.976,1040,2.976,1041,2.493,1042,2.976,1043,2.976,1044,2.976,1045,2.976,1046,2.976,1047,2.976,1048,2.493]],["title/modules.html",[70,2.16]],["body/modules.html",[14,0.026,66,0.026,67,0.026,69,3.194,70,2.399,79,2.882,80,2.882,81,2.882,996,5.263,1049,6.281,1050,6.281,1051,6.281]],["title/overview.html",[1052,3.7]],["body/overview.html",[2,1.494,14,0.03,66,0.024,67,0.024,68,1.751,69,4.179,70,2.068,71,2.068,72,2.484,73,2.484,74,2.068,75,2.484,76,2.484,77,3.543,78,3.543,79,3.61,80,3.61,81,3.68,82,3.086,83,2.484,84,2.26,264,2.068,322,2.068,349,3.054,391,3.543,392,3.543,414,2.754,510,3.543,592,3.054,608,3.543,609,3.543,736,3.394,762,3.543,763,3.543,764,3.543,1052,3.543,1053,5.252,1054,4.229,1055,4.229]],["title/properties.html",[9,0.789,889,2.27]],["body/properties.html",[9,1.023,14,0.03,66,0.027,67,0.027,709,3.695,1041,4.235,1048,4.235,1056,5.054,1057,5.054,1058,5.054]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":647,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1057,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["0.3.22",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":825,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["10",{"_index":1055,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["11.1.2",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":728,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["201",{"_index":715,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["3",{"_index":1053,"title":{},"body":{"overview.html":{}}}],["4",{"_index":510,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{},"overview.html":{}}}],["4.0.2",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":719,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["404",{"_index":637,"title":{},"body":{"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["6",{"_index":1054,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["8.14.1",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["abc123def456",{"_index":751,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["abc123def456'})@apibody({type",{"_index":713,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["abierta",{"_index":661,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"modules/RespuestasModule.html":{},"miscellaneous/enumerations.html":{}}}],["abierta.entity",{"_index":564,"title":{},"body":{"entities/Pregunta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["abierta.entity.ts",{"_index":673,"title":{},"body":{"entities/RespuestaAbierta.html":{},"coverage.html":{}}}],["abierta.entity.ts:15",{"_index":675,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:18",{"_index":682,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:21",{"_index":676,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:24",{"_index":677,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:28",{"_index":678,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abierta.entity.ts:32",{"_index":679,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["abiertas",{"_index":664,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["acceder",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["accesible",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["actualiza",{"_index":494,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizada",{"_index":641,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["actualizar",{"_index":44,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["actualizardto",{"_index":581,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["actualizarestadoencuesta",{"_index":416,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarestadoencuesta(id",{"_index":422,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["actualizarpregunta",{"_index":577,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["actualizarpregunta(id",{"_index":580,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["actualizarpregunta(idpregunta",{"_index":622,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["actualizarpreguntadto",{"_index":1,"title":{"classes/ActualizarPreguntaDto.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"coverage.html":{}}}],["ajusta",{"_index":857,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["al",{"_index":221,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/RespuestasService.html":{}}}],["alias",{"_index":465,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["allowing",{"_index":984,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1034,"title":{},"body":{"index.html":{}}}],["anidados",{"_index":200,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["api",{"_index":314,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["apibody",{"_index":743,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apioperation",{"_index":741,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apiparam",{"_index":742,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apiproperty",{"_index":191,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":236,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":184,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiproperty()@isuuid('4')@isnotempty",{"_index":503,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty({enum",{"_index":253,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["apiproperty({type",{"_index":187,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["apiresponse",{"_index":744,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apitags",{"_index":740,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["apitags('respuestas",{"_index":745,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["application",{"_index":954,"title":{},"body":{"index.html":{}}}],["applications",{"_index":930,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":69,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["arrayminsize",{"_index":201,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arrayminsize(1",{"_index":219,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arraynotempty",{"_index":202,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["arreglo",{"_index":218,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["asc",{"_index":480,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["asigna",{"_index":639,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["asociadas",{"_index":231,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Pregunta.html":{}}}],["async",{"_index":326,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["author",{"_index":1041,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autogenerada",{"_index":300,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["autoloadentities",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["automática",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["automáticamente",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{}}}],["await",{"_index":369,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["aws",{"_index":973,"title":{},"body":{"index.html":{}}}],["añade",{"_index":862,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["backers",{"_index":1035,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":430,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["badrequestexception('datos",{"_index":489,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["badrequestexception('encuesta",{"_index":493,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["base",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["based",{"_index":968,"title":{},"body":{"index.html":{}}}],["board",{"_index":1027,"title":{},"body":{"index.html":{}}}],["body",{"_index":345,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["body('habilitada",{"_index":385,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":476,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["browse",{"_index":1051,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1049,"title":{},"body":{"modules.html":{}}}],["building",{"_index":925,"title":{},"body":{"index.html":{}}}],["busca",{"_index":491,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["cada",{"_index":225,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["cadena",{"_index":60,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["cambiarestadoencuesta",{"_index":327,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["cambiarestadoencuesta(id",{"_index":330,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["cantidad",{"_index":863,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cantidad_respuestas",{"_index":535,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["cantidadrespuestas",{"_index":854,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["carga",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["cascade",{"_index":284,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["case",{"_index":474,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["channel",{"_index":999,"title":{},"body":{"index.html":{}}}],["check",{"_index":962,"title":{},"body":{"index.html":{}}}],["clase",{"_index":43,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["class",{"_index":0,"title":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{},"overview.html":{}}}],["clave",{"_index":298,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["clicks",{"_index":983,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":967,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_encuestasmodule",{"_index":391,"title":{},"body":{"modules/EncuestasModule.html":{},"overview.html":{}}}],["cluster_encuestasmodule_providers",{"_index":392,"title":{},"body":{"modules/EncuestasModule.html":{},"overview.html":{}}}],["cluster_preguntasmodule",{"_index":608,"title":{},"body":{"modules/PreguntasModule.html":{},"overview.html":{}}}],["cluster_preguntasmodule_providers",{"_index":609,"title":{},"body":{"modules/PreguntasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule",{"_index":762,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule_exports",{"_index":764,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["cluster_respuestasmodule_providers",{"_index":763,"title":{},"body":{"modules/RespuestasModule.html":{},"overview.html":{}}}],["codigo",{"_index":425,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["codigo_respuesta",{"_index":271,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigo_resultados",{"_index":308,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigo_resultados'})@exclude",{"_index":273,"title":{},"body":{"entities/Encuesta.html":{}}}],["codigoparticipacion",{"_index":783,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["codigorespuesta",{"_index":266,"title":{},"body":{"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["codigoresultados",{"_index":267,"title":{},"body":{"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["codigotipo",{"_index":426,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["codigotipoenum",{"_index":440,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"miscellaneous/enumerations.html":{}}}],["codigotipoenum.respuesta",{"_index":427,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["codigotipoenum.resultados",{"_index":428,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["codigotipoenum})@isenum(codigotipoenum)@isnotempty",{"_index":505,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["codigovisualizacion",{"_index":786,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["column",{"_index":280,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["column('int",{"_index":669,"title":{},"body":{"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["column({default",{"_index":276,"title":{},"body":{"entities/Encuesta.html":{}}}],["column({name",{"_index":270,"title":{},"body":{"entities/Encuesta.html":{}}}],["column({type",{"_index":560,"title":{},"body":{"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{}}}],["columna",{"_index":297,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["come",{"_index":990,"title":{},"body":{"index.html":{}}}],["como",{"_index":217,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["con",{"_index":37,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["conexión",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["config/configuration",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.host",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.logger",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.logging",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.name",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.password",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.port",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('database.username",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["configuraciones",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["configuración",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["configuration",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":449,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["construcción",{"_index":462,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["constructor",{"_index":417,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["constructor(encuestarepository",{"_index":418,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["constructor(preguntarepo",{"_index":618,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["constructor(private",{"_index":359,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["constructor(respuestarepository",{"_index":773,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["construir",{"_index":833,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["consulta",{"_index":377,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["consultas",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["contienen",{"_index":407,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["contraseña",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["controlador",{"_index":357,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["controladores",{"_index":404,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["controller",{"_index":320,"title":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{},"coverage.html":{}}}],["controller('encuestas",{"_index":356,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["controller('preguntas",{"_index":595,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["controller('respuestas",{"_index":746,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["controllers",{"_index":322,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["controllers/encuestas.controller",{"_index":394,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["controllers/respuestas.controller",{"_index":766,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["convierte",{"_index":597,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["copia",{"_index":451,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["correctamente",{"_index":501,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["courses",{"_index":1005,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":874,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":798,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["creación",{"_index":448,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["creada",{"_index":48,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["crear",{"_index":213,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta",{"_index":328,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["crearencuesta(@body",{"_index":364,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["crearencuesta(dto",{"_index":336,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["create",{"_index":207,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["createencuestadto",{"_index":181,"title":{"classes/CreateEncuestaDto.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"coverage.html":{}}}],["createopciondto",{"_index":232,"title":{"classes/CreateOpcionDto.html":{}},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["createpreguntadto",{"_index":186,"title":{"classes/CreatePreguntaDto.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["createquerybuilder('encuesta",{"_index":464,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["cuantas",{"_index":853,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cuenta",{"_index":852,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["cuerpo",{"_index":386,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["cuántas",{"_index":548,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["código",{"_index":381,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["data",{"_index":210,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{}}}],["database",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["datos",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["de",{"_index":40,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["debe",{"_index":821,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["declaración",{"_index":403,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["decorador",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{}}}],["decoradores",{"_index":287,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{}}}],["deeper",{"_index":1001,"title":{},"body":{"index.html":{}}}],["default",{"_index":319,"title":{},"body":{"entities/Encuesta.html":{}}}],["define",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["definidos",{"_index":261,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["definir",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["del",{"_index":32,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["delete",{"_index":590,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["delete(':id",{"_index":588,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["delete('opciones/:id",{"_index":585,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["dentro",{"_index":544,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["dependencies",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":953,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":972,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":963,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":982,"title":{},"body":{"index.html":{}}}],["desactiva",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":709,"title":{},"body":{"controllers/RespuestasController.html":{},"index.html":{},"properties.html":{}}}],["desde",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/RespuestasController.html":{}}}],["deshabilita",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{}}}],["deshabilitada",{"_index":500,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["deshabilitar",{"_index":317,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["development",{"_index":939,"title":{},"body":{"index.html":{}}}],["devolverla",{"_index":313,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["devtools",{"_index":1013,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":861,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["discord",{"_index":998,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1000,"title":{},"body":{"index.html":{}}}],["documenta",{"_index":214,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["documentar",{"_index":193,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["documentation",{"_index":875,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":33,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["dto.codigo",{"_index":380,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dto.tipo",{"_index":383,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dtos/create",{"_index":351,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["dtos/obtener",{"_index":354,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["dtos/visualizar",{"_index":739,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["e2e",{"_index":948,"title":{},"body":{"index.html":{}}}],["each",{"_index":224,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["efficient",{"_index":926,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":960,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":482,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["ejemplo",{"_index":312,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["el",{"_index":57,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["elegidas",{"_index":551,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["elemento",{"_index":223,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["elimina",{"_index":604,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["eliminada",{"_index":650,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminan",{"_index":644,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminar",{"_index":603,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["eliminaropcion",{"_index":578,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["eliminaropcion(id",{"_index":584,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["eliminaropcion(idopcion",{"_index":626,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminarpregunta",{"_index":579,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["eliminarpregunta(id",{"_index":587,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["eliminarpreguntaconopciones",{"_index":617,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["eliminarpreguntaconopciones(idpregunta",{"_index":629,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["en",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["encontrada",{"_index":490,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["encuentra",{"_index":484,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuesta",{"_index":209,"title":{"entities/Encuesta.html":{}},"body":{"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"entities/Respuesta.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["encuesta'})@apiparam({name",{"_index":707,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["encuesta.codigorespuesta",{"_index":835,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuesta.codigoresultados",{"_index":836,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuesta.dto",{"_index":352,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["encuesta.dto.ts",{"_index":183,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["encuesta.dto.ts:10",{"_index":504,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["encuesta.dto.ts:15",{"_index":506,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["encuesta.dto.ts:18",{"_index":185,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.dto.ts:26",{"_index":190,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["encuesta.entity",{"_index":562,"title":{},"body":{"entities/Pregunta.html":{}}}],["encuesta.habilitada",{"_index":496,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuesta.id",{"_index":801,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuesta.nombre",{"_index":834,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuesta.preguntas",{"_index":837,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["encuestacreada",{"_index":456,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.codigorespuesta",{"_index":459,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.codigoresultados",{"_index":460,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestacreada.id",{"_index":458,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["encuestarepository",{"_index":421,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["encuestas",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"modules/RespuestasModule.html":{}}}],["encuestas/dtos/actualizar",{"_index":594,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["encuestas/entities/opcion.entity",{"_index":612,"title":{},"body":{"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{}}}],["encuestas/entities/pregunta.entity",{"_index":611,"title":{},"body":{"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{}}}],["encuestascontroller",{"_index":321,"title":{"controllers/EncuestasController.html":{}},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"coverage.html":{}}}],["encuestasmodule",{"_index":79,"title":{"modules/EncuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["encuestasservice",{"_index":349,"title":{"injectables/EncuestasService.html":{}},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"coverage.html":{},"overview.html":{}}}],["endpoint",{"_index":362,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["enlace",{"_index":717,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["ensure",{"_index":958,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1017,"title":{},"body":{"index.html":{}}}],["entidad",{"_index":290,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["entidades",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["entities",{"_index":264,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"overview.html":{}}}],["entities/encuesta.entity",{"_index":355,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{}}}],["entities/opcion.entity",{"_index":399,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["entities/pregunta.entity",{"_index":397,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["entities/respuesta",{"_index":769,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["entities/respuesta.entity",{"_index":768,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["entity",{"_index":263,"title":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"coverage.html":{}}}],["entity('respuestas",{"_index":672,"title":{},"body":{"entities/Respuesta.html":{}}}],["entity('respuestas_abiertas",{"_index":685,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["entity('respuestas_opciones",{"_index":694,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["entorno",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":36,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["enumerador",{"_index":256,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["enumerations",{"_index":911,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/codigo",{"_index":441,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["enums/tipos",{"_index":34,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Pregunta.html":{}}}],["env",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["enviadas",{"_index":806,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["error",{"_index":797,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["es",{"_index":54,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"injectables/RespuestasService.html":{}}}],["especifica",{"_index":565,"title":{},"body":{"entities/Pregunta.html":{}}}],["específica",{"_index":748,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["específico",{"_index":461,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["esquema",{"_index":860,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["est",{"_index":215,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["esta",{"_index":52,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["estado",{"_index":495,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["este",{"_index":400,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["esto",{"_index":858,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["example",{"_index":712,"title":{},"body":{"controllers/RespuestasController.html":{},"index.html":{}}}],["excepción",{"_index":486,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["exclude",{"_index":293,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["excluir",{"_index":294,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["excluye",{"_index":309,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["existe",{"_index":636,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["exitosamente",{"_index":730,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["exitosamente'})@apiresponse({status",{"_index":716,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["experience",{"_index":1003,"title":{},"body":{"index.html":{}}}],["explicitamente",{"_index":660,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["exporta",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["exportación",{"_index":408,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["exports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["express",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["extra",{"_index":316,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["extrae",{"_index":598,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["false",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"classes/CreatePreguntaDto.html":{},"entities/RespuestaAbierta.html":{}}}],["false})@isarray()@isoptional()@validatenested({each",{"_index":250,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["fast",{"_index":976,"title":{},"body":{"index.html":{}}}],["features",{"_index":986,"title":{},"body":{"index.html":{}}}],["few",{"_index":978,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["filtra",{"_index":471,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["fina",{"_index":868,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["focus",{"_index":985,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1021,"title":{},"body":{"index.html":{}}}],["foránea",{"_index":527,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["framework",{"_index":924,"title":{},"body":{"index.html":{}}}],["fue",{"_index":499,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["fueron",{"_index":550,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["full",{"_index":1016,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":315,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["función",{"_index":435,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["function",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":918,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":981,"title":{},"body":{"index.html":{}}}],["genera",{"_index":452,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["generar",{"_index":436,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["get(':id",{"_index":341,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["get('resultados/:tokenvisualizacion",{"_index":757,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["get('resultados/:tokenvisualizacion')@apioperation({summary",{"_index":723,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["getting",{"_index":920,"title":{"index.html":{}},"body":{}}],["global",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["globalmente",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1008,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1031,"title":{},"body":{"index.html":{}}}],["guarda",{"_index":455,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["ha",{"_index":791,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["habilita",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{}}}],["habilitada",{"_index":268,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["habilitar/deshabilitar",{"_index":384,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["hace",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["hands",{"_index":1002,"title":{},"body":{"index.html":{}}}],["handy",{"_index":991,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1006,"title":{},"body":{"index.html":{}}}],["here",{"_index":1039,"title":{},"body":{"index.html":{}}}],["host",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":734,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["httpcode(httpstatus.created",{"_index":749,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["https://nestjs.com",{"_index":1045,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":735,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["id",{"_index":269,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["id_encuesta",{"_index":566,"title":{},"body":{"entities/Pregunta.html":{},"entities/Respuesta.html":{},"injectables/RespuestasService.html":{}}}],["id_encuesta'})@exclude",{"_index":553,"title":{},"body":{"entities/Pregunta.html":{}}}],["id_opcion",{"_index":687,"title":{},"body":{"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{}}}],["id_pregunta",{"_index":526,"title":{},"body":{"entities/Opcion.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["id_pregunta'})@exclude",{"_index":518,"title":{},"body":{"entities/Opcion.html":{}}}],["id_respuesta",{"_index":674,"title":{},"body":{"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{}}}],["identificar",{"_index":511,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["identifier",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["idopcion",{"_index":628,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["idpregunta",{"_index":625,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["ignora",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreenvfile",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["import",{"_index":23,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["importa",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["importación",{"_index":286,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{}}}],["imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indica",{"_index":50,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"entities/Encuesta.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["information",{"_index":965,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":988,"title":{},"body":{"index.html":{}}}],["inicializar",{"_index":845,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["inject",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":413,"title":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["injectables",{"_index":414,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"overview.html":{}}}],["injectrepository",{"_index":433,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(encuesta",{"_index":445,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(opcion",{"_index":633,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(pregunta",{"_index":632,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["injectrepository(respuesta",{"_index":788,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["injectrepository(respuestaabierta",{"_index":789,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["injectrepository(respuestaopcion",{"_index":790,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["innerjoinandselect('encuesta.preguntas",{"_index":466,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["insert",{"_index":302,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["insertar",{"_index":304,"title":{},"body":{"entities/Encuesta.html":{}}}],["install",{"_index":980,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":937,"title":{},"body":{"index.html":{}}}],["instancia",{"_index":229,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["integración",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["interact",{"_index":1009,"title":{},"body":{"index.html":{}}}],["invalido",{"_index":795,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["inválido",{"_index":732,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["inválido'})@apiresponse({status",{"_index":718,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["inválidos",{"_index":720,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["inyección",{"_index":361,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["inyecta",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["inyectable",{"_index":444,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["inyectar",{"_index":431,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["isarray",{"_index":203,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isarray()@validatenested({each",{"_index":657,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["isenum",{"_index":26,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["isenum(codigotipoenum",{"_index":512,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["isenum(tiposrespuestaenum",{"_index":63,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["isglobal",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":204,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isnumber",{"_index":239,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isnumber()@isnotempty",{"_index":695,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isoptional",{"_index":24,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isoptional()@isarray()@isnumber",{"_index":696,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isoptional()@isenum(tiposrespuestaenum",{"_index":21,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["isoptional()@isstring",{"_index":17,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isstring",{"_index":25,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["isstring()@isnotempty()@type(undefined",{"_index":698,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["isuuid",{"_index":507,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["isuuid('4",{"_index":508,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["itera",{"_index":804,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["job",{"_index":1024,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1026,"title":{},"body":{"index.html":{}}}],["join",{"_index":1037,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":521,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["junto",{"_index":605,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["kamil",{"_index":1042,"title":{},"body":{"index.html":{}}}],["key",{"_index":955,"title":{},"body":{"index.html":{}}}],["la",{"_index":62,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["lanza",{"_index":485,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["las",{"_index":30,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["learn",{"_index":994,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('pregunta.opciones",{"_index":468,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["legend",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["license",{"_index":1048,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1029,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1023,"title":{},"body":{"index.html":{}}}],["lista",{"_index":230,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["listas",{"_index":846,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["llama",{"_index":365,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["lo",{"_index":596,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["load",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":966,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1019,"title":{},"body":{"index.html":{}}}],["los",{"_index":38,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{}}}],["lógica",{"_index":395,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["makes",{"_index":974,"title":{},"body":{"index.html":{}}}],["managing",{"_index":987,"title":{},"body":{"index.html":{}}}],["manejar",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["manejarán",{"_index":405,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["manytoone",{"_index":522,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":517,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["marca",{"_index":443,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["matching",{"_index":67,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":970,"title":{},"body":{"index.html":{}}}],["menos",{"_index":222,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"injectables/RespuestasService.html":{}}}],["mensaje",{"_index":497,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["message",{"_index":756,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["metadata",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":325,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["mica",{"_index":318,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["miscellaneous",{"_index":910,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":1028,"title":{},"body":{"index.html":{}}}],["mode",{"_index":942,"title":{},"body":{"index.html":{}}}],["module",{"_index":68,"title":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["modules",{"_index":70,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/encuestas/encuestas.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/preguntas/preguntas.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":964,"title":{},"body":{"index.html":{}}}],["muchos",{"_index":307,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["myśliwiec",{"_index":1043,"title":{},"body":{"index.html":{}}}],["método",{"_index":447,"title":{},"body":{"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["módulo",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["módulos",{"_index":343,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["múltiple",{"_index":665,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["name",{"_index":296,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["necesarios",{"_index":344,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["need",{"_index":1014,"title":{},"body":{"index.html":{}}}],["negocio",{"_index":396,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["nest",{"_index":931,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1047,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"index.html":{}}}],["nestjs/common",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":192,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["new",{"_index":488,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["nico",{"_index":453,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["node.js",{"_index":923,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["notfoundexception",{"_index":631,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["notfoundexception('encuesta",{"_index":794,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["notfoundexception('opción",{"_index":652,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["notfoundexception('pregunta",{"_index":635,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["npm",{"_index":936,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":363,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["nuevo",{"_index":61,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["nuevos",{"_index":601,"title":{},"body":{"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["nullable",{"_index":681,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["number",{"_index":235,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["numero",{"_index":234,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["número",{"_index":241,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["o",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["object",{"_index":212,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["object.assign(pregunta",{"_index":638,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["objeto",{"_index":226,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/RespuestasService.html":{}}}],["objetos",{"_index":199,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["obtener",{"_index":353,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["obtenerencuesta",{"_index":329,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerencuesta(id",{"_index":339,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["obtenerencuestadto",{"_index":340,"title":{"classes/ObtenerEncuestaDto.html":{}},"body":{"controllers/EncuestasController.html":{},"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["obtenidas",{"_index":729,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["obtiene",{"_index":373,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["offer",{"_index":1025,"title":{},"body":{"index.html":{}}}],["official",{"_index":971,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":289,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["onetomany(undefined",{"_index":282,"title":{},"body":{"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["opcion",{"_index":398,"title":{"entities/Opcion.html":{}},"body":{"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["opcion.dto",{"_index":258,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["opcion.dto.ts",{"_index":233,"title":{},"body":{"classes/CreateOpcionDto.html":{},"coverage.html":{}}}],["opcion.dto.ts:14",{"_index":237,"title":{},"body":{"classes/CreateOpcionDto.html":{}}}],["opcion.dto.ts:9",{"_index":238,"title":{},"body":{"classes/CreateOpcionDto.html":{}}}],["opcion.entity",{"_index":525,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["opcion.entity.ts",{"_index":686,"title":{},"body":{"entities/RespuestaOpcion.html":{},"coverage.html":{}}}],["opcion.entity.ts:14",{"_index":688,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:17",{"_index":690,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:20",{"_index":689,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:24",{"_index":692,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.entity.ts:28",{"_index":691,"title":{},"body":{"entities/RespuestaOpcion.html":{}}}],["opcion.id",{"_index":856,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opcion.numero",{"_index":866,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opcion.pregunta",{"_index":557,"title":{},"body":{"entities/Pregunta.html":{}}}],["opcion.texto",{"_index":865,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opcion_multiple_seleccion_multiple",{"_index":663,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"miscellaneous/enumerations.html":{}}}],["opcion_multiple_seleccion_simple",{"_index":662,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"miscellaneous/enumerations.html":{}}}],["opcional",{"_index":55,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["opcionconrespuestasdto",{"_index":532,"title":{"classes/OpcionConRespuestasDto.html":{}},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["opciones",{"_index":245,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["opcionrepo",{"_index":619,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["opcionrepository",{"_index":777,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["opción",{"_index":240,"title":{},"body":{"classes/CreateOpcionDto.html":{},"modules/EncuestasModule.html":{},"entities/Opcion.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["open",{"_index":1030,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["orden",{"_index":243,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["ordena",{"_index":478,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["otros",{"_index":412,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":889,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":29,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["param",{"_index":346,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["param('id",{"_index":372,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["param('tokenparticipacion",{"_index":753,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["param('tokenvisualizacion",{"_index":759,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["parameters",{"_index":333,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["params",{"_index":378,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["parseintpipe",{"_index":591,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["part",{"_index":1015,"title":{},"body":{"index.html":{}}}],["participacion",{"_index":793,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["participación",{"_index":711,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["participado",{"_index":792,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["parámetro",{"_index":374,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["parámetros",{"_index":376,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["password",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["pasándole",{"_index":600,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["patch",{"_index":347,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{}}}],["patch(':id",{"_index":582,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["patch(':id/habilitar",{"_index":331,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["permite",{"_index":303,"title":{},"body":{"entities/Encuesta.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["permitido",{"_index":262,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Pregunta.html":{}}}],["permitidos",{"_index":257,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["personalizada",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["personalizado",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["pertenece",{"_index":529,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/RespuestasService.html":{}}}],["petición",{"_index":599,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["pg",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":969,"title":{},"body":{"index.html":{}}}],["please",{"_index":997,"title":{},"body":{"index.html":{}}}],["por",{"_index":311,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["port",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["posición",{"_index":244,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["possible",{"_index":961,"title":{},"body":{"index.html":{}}}],["post",{"_index":337,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["post(':tokenparticipacion",{"_index":747,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["post(':tokenparticipacion')@httpcode(httpstatus.created)@apioperation({summary",{"_index":705,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["postgres",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":324,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["pregunta",{"_index":46,"title":{"entities/Pregunta.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["pregunta.dto",{"_index":208,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{}}}],["pregunta.dto.ts",{"_index":7,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["pregunta.dto.ts:12",{"_index":22,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["pregunta.dto.ts:20",{"_index":247,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:25",{"_index":252,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:30",{"_index":255,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:37",{"_index":251,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["pregunta.dto.ts:8",{"_index":19,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["pregunta.encuesta",{"_index":283,"title":{},"body":{"entities/Encuesta.html":{}}}],["pregunta.entity",{"_index":292,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{}}}],["pregunta.id",{"_index":816,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pregunta.numero",{"_index":841,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pregunta.opciones",{"_index":645,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.opciones.length",{"_index":646,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["pregunta.texto",{"_index":843,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["pregunta.tipo",{"_index":823,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas",{"_index":838,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.id",{"_index":839,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.numero",{"_index":840,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.opciones",{"_index":847,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.opciones.push",{"_index":864,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.respuestas_abiertas",{"_index":848,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.texto",{"_index":842,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestas.tipo",{"_index":844,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntaconrespuestasdto",{"_index":543,"title":{"classes/PreguntaConRespuestasDto.html":{}},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["preguntaopcion",{"_index":469,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["preguntarepo",{"_index":621,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["preguntarepository",{"_index":776,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntas",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["preguntas.opciones",{"_index":832,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["preguntas/controllers/preguntas.controller",{"_index":614,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["preguntas/services/preguntas.service",{"_index":613,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["preguntascontroller",{"_index":575,"title":{"controllers/PreguntasController.html":{}},"body":{"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"coverage.html":{}}}],["preguntasmodule",{"_index":80,"title":{"modules/PreguntasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PreguntasModule.html":{},"modules.html":{},"overview.html":{}}}],["preguntasservice",{"_index":592,"title":{"injectables/PreguntasService.html":{}},"body":{"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"coverage.html":{},"overview.html":{}}}],["primaria",{"_index":299,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["primarygeneratedcolumn",{"_index":278,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["principal",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":446,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["process.env.node_env",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["producción",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":922,"title":{},"body":{"index.html":{}}}],["project",{"_index":934,"title":{},"body":{"index.html":{}}}],["promise",{"_index":335,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{},"properties.html":{}}}],["propiedad",{"_index":53,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["propiedades",{"_index":31,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["proporcionado",{"_index":472,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["proveedores",{"_index":406,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["pueda",{"_index":409,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["puede",{"_index":513,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["puerto",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["que",{"_index":51,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["query",{"_index":348,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["query.addorderby('preguntaopcion.numero",{"_index":481,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.andwhere('encuesta.codigorespuesta",{"_index":475,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.andwhere('encuesta.codigoresultados",{"_index":477,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.getone",{"_index":483,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["query.orderby('pregunta.numero",{"_index":479,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["questions",{"_index":995,"title":{},"body":{"index.html":{}}}],["r",{"_index":530,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"injectables/RespuestasService.html":{}}}],["r.opcion",{"_index":531,"title":{},"body":{"entities/Opcion.html":{}}}],["r.pregunta",{"_index":567,"title":{},"body":{"entities/Pregunta.html":{}}}],["r.texto",{"_index":851,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["read",{"_index":1038,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":360,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["ready",{"_index":952,"title":{},"body":{"index.html":{}}}],["real",{"_index":1010,"title":{},"body":{"index.html":{}}}],["recibe",{"_index":754,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["recomendado",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["referencia",{"_index":528,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["reflect",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["registarrespuestasdto",{"_index":781,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registarrespuestasdto.respuestas",{"_index":808,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registradas",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["registrar",{"_index":706,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestas",{"_index":702,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["registrarrespuestas(codigoparticipacion",{"_index":780,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["registrarrespuestas(tokenparticipacion",{"_index":704,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registrarrespuestasdto",{"_index":654,"title":{"classes/RegistrarRespuestasDto.html":{}},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["registrarrespuestasdto})@apiresponse({status",{"_index":714,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["registro",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["relacionada",{"_index":291,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["relacionadas",{"_index":305,"title":{},"body":{"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["relación",{"_index":306,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["relations",{"_index":643,"title":{},"body":{"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["relevantes",{"_index":367,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{}}}],["repositorio",{"_index":434,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["repositorios",{"_index":432,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["repository",{"_index":419,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"index.html":{}}}],["representa",{"_index":242,"title":{},"body":{"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"modules/EncuestasModule.html":{},"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["requerida",{"_index":814,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["required",{"_index":249,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["requiring",{"_index":977,"title":{},"body":{"index.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}],["resources",{"_index":989,"title":{},"body":{"index.html":{}}}],["respuesta",{"_index":41,"title":{"entities/Respuesta.html":{}},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["respuesta.entity",{"_index":684,"title":{},"body":{"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{}}}],["respuesta.enum",{"_index":35,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuesta.enum.ts",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["respuestaabierta",{"_index":563,"title":{"entities/RespuestaAbierta.html":{}},"body":{"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestaabiertarepository",{"_index":774,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaguardada",{"_index":802,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaguardada.id",{"_index":817,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestaopcion",{"_index":523,"title":{"entities/RespuestaOpcion.html":{}},"body":{"entities/Opcion.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["respuestaopciones",{"_index":770,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["respuestaopcionrepository",{"_index":775,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta",{"_index":807,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.id_pregunta",{"_index":810,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.opciones",{"_index":819,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.opciones.length",{"_index":820,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.texto",{"_index":813,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapregunta.tipo",{"_index":811,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestapreguntadto",{"_index":656,"title":{"classes/RespuestaPreguntaDto.html":{}},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"coverage.html":{}}}],["respuestarepository",{"_index":779,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestas",{"_index":454,"title":{},"body":{"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto",{"_index":738,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["respuestas.dto.ts",{"_index":534,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["respuestas.dto.ts:12",{"_index":570,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dto.ts:13",{"_index":571,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dto.ts:14",{"_index":573,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:15",{"_index":574,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dto.ts:16",{"_index":572,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dto.ts:17",{"_index":569,"title":{},"body":{"classes/PreguntaConRespuestasDto.html":{}}}],["respuestas.dto.ts:19",{"_index":699,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:25",{"_index":537,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dto.ts:26",{"_index":539,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:27",{"_index":538,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dto.ts:28",{"_index":536,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{}}}],["respuestas.dto.ts:32",{"_index":697,"title":{},"body":{"classes/RespuestaPreguntaDto.html":{}}}],["respuestas.dto.ts:4",{"_index":871,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto.ts:40",{"_index":659,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["respuestas.dto.ts:5",{"_index":872,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto.ts:6",{"_index":869,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto.ts:7",{"_index":870,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas.dto.ts:8",{"_index":873,"title":{},"body":{"classes/VisualizarRespuestasDto.html":{}}}],["respuestas_abiertas",{"_index":545,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["respuestasabiertas",{"_index":568,"title":{},"body":{"entities/Pregunta.html":{},"injectables/RespuestasService.html":{}}}],["respuestasabiertas.map",{"_index":850,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["respuestascontroller",{"_index":700,"title":{"controllers/RespuestasController.html":{}},"body":{"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"coverage.html":{}}}],["respuestasmodule",{"_index":81,"title":{"modules/RespuestasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RespuestasModule.html":{},"modules.html":{},"overview.html":{}}}],["respuestasservice",{"_index":736,"title":{"injectables/RespuestasService.html":{}},"body":{"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"coverage.html":{},"overview.html":{}}}],["resultado",{"_index":760,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["resultado.preguntas.push(preguntaconrespuestas",{"_index":867,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["resultados",{"_index":382,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/RespuestasController.html":{},"miscellaneous/enumerations.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retorna",{"_index":366,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{}}}],["return",{"_index":368,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["returns",{"_index":334,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["run",{"_index":938,"title":{},"body":{"index.html":{}}}],["runs",{"_index":959,"title":{},"body":{"index.html":{}}}],["rutas",{"_index":358,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["rxjs",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["saber",{"_index":388,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["scalable",{"_index":927,"title":{},"body":{"index.html":{}}}],["se",{"_index":389,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["sea",{"_index":59,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["según",{"_index":227,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{}}}],["seleccion",{"_index":827,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["seleccionada",{"_index":822,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["ser",{"_index":410,"title":{},"body":{"modules/EncuestasModule.html":{},"classes/ObtenerEncuestaDto.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["serialización",{"_index":295,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["serializar",{"_index":310,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["server",{"_index":928,"title":{},"body":{"index.html":{}}}],["services/encuestas.service",{"_index":350,"title":{},"body":{"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{}}}],["services/preguntas.service",{"_index":593,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["services/respuestas.service",{"_index":767,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["servicio",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"modules/RespuestasModule.html":{}}}],["setup",{"_index":935,"title":{},"body":{"index.html":{}}}],["si",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["side",{"_index":929,"title":{},"body":{"index.html":{}}}],["simple",{"_index":979,"title":{},"body":{"index.html":{}}}],["sincronización",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["sino",{"_index":796,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["sobre",{"_index":805,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["solicitud",{"_index":387,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/RespuestasController.html":{}}}],["solo",{"_index":826,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"index.html":{}}}],["sponsors",{"_index":1033,"title":{},"body":{"index.html":{}}}],["src/.../codigo",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tipos",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts",{"_index":323,"title":{},"body":{"controllers/EncuestasController.html":{},"coverage.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:25",{"_index":338,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:35",{"_index":342,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/controllers/encuestas.controller.ts:49",{"_index":332,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["src/modules/encuestas/dtos/actualizar",{"_index":6,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"coverage.html":{}}}],["src/modules/encuestas/dtos/create",{"_index":182,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"coverage.html":{}}}],["src/modules/encuestas/dtos/obtener",{"_index":502,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{},"coverage.html":{}}}],["src/modules/encuestas/encuestas.module.ts",{"_index":393,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["src/modules/encuestas/entities/encuesta.entity",{"_index":671,"title":{},"body":{"entities/Respuesta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts",{"_index":265,"title":{},"body":{"entities/Encuesta.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:11",{"_index":279,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:14",{"_index":281,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:19",{"_index":285,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:22",{"_index":272,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:26",{"_index":274,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/encuesta.entity.ts:30",{"_index":277,"title":{},"body":{"entities/Encuesta.html":{}}}],["src/modules/encuestas/entities/opcion.entity",{"_index":693,"title":{},"body":{"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts",{"_index":514,"title":{},"body":{"entities/Opcion.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:19",{"_index":515,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:22",{"_index":520,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:25",{"_index":516,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/opcion.entity.ts:30",{"_index":519,"title":{},"body":{"entities/Opcion.html":{}}}],["src/modules/encuestas/entities/pregunta.entity",{"_index":683,"title":{},"body":{"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts",{"_index":552,"title":{},"body":{"entities/Pregunta.html":{},"coverage.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:23",{"_index":555,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:26",{"_index":556,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:29",{"_index":559,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:32",{"_index":561,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:37",{"_index":554,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/entities/pregunta.entity.ts:40",{"_index":558,"title":{},"body":{"entities/Pregunta.html":{}}}],["src/modules/encuestas/enums/codigo",{"_index":916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/encuestas/enums/tipos",{"_index":540,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts",{"_index":415,"title":{},"body":{"injectables/EncuestasService.html":{},"coverage.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:17",{"_index":420,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:25",{"_index":424,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:49",{"_index":429,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/encuestas/services/encuestas.service.ts:89",{"_index":423,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts",{"_index":576,"title":{},"body":{"controllers/PreguntasController.html":{},"coverage.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts:20",{"_index":583,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts:29",{"_index":589,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["src/modules/preguntas/controllers/preguntas.controller.ts:37",{"_index":586,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["src/modules/preguntas/preguntas.module.ts",{"_index":610,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts",{"_index":616,"title":{},"body":{"injectables/PreguntasService.html":{},"coverage.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:15",{"_index":620,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:26",{"_index":624,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:40",{"_index":630,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/preguntas/services/preguntas.service.ts:63",{"_index":627,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts",{"_index":701,"title":{},"body":{"controllers/RespuestasController.html":{},"coverage.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:47",{"_index":721,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/controllers/respuestas.controller.ts:74",{"_index":733,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/dtos/registrar",{"_index":655,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/dtos/visualizar",{"_index":533,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta",{"_index":524,"title":{},"body":{"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta.entity",{"_index":787,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts",{"_index":666,"title":{},"body":{"entities/Respuesta.html":{},"coverage.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:13",{"_index":668,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:16",{"_index":670,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/respuestas/entities/respuesta.entity.ts:20",{"_index":667,"title":{},"body":{"entities/Respuesta.html":{}}}],["src/modules/respuestas/respuestas.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/respuestas/respuestas.module.ts",{"_index":765,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["src/modules/respuestas/services/respuestas.service",{"_index":737,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts",{"_index":772,"title":{},"body":{"injectables/RespuestasService.html":{},"coverage.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:124",{"_index":785,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:20",{"_index":778,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["src/modules/respuestas/services/respuestas.service.ts:36",{"_index":782,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["start",{"_index":940,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":943,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":944,"title":{},"body":{"index.html":{}}}],["started",{"_index":921,"title":{"index.html":{}},"body":{}}],["starter",{"_index":933,"title":{},"body":{"index.html":{}}}],["statements",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":752,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["stay",{"_index":1018,"title":{},"body":{"index.html":{}}}],["steps",{"_index":956,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":975,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["su",{"_index":371,"title":{},"body":{"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"controllers/PreguntasController.html":{}}}],["summary",{"_index":750,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["support",{"_index":996,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sus",{"_index":541,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["svg",{"_index":1050,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":194,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["switch",{"_index":473,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["synchronize",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["tabla",{"_index":301,"title":{},"body":{"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["table",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":957,"title":{},"body":{"index.html":{}}}],["tenga",{"_index":220,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["test",{"_index":947,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":950,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":949,"title":{},"body":{"index.html":{}}}],["tests",{"_index":945,"title":{},"body":{"index.html":{}}}],["text",{"_index":680,"title":{},"body":{"entities/RespuestaAbierta.html":{}}}],["texto",{"_index":11,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/RespuestaAbierta.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["thanks",{"_index":1032,"title":{},"body":{"index.html":{}}}],["this.encuestarepository",{"_index":463,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestarepository.create",{"_index":450,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestarepository.findone",{"_index":492,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/RespuestasService.html":{}}}],["this.encuestarepository.save(encuesta",{"_index":457,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["this.encuestasservice.actualizarestadoencuesta(id",{"_index":390,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.crearencuesta(dto",{"_index":370,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.encuestasservice.obtenerencuesta",{"_index":379,"title":{},"body":{"controllers/EncuestasController.html":{}}}],["this.opciones",{"_index":546,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["this.opcionrepo.delete",{"_index":648,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.opcionrepo.delete(idopcion",{"_index":653,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.opcionrepo.findoneby",{"_index":651,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.opcionrepository.findone",{"_index":828,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.preguntarepo.delete(idpregunta",{"_index":649,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.findone",{"_index":642,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.findoneby",{"_index":634,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepo.save(pregunta",{"_index":640,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["this.preguntarepository.findone",{"_index":809,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.preguntasservice.actualizarpregunta(id",{"_index":602,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["this.preguntasservice.eliminaropcion(id",{"_index":607,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["this.preguntasservice.eliminarpreguntaconopciones(id",{"_index":606,"title":{},"body":{"controllers/PreguntasController.html":{}}}],["this.respuestaabiertarepository.create",{"_index":815,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaabiertarepository.find",{"_index":849,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaabiertarepository.save(respuestasabiertas",{"_index":818,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.count",{"_index":855,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.create",{"_index":829,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.save(respuesta",{"_index":803,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestaopcionrepository.save(respuestaopcion",{"_index":830,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestarepository.create",{"_index":800,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["this.respuestas_abiertas",{"_index":547,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["this.respuestasservice.registrarrespuestas",{"_index":755,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["this.respuestasservice.visualizarrespuestasdto(tokenvisualizacion",{"_index":761,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["throw",{"_index":487,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["time",{"_index":1011,"title":{},"body":{"index.html":{}}}],["tipo",{"_index":12,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["tipo.enum",{"_index":442,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["tipo.enum.ts",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tipo_respuesta",{"_index":246,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["tipos",{"_index":39,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{}}}],["tiposrespuestaenum",{"_index":20,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"miscellaneous/enumerations.html":{}}}],["tiposrespuestaenum.abierta",{"_index":812,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["tiposrespuestaenum.opcion_multiple_seleccion_simple",{"_index":824,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["tiposrespuestaenum})@isenum(tiposrespuestaenum)@isnotempty",{"_index":254,"title":{},"body":{"classes/CreatePreguntaDto.html":{}}}],["token",{"_index":710,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["tokenparticipacion",{"_index":708,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["tokenvisualizacion",{"_index":725,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["touch",{"_index":1040,"title":{},"body":{"index.html":{}}}],["trabajar",{"_index":401,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["transfer",{"_index":211,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["transforma",{"_index":228,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["transformar",{"_index":197,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["transformer",{"_index":195,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"dependencies.html":{}}}],["true",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["true})@type(undefined",{"_index":189,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["true})@type(undefined)@isnotempty",{"_index":658,"title":{},"body":{"classes/RegistrarRespuestasDto.html":{}}}],["tu",{"_index":859,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["twitter",{"_index":1046,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"classes/RegistrarRespuestasDto.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"classes/RespuestaPreguntaDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"entities/Encuesta.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/Respuesta.html":{},"entities/RespuestaAbierta.html":{},"entities/RespuestaOpcion.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["typeormmodule.forfeature",{"_index":771,"title":{},"body":{"modules/RespuestasModule.html":{}}}],["typeormmodule.forfeature([encuesta",{"_index":402,"title":{},"body":{"modules/EncuestasModule.html":{}}}],["typeormmodule.forfeature([pregunta",{"_index":615,"title":{},"body":{"modules/PreguntasModule.html":{}}}],["typeormmodule.forrootasync",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":932,"title":{},"body":{"index.html":{}}}],["un",{"_index":64,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"injectables/RespuestasService.html":{}}}],["una",{"_index":45,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"controllers/PreguntasController.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["undefined",{"_index":248,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"entities/Pregunta.html":{}}}],["undefined})@isarray()@arraynotempty()@arrayminsize(1)@validatenested({each",{"_index":188,"title":{},"body":{"classes/CreateEncuestaDto.html":{}}}],["une",{"_index":467,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["unit",{"_index":946,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1058,"title":{},"body":{"properties.html":{}}}],["uno",{"_index":259,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"classes/ObtenerEncuestaDto.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{}}}],["updatedto",{"_index":623,"title":{},"body":{"injectables/PreguntasService.html":{}}}],["updates",{"_index":1020,"title":{},"body":{"index.html":{}}}],["url",{"_index":375,"title":{},"body":{"controllers/EncuestasController.html":{},"controllers/PreguntasController.html":{},"controllers/RespuestasController.html":{}}}],["usefactory",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1012,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"injectables/RespuestasService.html":{}}}],["utilidad",{"_index":196,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["utilidades",{"_index":288,"title":{},"body":{"entities/Encuesta.html":{},"entities/Opcion.html":{},"entities/Pregunta.html":{},"entities/RespuestaAbierta.html":{}}}],["utilizado",{"_index":411,"title":{},"body":{"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{}}}],["uuid",{"_index":439,"title":{},"body":{"injectables/EncuestasService.html":{},"classes/ObtenerEncuestaDto.html":{},"dependencies.html":{}}}],["uuids",{"_index":437,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["v4",{"_index":438,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["vacío",{"_index":216,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["valida",{"_index":56,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"controllers/PreguntasController.html":{}}}],["validaciones",{"_index":28,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["validadores",{"_index":206,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["validar",{"_index":198,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["validatenested",{"_index":205,"title":{},"body":{"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{}}}],["validator",{"_index":27,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"classes/RegistrarRespuestasDto.html":{},"classes/RespuestaPreguntaDto.html":{},"dependencies.html":{}}}],["valor",{"_index":58,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreateOpcionDto.html":{},"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{}}}],["valores",{"_index":260,"title":{},"body":{"classes/CreatePreguntaDto.html":{},"classes/ObtenerEncuestaDto.html":{},"injectables/PreguntasService.html":{}}}],["value",{"_index":917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["variables",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["veces",{"_index":549,"title":{},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["version",{"_index":1056,"title":{},"body":{"properties.html":{}}}],["versión",{"_index":509,"title":{},"body":{"classes/ObtenerEncuestaDto.html":{}}}],["video",{"_index":1004,"title":{},"body":{"index.html":{}}}],["vinculada",{"_index":799,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visit",{"_index":993,"title":{},"body":{"index.html":{}}}],["visualización",{"_index":726,"title":{},"body":{"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{}}}],["visualizar",{"_index":724,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualizarlas",{"_index":831,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visualizarrespuestas",{"_index":703,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualizarrespuestas(tokenvisualizacion",{"_index":722,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualizarrespuestasdto",{"_index":542,"title":{"classes/VisualizarRespuestasDto.html":{}},"body":{"classes/OpcionConRespuestasDto.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/RespuestasController.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{},"coverage.html":{}}}],["visualizarrespuestasdto(codigovisualizacion",{"_index":784,"title":{},"body":{"injectables/RespuestasService.html":{}}}],["visualizarrespuestasdto})@apiresponse({status",{"_index":731,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["visualize",{"_index":1007,"title":{},"body":{"index.html":{}}}],["válido",{"_index":65,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{}}}],["válidos",{"_index":42,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{},"injectables/EncuestasService.html":{}}}],["watch",{"_index":941,"title":{},"body":{"index.html":{}}}],["website",{"_index":1044,"title":{},"body":{"index.html":{}}}],["where('encuesta.id",{"_index":470,"title":{},"body":{"injectables/EncuestasService.html":{}}}],["working",{"_index":992,"title":{},"body":{"index.html":{}}}],["x",{"_index":1022,"title":{},"body":{"index.html":{}}}],["xito",{"_index":498,"title":{},"body":{"injectables/EncuestasService.html":{},"injectables/PreguntasService.html":{},"controllers/RespuestasController.html":{}}}],["xyz789uvw012",{"_index":758,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["xyz789uvw012'})@apiresponse({status",{"_index":727,"title":{},"body":{"controllers/RespuestasController.html":{}}}],["y",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateEncuestaDto.html":{},"classes/CreatePreguntaDto.html":{},"entities/Encuesta.html":{},"controllers/EncuestasController.html":{},"modules/EncuestasModule.html":{},"injectables/EncuestasService.html":{},"entities/Opcion.html":{},"classes/OpcionConRespuestasDto.html":{},"entities/Pregunta.html":{},"classes/PreguntaConRespuestasDto.html":{},"controllers/PreguntasController.html":{},"modules/PreguntasModule.html":{},"injectables/PreguntasService.html":{},"entities/RespuestaAbierta.html":{},"modules/RespuestasModule.html":{},"injectables/RespuestasService.html":{},"classes/VisualizarRespuestasDto.html":{}}}],["ya",{"_index":47,"title":{},"body":{"classes/ActualizarPreguntaDto.html":{}}}],["you'd",{"_index":1036,"title":{},"body":{"index.html":{}}}],["you're",{"_index":951,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/EncuestasModule.html":{},"modules/PreguntasModule.html":{},"modules/RespuestasModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActualizarPreguntaDto.html":{"url":"classes/ActualizarPreguntaDto.html","title":"class - ActualizarPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActualizarPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/actualizar-pregunta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                texto\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/actualizar-pregunta.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(TiposRespuestaEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/actualizar-pregunta.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsEnum } from 'class-validator'; // Validaciones para las propiedades del DTO\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum'; // Enum con los tipos de respuesta válidos\n\n// Clase DTO para actualizar una pregunta ya creada\nexport class ActualizarPreguntaDto {\n  @IsOptional() // Indica que esta propiedad es opcional\n  @IsString() // Valida que el valor sea una cadena de texto\n  texto?: string; // Nuevo texto de la pregunta\n\n  @IsOptional() // Indica que esta propiedad es opcional\n  @IsEnum(TiposRespuestaEnum) // Valida que sea un valor válido del enum TiposRespuestaEnum\n  tipo?: TiposRespuestaEnum; // Nuevo tipo de respuesta para la pregunta\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nEncuestasModule\n\nEncuestasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEncuestasModule->AppModule\n\n\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nAppModule -->\n\nPreguntasModule->AppModule\n\n\n\n\n\nRespuestasModule\n\nRespuestasModule\n\nAppModule -->\n\nRespuestasModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EncuestasModule\n                        \n                        \n                            PreguntasModule\n                        \n                        \n                            RespuestasModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'; // Decorador para definir un módulo en NestJS\nimport { ConfigModule, ConfigService } from '@nestjs/config'; // Módulo y servicio para manejar configuraciones\nimport configuration from './config/configuration'; // Archivo de configuración personalizado\nimport { EncuestasModule } from './modules/encuestas/encuestas.module'; // Módulo de encuestas\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo para la integración con TypeORM\nimport { PreguntasModule } from './modules/preguntas/preguntas.module';\nimport { RespuestasModule } from 'src/modules/respuestas/respuestas.module';\n\n@Module({\n  imports: [\n    // Importa el módulo de encuestas y preguntas\n    EncuestasModule,\n    PreguntasModule,\n    RespuestasModule,\n\n    // Configuración global del módulo de configuración\n    ConfigModule.forRoot({\n      load: [configuration], // Carga la configuración personalizada desde un archivo\n      isGlobal: true, // Hace que el módulo de configuración sea accesible globalmente\n      ignoreEnvFile: process.env.NODE_ENV === 'production', // Ignora el archivo .env si el entorno es producción\n    }),\n\n    // Configuración de TypeORM para la conexión con la base de datos\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule], // Importa el módulo de configuración para acceder a las variables de entorno\n      inject: [ConfigService], // Inyecta el servicio de configuración\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres', // Tipo de base de datos (PostgreSQL)\n        host: configService.get('database.host'), // Host de la base de datos\n        port: configService.get('database.port'), // Puerto de la base de datos\n        username: configService.get('database.username'), // Usuario de la base de datos\n        password: configService.get('database.password'), // Contraseña de la base de datos\n        database: configService.get('database.name'), // Nombre de la base de datos\n        synchronize: false, // Desactiva la sincronización automática (recomendado en producción)\n        autoLoadEntities: true, // Carga automáticamente las entidades registradas\n        logging: configService.get('database.logging'), // Habilita o deshabilita el registro de consultas\n        logger: configService.get('database.logger'), // Define el tipo de logger para la base de datos\n      }),\n    }),\n  ],\n})\nexport class AppModule {} // Exporta la clase del módulo principal\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEncuestaDto.html":{"url":"classes/CreateEncuestaDto.html","title":"class - CreateEncuestaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEncuestaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-encuesta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                nombre\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                preguntas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePreguntaDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@IsArray()@ArrayNotEmpty()@ArrayMinSize(1)@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-encuesta.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { Type } from 'class-transformer'; // Utilidad para transformar y validar objetos anidados\nimport {\n  ArrayMinSize,\n  ArrayNotEmpty,\n  IsArray,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator'; // Validadores para las propiedades del DTO\nimport { CreatePreguntaDto } from './create-pregunta.dto'; // DTO para las preguntas de la encuesta\n\n// Clase DTO (Data Transfer Object) para crear una encuesta\nexport class CreateEncuestaDto {\n  @ApiProperty() // Documenta la propiedad \"nombre\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  nombre: string; // Nombre de la encuesta\n\n  @ApiProperty({ type: [CreatePreguntaDto] }) // Documenta la propiedad \"preguntas\" en Swagger como un arreglo de CreatePreguntaDto\n  @IsArray() // Valida que el valor sea un arreglo\n  @ArrayNotEmpty() // Valida que el arreglo no esté vacío\n  @ArrayMinSize(1) // Valida que el arreglo tenga al menos un elemento\n  @ValidateNested({ each: true }) // Valida que cada elemento del arreglo sea un objeto válido según CreatePreguntaDto\n  @Type(() => CreatePreguntaDto) // Transforma cada elemento del arreglo en una instancia de CreatePreguntaDto\n  preguntas: CreatePreguntaDto[]; // Lista de preguntas asociadas a la encuesta\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOpcionDto.html":{"url":"classes/CreateOpcionDto.html","title":"class - CreateOpcionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOpcionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-opcion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-opcion.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-opcion.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator'; // Validadores para las propiedades del DTO\n\n// Clase DTO (Data Transfer Object) para crear una opción\nexport class CreateOpcionDto {\n  @ApiProperty() // Documenta la propiedad \"texto\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  texto: string; // Texto de la opción\n\n  @ApiProperty() // Documenta la propiedad \"numero\" en Swagger\n  @IsNumber() // Valida que el valor sea un número\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  numero: number; // Número que representa el orden o posición de la opción\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePreguntaDto.html":{"url":"classes/CreatePreguntaDto.html","title":"class - CreatePreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/create-pregunta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                opciones\n                            \n                            \n                                    \n                                    \n                                    \n                                texto\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo_respuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOpcionDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false})@IsArray()@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo_respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TiposRespuestaEnum})@IsEnum(TiposRespuestaEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/create-pregunta.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator'; // Validadores para las propiedades del DTO\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum'; // Enumerador para los tipos de respuesta permitidos\nimport { Type } from 'class-transformer'; // Utilidad para transformar y validar objetos anidados\nimport { CreateOpcionDto } from './create-opcion.dto'; // DTO para las opciones de una pregunta\n\n// Clase DTO (Data Transfer Object) para crear una pregunta\nexport class CreatePreguntaDto {\n  @ApiProperty() // Documenta la propiedad \"numero\" en Swagger\n  @IsNumber() // Valida que el valor sea un número\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  numero: number; // Número que representa el orden o posición de la pregunta\n\n  @ApiProperty() // Documenta la propiedad \"texto\" en Swagger\n  @IsString() // Valida que el valor sea una cadena de texto\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  texto: string; // Texto de la pregunta\n\n  @ApiProperty({ enum: TiposRespuestaEnum }) // Documenta la propiedad \"tipo\" en Swagger como un enumerador\n  @IsEnum(TiposRespuestaEnum) // Valida que el valor sea uno de los valores definidos en el enumerador\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  tipo_respuesta: TiposRespuestaEnum; // Tipo de respuesta permitido para la pregunta\n\n  @ApiProperty({ type: [CreateOpcionDto], required: false }) // Documenta la propiedad \"opciones\" en Swagger como un arreglo de CreateOpcionDto\n  @IsArray() // Valida que el valor sea un arreglo\n  @IsOptional() // Valida que esta propiedad sea opcional\n  @ValidateNested({ each: true }) // Valida que cada elemento del arreglo sea un objeto válido según CreateOpcionDto\n  @Type(() => CreateOpcionDto) // Transforma cada elemento del arreglo en una instancia de CreateOpcionDto\n  opciones: CreateOpcionDto[]; // Opciones asociadas a la pregunta (opcional)\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Encuesta.html":{"url":"entities/Encuesta.html","title":"entity - Encuesta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Encuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/encuesta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codigoRespuesta\n                            \n                            \n                                    \n                                    \n                                codigoResultados\n                            \n                            \n                                    \n                                habilitada\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nombre\n                            \n                            \n                                    \n                                preguntas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codigoRespuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'codigo_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'codigo_resultados'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        habilitada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pregunta[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, pregunta => pregunta.encuesta, {cascade: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/encuesta.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n// Importación de la entidad relacionada \"Pregunta\"\nimport { Pregunta } from './pregunta.entity';\n// Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n\n@Entity({ name: 'encuestas' }) // Define la clase como una entidad de la base de datos con el nombre \"encuestas\"\nexport class Encuesta {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"nombre\" en la tabla\n  nombre: string;\n\n  @OneToMany(() => Pregunta, (pregunta) => pregunta.encuesta, {\n    cascade: ['insert'], // Permite insertar automáticamente las preguntas relacionadas\n  })\n  preguntas: Pregunta[]; // Relación uno a muchos con la entidad \"Pregunta\"\n\n  @Column({ name: 'codigo_respuesta' }) // Define la columna \"codigo_respuesta\" en la tabla\n  codigoRespuesta: string;\n\n  @Column({ name: 'codigo_resultados' }) // Define la columna \"codigo_resultados\" en la tabla\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  codigoResultados: string;\n\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  @Column({ default: true })\n  habilitada: boolean; // Columna que indica si la encuesta está habilitada o no\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EncuestasController.html":{"url":"controllers/EncuestasController.html","title":"controller - EncuestasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EncuestasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/controllers/encuestas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                encuestas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                cambiarEstadoEncuesta\n                            \n                            \n                                    \n                                    Async\n                                crearEncuesta\n                            \n                            \n                                    \n                                    Async\n                                obtenerEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        cambiarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    cambiarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/habilitar')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearEncuesta(dto: CreateEncuestaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        obtenerEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuesta(id: number, dto: ObtenerEncuestaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/encuestas/controllers/encuestas.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            ObtenerEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\n// Importación del servicio de encuestas\nimport { EncuestasService } from '../services/encuestas.service';\n// Importación del DTO para crear encuestas\nimport { CreateEncuestaDto } from '../dtos/create-encuesta.dto';\n// Importación del DTO para obtener encuestas\nimport { ObtenerEncuestaDto } from '../dtos/obtener-encuesta.dto';\n// Importación de la entidad Encuesta\nimport { Encuesta } from '../entities/encuesta.entity';\n\n@Controller('encuestas') // Define el controlador para manejar las rutas relacionadas con \"encuestas\"\nexport class EncuestasController {\n  constructor(private readonly encuestasService: EncuestasService) {} // Inyección del servicio de encuestas\n\n  @Post() // Define un endpoint POST para crear una nueva encuesta\n  async crearEncuesta(@Body() dto: CreateEncuestaDto): Promise {\n    // Llama al servicio para crear una encuesta y retorna los datos relevantes\n    return await this.encuestasService.crearEncuesta(dto);\n  }\n\n  @Get(':id') // Define un endpoint GET para obtener una encuesta por su ID\n  async obtenerEncuesta(\n    @Param('id') id: number, // Obtiene el parámetro \"id\" de la URL\n    @Query() dto: ObtenerEncuestaDto, // Obtiene los parámetros de consulta (query params)\n  ): Promise {\n    // Llama al servicio para obtener la encuesta y la retorna\n    return await this.encuestasService.obtenerEncuesta(\n      id,\n      dto.codigo, // Código de respuesta o resultados\n      dto.tipo, // Tipo de código (respuesta o resultados)\n    );\n  }\n\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  @Patch(':id/habilitar') // Define un endpoint PATCH para habilitar/deshabilitar una encuesta\n  async cambiarEstadoEncuesta(\n    @Param('id') id: number, // Obtiene el parámetro \"id\" de la URL\n    @Body('habilitada') habilitada: boolean, // Obtiene el cuerpo de la solicitud para saber si se habilita o deshabilita\n  ): Promise {\n    return await this.encuestasService.actualizarEstadoEncuesta(id, habilitada);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncuestasModule.html":{"url":"modules/EncuestasModule.html","title":"module - EncuestasModule","body":"\n                   \n\n\n\n\n    Modules\n    EncuestasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EncuestasModule\n\n\n\ncluster_EncuestasModule_providers\n\n\n\n\nEncuestasService\n\nEncuestasService\n\n\n\nEncuestasModule\n\nEncuestasModule\n\nEncuestasModule -->\n\nEncuestasService->EncuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/encuestas/encuestas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EncuestasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EncuestasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { EncuestasController } from './controllers/encuestas.controller'; // Controlador para manejar las rutas relacionadas con encuestas\nimport { EncuestasService } from './services/encuestas.service'; // Servicio para la lógica de negocio de encuestas\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Encuesta } from './entities/encuesta.entity'; // Entidad que representa la tabla \"Encuesta\" en la base de datos\nimport { Pregunta } from './entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from './entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([Encuesta, Pregunta, Opcion]),\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  controllers: [EncuestasController],\n  // Declaración de los proveedores que contienen la lógica de negocio\n  providers: [EncuestasService],\n})\n// Exportación del módulo de encuestas para que pueda ser utilizado en otros módulos\nexport class EncuestasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncuestasService.html":{"url":"injectables/EncuestasService.html","title":"injectable - EncuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/services/encuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                actualizarEstadoEncuesta\n                            \n                            \n                                    Async\n                                crearEncuesta\n                            \n                            \n                                    Async\n                                obtenerEncuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(encuestaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/encuestas/services/encuestas.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encuestaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        actualizarEstadoEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarEstadoEncuesta(id: number, habilitada: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                habilitada\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        crearEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    crearEncuesta(dto: CreateEncuestaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateEncuestaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        obtenerEncuesta\n                        \n                    \n                \n            \n            \n                \n                        \n                    obtenerEncuesta(id: number, codigo: string, codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/encuestas/services/encuestas.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codigoTipo\n                                            \n                                                            CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\n// Decorador para inyectar repositorios de TypeORM\nimport { InjectRepository } from '@nestjs/typeorm';\n// Importación de la entidad Encuesta\nimport { Encuesta } from '../entities/encuesta.entity';\n// Importación del repositorio de TypeORM\nimport { Repository } from 'typeorm';\n// Importación del DTO para crear encuestas\nimport { CreateEncuestaDto } from '../dtos/create-encuesta.dto';\n// Importación de la función para generar UUIDs\nimport { v4 } from 'uuid';\n// Importación del enumerador para los tipos de código\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum';\n\n@Injectable() // Decorador que marca esta clase como un servicio inyectable\nexport class EncuestasService {\n  constructor(\n    // Inyección del repositorio de la entidad Encuesta\n    @InjectRepository(Encuesta)\n    private encuestaRepository: Repository,\n  ) {}\n\n  // Método para crear una nueva encuesta\n  async crearEncuesta(dto: CreateEncuestaDto): Promise {\n    // Creación de una nueva instancia de Encuesta con los datos del DTO\n    const encuesta: Encuesta = this.encuestaRepository.create({\n      ...dto, // Copia las propiedades del DTO\n      codigoRespuesta: v4(), // Genera un código único para las respuestas\n      codigoResultados: v4(), // Genera un código único para los resultados\n    });\n\n    // Guarda la encuesta en la base de datos\n    const encuestaCreada = await this.encuestaRepository.save(encuesta);\n\n    // Retorna los datos relevantes de la encuesta creada\n    return {\n      id: encuestaCreada.id,\n      codigoRespuesta: encuestaCreada.codigoRespuesta,\n      codigoResultados: encuestaCreada.codigoResultados,\n    };\n  }\n\n  // Método para obtener una encuesta por su ID y un código específico\n  async obtenerEncuesta(\n    id: number, // ID de la encuesta\n    codigo: string, // Código de respuesta o resultados\n    codigoTipo: CodigoTipoEnum.RESPUESTA | CodigoTipoEnum.RESULTADOS, // Tipo de código\n  ): Promise {\n    // Construcción de la consulta para obtener la encuesta\n    const query = this.encuestaRepository\n      .createQueryBuilder('encuesta') // Alias para la tabla Encuesta\n      .innerJoinAndSelect('encuesta.preguntas', 'pregunta') // Une las preguntas relacionadas\n      .leftJoinAndSelect('pregunta.opciones', 'preguntaOpcion') // Une las opciones de las preguntas\n      .where('encuesta.id = :id', { id }); // Filtra por el ID de la encuesta\n\n    // Filtra según el tipo de código proporcionado\n    switch (codigoTipo) {\n      case CodigoTipoEnum.RESPUESTA:\n        query.andWhere('encuesta.codigoRespuesta = :codigo', { codigo });\n        break;\n\n      case CodigoTipoEnum.RESULTADOS:\n        query.andWhere('encuesta.codigoResultados = :codigo', { codigo });\n        break;\n    }\n\n    // Ordena las preguntas y opciones por su número\n    query.orderBy('pregunta.numero', 'ASC');\n    query.addOrderBy('preguntaOpcion.numero', 'ASC');\n\n    // Ejecuta la consulta y obtiene la encuesta\n    const encuesta = await query.getOne();\n\n    // Si no se encuentra la encuesta, lanza una excepción\n    if (!encuesta) {\n      throw new BadRequestException('Datos de encuesta no válidos');\n    }\n\n    // Retorna la encuesta encontrada\n    return encuesta;\n  }\n\n  // Funcionalidad Extra para deshabilitar una encuesta (MICA)\n  async actualizarEstadoEncuesta(\n    id: number,\n    habilitada: boolean,\n  ): Promise {\n    // Busca la encuesta por su ID\n    const encuesta = await this.encuestaRepository.findOne({ where: { id } });\n\n    // Si no se encuentra la encuesta, lanza una excepción\n    if (!encuesta) {\n      throw new BadRequestException('Encuesta no encontrada');\n    }\n\n    // Actualiza el estado de la encuesta\n    encuesta.habilitada = habilitada;\n    await this.encuestaRepository.save(encuesta);\n\n    // Retorna un mensaje de éxito\n    return {\n      mensaje: `La encuesta fue ${habilitada ? 'habilitada' : 'deshabilitada'} correctamente`,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ObtenerEncuestaDto.html":{"url":"classes/ObtenerEncuestaDto.html","title":"class - ObtenerEncuestaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ObtenerEncuestaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/dtos/obtener-encuesta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                codigo\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        codigo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID('4')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/obtener-encuesta.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CodigoTipoEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: CodigoTipoEnum})@IsEnum(CodigoTipoEnum)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/dtos/obtener-encuesta.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; // Decorador para documentar propiedades en Swagger\nimport { IsEnum, IsNotEmpty, IsUUID } from 'class-validator'; // Validadores para las propiedades del DTO\nimport { CodigoTipoEnum } from '../enums/codigo-tipo.enum'; // Enumerador para los tipos de código permitidos\n\n// Clase DTO (Data Transfer Object) para obtener una encuesta\nexport class ObtenerEncuestaDto {\n  @ApiProperty() // Documenta la propiedad \"codigo\" en Swagger\n  @IsUUID('4') // Valida que el valor sea un UUID versión 4\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  codigo: string; // Código único para identificar la encuesta\n\n  @ApiProperty({ enum: CodigoTipoEnum }) // Documenta la propiedad \"tipo\" en Swagger como un enumerador\n  @IsEnum(CodigoTipoEnum) // Valida que el valor sea uno de los valores definidos en el enumerador\n  @IsNotEmpty() // Valida que el valor no esté vacío\n  tipo: CodigoTipoEnum; // Tipo de código (puede ser \"RESULTADOS\" o \"RESPUESTA\")\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Opcion.html":{"url":"entities/Opcion.html","title":"entity - Opcion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Opcion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/opcion.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                    \n                                    \n                                pregunta\n                            \n                            \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pregunta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_pregunta'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/opcion.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n// Importación de decoradores y utilidades de TypeORM\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  //OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n// Importación de la entidad relacionada \"Pregunta\"\nimport { Pregunta } from './pregunta.entity';\n//import { RespuestaOpcion } from 'src/modules/respuestas/entities/respuesta-opcion.entity';\n\n@Entity({ name: 'opciones' }) // Define la clase como una entidad de la base de datos con el nombre \"opciones\"\nexport class Opcion {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"texto\" en la tabla\n  texto: string;\n\n  @Column() // Define la columna \"numero\" en la tabla\n  numero: number;\n\n  @ManyToOne(() => Pregunta) // Relación muchos a uno con la entidad \"Pregunta\"\n  @JoinColumn({ name: 'id_pregunta' }) // Define la columna \"id_pregunta\" como la clave foránea\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  pregunta: Pregunta; // Referencia a la pregunta a la que pertenece esta opción\n\n  // EXTRA POR MÓDULO RESPUESTAS\n  // @OneToMany(() => RespuestaOpcion, (r) => r.opcion)\n  // respuestas: RespuestaOpcion[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpcionConRespuestasDto.html":{"url":"classes/OpcionConRespuestasDto.html","title":"class - OpcionConRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpcionConRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cantidad_respuestas\n                            \n                            \n                                id\n                            \n                            \n                                numero\n                            \n                            \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cantidad_respuestas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Pregunta.html":{"url":"entities/Pregunta.html","title":"entity - Pregunta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Pregunta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/encuestas/entities/pregunta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                numero\n                            \n                            \n                                    \n                                opciones\n                            \n                            \n                                    \n                                texto\n                            \n                            \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_encuesta'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opcion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, opcion => opcion.pregunta, {cascade: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TiposRespuestaEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/encuestas/entities/pregunta.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n// Importación del enumerador para los tipos de respuesta\nimport { TiposRespuestaEnum } from '../enums/tipos-respuesta.enum';\n// Importación del decorador \"Exclude\" para excluir propiedades en la serialización\nimport { Exclude } from 'class-transformer';\n// Importación de la entidad relacionada \"Encuesta\"\nimport { Encuesta } from './encuesta.entity';\n// Importación de la entidad relacionada \"Opcion\"\nimport { Opcion } from './opcion.entity';\n//import { RespuestaAbierta } from 'src/modules/respuestas/entities/respuesta-abierta.entity';\n\n@Entity({ name: 'preguntas' }) // Define la clase como una entidad de la base de datos con el nombre \"preguntas\"\nexport class Pregunta {\n  @PrimaryGeneratedColumn() // Define la columna \"id\" como clave primaria autogenerada\n  id: number;\n\n  @Column() // Define la columna \"numero\" en la tabla\n  numero: number;\n\n  @Column() // Define la columna \"texto\" en la tabla\n  texto: string;\n\n  @Column({ type: 'enum', enum: TiposRespuestaEnum }) // Define la columna \"tipo\" como un enumerador\n  tipo: TiposRespuestaEnum; // Especifica el tipo de respuesta permitido para la pregunta\n\n  @ManyToOne(() => Encuesta) // Relación muchos a uno con la entidad \"Encuesta\"\n  @JoinColumn({ name: 'id_encuesta' }) // Define la columna \"id_encuesta\" como la clave foránea\n  @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  encuesta: Encuesta; // Referencia a la encuesta a la que pertenece esta pregunta\n\n  @OneToMany(() => Opcion, (opcion) => opcion.pregunta, { cascade: ['insert'] }) // Relación uno a muchos con la entidad \"Opcion\"\n  opciones: Opcion[]; // Lista de opciones asociadas a la pregunta\n\n  // EXTRA POR EL MÓDULO DE RESPUESTAS\n  // @Exclude() // Excluye esta propiedad al serializar la entidad (por ejemplo, al devolverla en una API)\n  // @OneToMany(() => RespuestaAbierta, (r) => r.pregunta)\n  // respuestasAbiertas: RespuestaAbierta[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PreguntaConRespuestasDto.html":{"url":"classes/PreguntaConRespuestasDto.html","title":"class - PreguntaConRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PreguntaConRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                numero\n                            \n                            \n                                opciones\n                            \n                            \n                                respuestas_abiertas\n                            \n                            \n                                texto\n                            \n                            \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpcionConRespuestasDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        respuestas_abiertas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TiposRespuestaEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PreguntasController.html":{"url":"controllers/PreguntasController.html","title":"controller - PreguntasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PreguntasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/preguntas/controllers/preguntas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                preguntas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                actualizarPregunta\n                            \n                            \n                                    \n                                    Async\n                                eliminarOpcion\n                            \n                            \n                                    \n                                    Async\n                                eliminarPregunta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        actualizarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarPregunta(id: number, actualizarDto: ActualizarPreguntaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/preguntas/controllers/preguntas.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actualizarDto\n                                            \n                                                            ActualizarPreguntaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarOpcion(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('opciones/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/preguntas/controllers/preguntas.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        eliminarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarPregunta(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/preguntas/controllers/preguntas.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport {\n  Body,\n  Controller,\n  Param,\n  Patch,\n  Delete,\n  ParseIntPipe,\n} from '@nestjs/common';\n// Importación del servicio de preguntas\nimport { PreguntasService } from '../services/preguntas.service';\n// Importación del DTO para actualizar una pregunta\nimport { ActualizarPreguntaDto } from '../../encuestas/dtos/actualizar-pregunta.dto';\n\n@Controller('preguntas') // Define el controlador para manejar las rutas relacionadas con \"/preguntas\"\nexport class PreguntasController {\n  constructor(private readonly preguntasService: PreguntasService) {} // Inyección del servicio de preguntas\n\n  @Patch(':id') // Define un endpoint PATCH para actualizar una pregunta por su ID\n  async actualizarPregunta(\n    @Param('id', ParseIntPipe) id: number, // Obtiene el parámetro \"id\" de la URL y lo convierte en número.\n    @Body() actualizarDto: ActualizarPreguntaDto, // Extrae el cuerpo de la petición y lo valida según ActualizarPreguntaDto.\n  ): Promise {\n    // Llama al método actualizarPregunta del servicio, pasándole el id y los nuevos datos.\n    return this.preguntasService.actualizarPregunta(id, actualizarDto);\n  }\n\n  @Delete(':id') // Define un endpoint DELETE para eliminar una pregunta y sus opciones\n  async eliminarPregunta(\n    @Param('id', ParseIntPipe) id: number, // Obtiene el parámetro \"id\" de la URL y lo convierte en número.\n  ): Promise {\n    // Llama al método del servicio que elimina la pregunta junto con sus opciones\n    return this.preguntasService.eliminarPreguntaConOpciones(id);\n  }\n\n  @Delete('opciones/:id') // Define un endpoint DELETE para eliminar una opcion de una pregunta\n  async eliminarOpcion(\n    @Param('id', ParseIntPipe) id: number, // Obtiene el parámetro \"id\" de la URL y lo convierte en número.\n  ): Promise {\n    // Llama al método del servicio que elimina una opcion de una pregunta\n    return this.preguntasService.eliminarOpcion(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreguntasModule.html":{"url":"modules/PreguntasModule.html","title":"module - PreguntasModule","body":"\n                   \n\n\n\n\n    Modules\n    PreguntasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PreguntasModule\n\n\n\ncluster_PreguntasModule_providers\n\n\n\n\nPreguntasService\n\nPreguntasService\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nPreguntasModule -->\n\nPreguntasService->PreguntasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/preguntas/preguntas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PreguntasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PreguntasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Pregunta } from '../encuestas/entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from '../encuestas/entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\nimport { PreguntasService } from '../preguntas/services/preguntas.service'; // Servicio para la lógica de negocio de preguntas\nimport { PreguntasController } from '../preguntas/controllers/preguntas.controller'; // Controlador para manejar las rutas relacionadas con preguntas\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([Pregunta, Opcion]),\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  controllers: [PreguntasController],\n  // Declaración de los proveedores que contienen la lógica de negocio\n  providers: [PreguntasService],\n})\n// Exportación del módulo de preguntas para que pueda ser utilizado en otros módulos\nexport class PreguntasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreguntasService.html":{"url":"injectables/PreguntasService.html","title":"injectable - PreguntasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PreguntasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/preguntas/services/preguntas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                actualizarPregunta\n                            \n                            \n                                    Async\n                                eliminarOpcion\n                            \n                            \n                                    Async\n                                eliminarPreguntaConOpciones\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(preguntaRepo: Repository, opcionRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/preguntas/services/preguntas.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preguntaRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opcionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        actualizarPregunta\n                        \n                    \n                \n            \n            \n                \n                        \n                    actualizarPregunta(idPregunta: number, updateDto: ActualizarPreguntaDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/preguntas/services/preguntas.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idPregunta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            ActualizarPreguntaDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminarOpcion\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarOpcion(idOpcion: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/preguntas/services/preguntas.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idOpcion\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eliminarPreguntaConOpciones\n                        \n                    \n                \n            \n            \n                \n                        \n                    eliminarPreguntaConOpciones(idPregunta: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/preguntas/services/preguntas.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idPregunta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NotFoundException, Injectable } from '@nestjs/common';\n// Decorador para inyectar repositorios de TypeORM\nimport { InjectRepository } from '@nestjs/typeorm';\n// Importación del repositorio de TypeORM\nimport { Repository } from 'typeorm';\n// Importación de la entidad Pregunta\nimport { Pregunta } from '../../encuestas/entities/pregunta.entity';\n// Importación de la entidad Opcion\nimport { Opcion } from '../../encuestas/entities/opcion.entity';\n// Importación del DTO para actualizar una pregunta\nimport { ActualizarPreguntaDto } from '../../encuestas/dtos/actualizar-pregunta.dto';\n\n@Injectable() // Decorador que marca esta clase como un servicio inyectable\nexport class PreguntasService {\n  constructor(\n    // Inyección del repositorio de la entidad Pregunta\n    @InjectRepository(Pregunta)\n    private readonly preguntaRepo: Repository,\n    // Inyección del repositorio de la entidad Opcion\n    @InjectRepository(Opcion)\n    private readonly opcionRepo: Repository,\n  ) {}\n\n  // Método para actualizar una pregunta\n  async actualizarPregunta(\n    idPregunta: number,\n    updateDto: ActualizarPreguntaDto,\n  ): Promise {\n    const pregunta = await this.preguntaRepo.findOneBy({ id: idPregunta }); // Busca la pregunta por ID\n    if (!pregunta) throw new NotFoundException('Pregunta no encontrada'); // Si no existe, lanza una excepción 404\n\n    Object.assign(pregunta, updateDto); // Asigna los nuevos valores a la entidad pregunta\n    await this.preguntaRepo.save(pregunta); // Guarda la entidad actualizada en la base de datos\n\n    return { mensaje: 'Pregunta actualizada correctamente' }; // Retorna un mensaje de éxito\n  }\n\n  // Método para eliminar una pregunta y sus opciones\n  async eliminarPreguntaConOpciones(\n    idPregunta: number,\n  ): Promise {\n    const pregunta = await this.preguntaRepo.findOne({\n      // Busca la pregunta junto con sus opciones\n      where: { id: idPregunta },\n      relations: ['opciones'],\n    });\n\n    if (!pregunta) throw new NotFoundException('Pregunta no encontrada'); // Si no existe, lanza excepción 404\n\n    // Se eliminan las opciones relacionadas\n    if (pregunta.opciones && pregunta.opciones.length > 0) {\n      await this.opcionRepo.delete({ pregunta: { id: idPregunta } });\n    }\n\n    // Se elimina la pregunta\n    await this.preguntaRepo.delete(idPregunta);\n\n    return { mensaje: 'Pregunta eliminada correctamente' }; // Retorna un mensaje de éxito\n  }\n\n  // Método para eliminar una opción de una pregunta\n  async eliminarOpcion(idOpcion: number): Promise {\n    const opcion = await this.opcionRepo.findOneBy({ id: idOpcion }); // Busca la opción por ID\n    if (!opcion) throw new NotFoundException('Opción no encontrada'); // Si no existe, lanza excepción 404\n\n    await this.opcionRepo.delete(idOpcion); // Elimina la opción\n    return { mensaje: 'Opción eliminada correctamente' }; // Retorna un mensaje de éxito\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrarRespuestasDto.html":{"url":"classes/RegistrarRespuestasDto.html","title":"class - RegistrarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                respuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        respuestas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RespuestaPreguntaDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class RespuestaPreguntaDto {\n  @IsNumber()\n  @IsNotEmpty()\n  id_pregunta: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @Type(() => String) // Transforma explicitamente el tipo\n  tipo:\n    | 'ABIERTA'\n    | 'OPCION_MULTIPLE_SELECCION_SIMPLE'\n    | 'OPCION_MULTIPLE_SELECCION_MULTIPLE';\n\n  @IsOptional()\n  @IsString()\n  texto?: string; // preguntas abiertas\n\n  @IsOptional()\n  @IsArray()\n  @IsNumber({}, { each: true })\n  @Type(() => Number) // Transforma cada elemento a número\n  opciones?: number[]; // preguntas de opción múltiple\n}\n\nexport class RegistrarRespuestasDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => RespuestaPreguntaDto)\n  @IsNotEmpty()\n  respuestas: RespuestaPreguntaDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Respuesta.html":{"url":"entities/Respuesta.html","title":"entity - Respuesta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Respuesta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                encuesta\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_encuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Encuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_encuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_encuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Encuesta } from 'src/modules/encuestas/entities/encuesta.entity';\n\n@Entity('respuestas')\nexport class Respuesta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int')\n  id_encuesta: number;\n\n  @ManyToOne(() => Encuesta)\n  @JoinColumn({ name: 'id_encuesta' })\n  encuesta: Encuesta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RespuestaAbierta.html":{"url":"entities/RespuestaAbierta.html","title":"entity - RespuestaAbierta","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RespuestaAbierta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta-abierta.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_pregunta\n                            \n                            \n                                    \n                                id_respuesta\n                            \n                            \n                                    \n                                    \n                                pregunta\n                            \n                            \n                                    \n                                    \n                                respuesta\n                            \n                            \n                                    \n                                texto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pregunta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_pregunta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Respuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-abierta.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // Importación de decoradores y utilidades de TypeORM\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Pregunta } from 'src/modules/encuestas/entities/pregunta.entity';\nimport { Respuesta } from './respuesta.entity';\n\n@Entity('respuestas_abiertas')\nexport class RespuestaAbierta {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'text', nullable: false })\n  texto: string;\n\n  @Column('int')\n  id_pregunta: number;\n\n  @Column('int')\n  id_respuesta: number;\n\n  @ManyToOne(() => Pregunta)\n  @JoinColumn({ name: 'id_pregunta' })\n  pregunta: Pregunta;\n\n  @ManyToOne(() => Respuesta)\n  @JoinColumn({ name: 'id_respuesta' })\n  respuesta: Respuesta;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RespuestaOpcion.html":{"url":"entities/RespuestaOpcion.html","title":"entity - RespuestaOpcion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RespuestaOpcion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/entities/respuesta-opcion.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                id_opcion\n                            \n                            \n                                    \n                                id_respuesta\n                            \n                            \n                                    \n                                    \n                                opcion\n                            \n                            \n                                    \n                                    \n                                respuesta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_opcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        opcion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Opcion\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_opcion'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        respuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Respuesta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'id_respuesta'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/entities/respuesta-opcion.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Respuesta } from './respuesta.entity';\nimport { Opcion } from 'src/modules/encuestas/entities/opcion.entity';\n\n@Entity('respuestas_opciones')\nexport class RespuestaOpcion {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column('int')\n  id_respuesta: number;\n\n  @Column('int')\n  id_opcion: number;\n\n  @ManyToOne(() => Respuesta)\n  @JoinColumn({ name: 'id_respuesta' })\n  respuesta: Respuesta;\n\n  @ManyToOne(() => Opcion)\n  @JoinColumn({ name: 'id_opcion' })\n  opcion: Opcion;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RespuestaPreguntaDto.html":{"url":"classes/RespuestaPreguntaDto.html","title":"class - RespuestaPreguntaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RespuestaPreguntaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id_pregunta\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                opciones\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                texto\n                            \n                            \n                                    \n                                    \n                                    \n                                tipo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id_pregunta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        opciones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsNumber({}, {each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        texto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        tipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ABIERTA\" | \"OPCION_MULTIPLE_SELECCION_SIMPLE\" | \"OPCION_MULTIPLE_SELECCION_MULTIPLE\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/registrar-respuestas.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class RespuestaPreguntaDto {\n  @IsNumber()\n  @IsNotEmpty()\n  id_pregunta: number;\n\n  @IsString()\n  @IsNotEmpty()\n  @Type(() => String) // Transforma explicitamente el tipo\n  tipo:\n    | 'ABIERTA'\n    | 'OPCION_MULTIPLE_SELECCION_SIMPLE'\n    | 'OPCION_MULTIPLE_SELECCION_MULTIPLE';\n\n  @IsOptional()\n  @IsString()\n  texto?: string; // preguntas abiertas\n\n  @IsOptional()\n  @IsArray()\n  @IsNumber({}, { each: true })\n  @Type(() => Number) // Transforma cada elemento a número\n  opciones?: number[]; // preguntas de opción múltiple\n}\n\nexport class RegistrarRespuestasDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => RespuestaPreguntaDto)\n  @IsNotEmpty()\n  respuestas: RespuestaPreguntaDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RespuestasController.html":{"url":"controllers/RespuestasController.html","title":"controller - RespuestasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RespuestasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/controllers/respuestas.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                respuestas\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                registrarRespuestas\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                visualizarRespuestas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrarRespuestas(tokenParticipacion: string, registrarRespuestasDto: RegistrarRespuestasDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':tokenParticipacion')@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Registrar respuestas de una encuesta'})@ApiParam({name: 'tokenParticipacion', description: 'Token de participación de la encuesta', example: 'abc123def456'})@ApiBody({type: RegistrarRespuestasDto})@ApiResponse({status: 201, description: 'Respuestas registradas exitosamente'})@ApiResponse({status: 404, description: 'Encuesta no encontrada o enlace inválido'})@ApiResponse({status: 400, description: 'Datos de respuesta inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registrarRespuestasDto\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        visualizarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    visualizarRespuestas(tokenVisualizacion: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('resultados/:tokenVisualizacion')@ApiOperation({summary: 'Visualizar respuestas de una encuesta'})@ApiParam({name: 'tokenVisualizacion', description: 'Token de visualización de resultados', example: 'xyz789uvw012'})@ApiResponse({status: 200, description: 'Respuestas obtenidas exitosamente', type: VisualizarRespuestasDto})@ApiResponse({status: 404, description: 'Encuesta no encontrada o enlace inválido'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/respuestas/controllers/respuestas.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenVisualizacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  HttpCode,\n  HttpStatus,\n  Get,\n} from '@nestjs/common';\nimport { RespuestasService } from 'src/modules/respuestas/services/respuestas.service';\nimport { RegistrarRespuestasDto } from 'src/modules/respuestas/dtos/registrar-respuestas.dto';\nimport { VisualizarRespuestasDto } from '../dtos/visualizar-respuestas.dto';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiParam,\n  ApiBody,\n  ApiResponse,\n} from '@nestjs/swagger';\n\n@ApiTags('respuestas')\n@Controller('respuestas')\nexport class RespuestasController {\n  constructor(private readonly respuestasService: RespuestasService) {}\n\n  @Post(':tokenParticipacion') // Permite registrar respuestas para una encuesta específica.\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({ summary: 'Registrar respuestas de una encuesta' })\n  @ApiParam({\n    name: 'tokenParticipacion',\n    description: 'Token de participación de la encuesta',\n    example: 'abc123def456',\n  })\n  @ApiBody({ type: RegistrarRespuestasDto })\n  @ApiResponse({\n    status: 201,\n    description: 'Respuestas registradas exitosamente',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o enlace inválido',\n  })\n  @ApiResponse({\n    status: 400,\n    description: 'Datos de respuesta inválidos',\n  })\n  async registrarRespuestas(\n    @Param('tokenParticipacion') tokenParticipacion: string, //Recibe el token de participación desde la URL.\n    @Body() registrarRespuestasDto: RegistrarRespuestasDto, // Recibe las respuestas en el cuerpo de la solicitud.\n  ): Promise {\n    await this.respuestasService.registrarRespuestas(\n      tokenParticipacion,\n      registrarRespuestasDto,\n    );\n    return { message: 'Respuestas registradas exitosamente' };\n  }\n\n  @Get('resultados/:tokenVisualizacion') //obtiene las respuestas\n  @ApiOperation({ summary: 'Visualizar respuestas de una encuesta' })\n  @ApiParam({\n    name: 'tokenVisualizacion',\n    description: 'Token de visualización de resultados',\n    example: 'xyz789uvw012',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Respuestas obtenidas exitosamente',\n    type: VisualizarRespuestasDto,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Encuesta no encontrada o enlace inválido',\n  })\n  async visualizarRespuestas(\n    @Param('tokenVisualizacion') tokenVisualizacion: string, //Recibe el token para visualizar los resultados.\n  ): Promise {\n    const resultado =\n      await this.respuestasService.visualizarRespuestasDto(tokenVisualizacion);\n    return { message: 'Éxito', data: resultado };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RespuestasModule.html":{"url":"modules/RespuestasModule.html","title":"module - RespuestasModule","body":"\n                   \n\n\n\n\n    Modules\n    RespuestasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RespuestasModule\n\n\n\ncluster_RespuestasModule_providers\n\n\n\ncluster_RespuestasModule_exports\n\n\n\n\nRespuestasService \n\nRespuestasService \n\n\n\nRespuestasModule\n\nRespuestasModule\n\nRespuestasService  -->\n\nRespuestasModule->RespuestasService \n\n\n\n\n\nRespuestasService\n\nRespuestasService\n\nRespuestasModule -->\n\nRespuestasService->RespuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/respuestas/respuestas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RespuestasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RespuestasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RespuestasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Importación de decoradores y módulos necesarios de NestJS\nimport { Module } from '@nestjs/common';\nimport { RespuestasController } from './controllers/respuestas.controller'; // Controlador para manejar las rutas relacionadas con respuesta\nimport { RespuestasService } from './services/respuestas.service'; // Servicio para la lógica de negocio de respuesta\nimport { TypeOrmModule } from '@nestjs/typeorm'; // Módulo de TypeORM para la integración con la base de datos\nimport { Respuesta } from './entities/respuesta.entity'; // Entidad que representa la tabla \"Respuesta\" en la base de datos\nimport { RespuestaAbierta } from './entities/respuesta-abierta.entity'; //Entidad que representa la tabla \"Respuesta Abierta\" en la base de datos\nimport { RespuestaOpcion } from './entities/respuesta-opcion.entity'; //Entidad que representa la tabla \"RespuestaOpciones\" en la base de datos\nimport { Encuesta } from 'src/modules/encuestas/entities/encuesta.entity'; // Entidad que representa la tabla \"Encuesta\" en la base de datos\nimport { Pregunta } from 'src/modules/encuestas/entities/pregunta.entity'; // Entidad que representa la tabla \"Pregunta\" en la base de datos\nimport { Opcion } from 'src/modules/encuestas/entities/opcion.entity'; // Entidad que representa la tabla \"Opción\" en la base de datos\n\n@Module({\n  // Importación de módulos necesarios para este módulo\n  imports: [\n    // Configuración de TypeORM para trabajar con las entidades relacionadas\n    TypeOrmModule.forFeature([\n      Encuesta,\n      Pregunta,\n      Opcion,\n      Respuesta,\n      RespuestaAbierta,\n      RespuestaOpcion,\n    ]),\n  ],\n  // Declaración de los controladores que manejarán las rutas de este módulo\n  // Declaración de los proveedores que contienen la lógica de negocio\n  controllers: [RespuestasController],\n  providers: [RespuestasService],\n  exports: [RespuestasService],\n})\n// Exportación del módulo de encuestas para que pueda ser utilizado en otros módulos\nexport class RespuestasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RespuestasService.html":{"url":"injectables/RespuestasService.html","title":"injectable - RespuestasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RespuestasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/services/respuestas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                registrarRespuestas\n                            \n                            \n                                    Async\n                                visualizarRespuestasDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(respuestaRepository: Repository, respuestaAbiertaRepository: Repository, respuestaOpcionRepository: Repository, encuestaRepository: Repository, preguntaRepository: Repository, opcionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/respuestas/services/respuestas.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        respuestaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        respuestaAbiertaRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        respuestaOpcionRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encuestaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        preguntaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opcionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registrarRespuestas\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrarRespuestas(codigoParticipacion: string, registarRespuestasDto: RegistrarRespuestasDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/respuestas/services/respuestas.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoParticipacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                registarRespuestasDto\n                                            \n                                                            RegistrarRespuestasDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        visualizarRespuestasDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    visualizarRespuestasDto(codigoVisualizacion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/respuestas/services/respuestas.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                codigoVisualizacion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Respuesta } from 'src/modules/respuestas/entities/respuesta.entity';\nimport { RespuestaAbierta } from 'src/modules/respuestas/entities/respuesta-abierta.entity';\nimport { RespuestaOpcion } from 'src/modules/respuestas/entities/respuesta-opcion.entity';\nimport { Encuesta } from 'src/modules/encuestas/entities/encuesta.entity';\nimport { Pregunta } from 'src/modules/encuestas/entities/pregunta.entity';\nimport { Opcion } from 'src/modules/encuestas/entities/opcion.entity';\nimport { RegistrarRespuestasDto } from 'src/modules/respuestas/dtos/registrar-respuestas.dto';\nimport { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\nimport { VisualizarRespuestasDto } from '../dtos/visualizar-respuestas.dto';\nimport { PreguntaConRespuestasDto } from '../dtos/visualizar-respuestas.dto';\n\n@Injectable()\nexport class RespuestasService {\n  constructor(\n    @InjectRepository(Respuesta)\n    private respuestaRepository: Repository,\n    @InjectRepository(RespuestaAbierta)\n    private respuestaAbiertaRepository: Repository,\n    @InjectRepository(RespuestaOpcion)\n    private respuestaOpcionRepository: Repository,\n    @InjectRepository(Encuesta)\n    private encuestaRepository: Repository,\n    @InjectRepository(Pregunta)\n    private preguntaRepository: Repository,\n    @InjectRepository(Opcion)\n    private opcionRepository: Repository,\n  ) {}\n  //recibe las respuestas de un usuario que ha participado en una encuesta y las guarda en la base de datos\n  async registrarRespuestas(\n    codigoParticipacion: string,\n    registarRespuestasDto: RegistrarRespuestasDto,\n  ): Promise {\n    const encuesta = await this.encuestaRepository.findOne({\n      where: { codigoRespuesta: codigoParticipacion }, //busca la encuesta con el codigo de participacion\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException('Encuesta no encontrada o enlace invalido'); //sino existe el codigo mensaje de error\n    }\n    //crea una nueva respuesta vinculada a la encuesta\n    const respuesta = this.respuestaRepository.create({\n      id_encuesta: encuesta.id,\n    });\n    const respuestaGuardada =\n      await this.respuestaOpcionRepository.save(respuesta); //guarda las respuestas en la base de datos\n    //itera sobre las respuestas enviadas\n    for (const respuestaPregunta of registarRespuestasDto.respuestas) {\n      const pregunta = await this.preguntaRepository.findOne({\n        where: {\n          id: respuestaPregunta.id_pregunta,\n          encuesta: { id: encuesta.id },\n        },\n      });\n\n      if (!pregunta) {\n        throw new BadRequestException(\n          `Pregunta ${respuestaPregunta.id_pregunta} no encontrada o no pertenece a la encuesta`,\n        );\n      }\n\n      if (respuestaPregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n        if (respuestaPregunta.texto) {\n          throw new BadRequestException(\n            'Respuesta de texto requerida para preguntas abiertas',\n          );\n        }\n\n        const respuestasAbiertas = this.respuestaAbiertaRepository.create({\n          texto: respuestaPregunta.texto,\n          id_pregunta: pregunta.id,\n          id_respuesta: respuestaGuardada.id,\n        });\n        await this.respuestaAbiertaRepository.save(respuestasAbiertas);\n      } else {\n        if (\n          !respuestaPregunta.opciones ||\n          respuestaPregunta.opciones.length === 0\n        ) {\n          throw new BadRequestException(\n            'Al menos una opcion debe ser seleccionada',\n          );\n        }\n\n        if (\n          pregunta.tipo ===\n            TiposRespuestaEnum.OPCION_MULTIPLE_SELECCION_SIMPLE &&\n          respuestaPregunta.opciones.length > 1\n        ) {\n          throw new BadRequestException(\n            'Solo se permite una seleccion para este tipo de pregunta',\n          );\n        }\n\n        for (const idOpcion of respuestaPregunta.opciones) {\n          const opcion = await this.opcionRepository.findOne({\n            where: {\n              id: idOpcion,\n              pregunta: { id: pregunta.id },\n            },\n          });\n\n          if (!opcion) {\n            throw new BadRequestException(\n              `Opcion ${idOpcion} no encontrada o no pertenece a esta pregunta`,\n            );\n          }\n          const respuestaOpcion = this.respuestaOpcionRepository.create({\n            id_respuesta: respuestaGuardada.id,\n            id_opcion: idOpcion,\n          });\n          await this.respuestaOpcionRepository.save(respuestaOpcion);\n        }\n      }\n    }\n  }\n  // obtiene las respuestas registradas de una encuesta específica para visualizarlas.\n  async visualizarRespuestasDto(\n    codigoVisualizacion: string,\n  ): Promise {\n    // Busca la encuesta con el código de visualización\n    const encuesta = await this.encuestaRepository.findOne({\n      where: { codigoResultados: codigoVisualizacion },\n      relations: ['preguntas', 'preguntas.opciones'],\n    });\n\n    if (!encuesta) {\n      throw new NotFoundException('Encuesta no encontrada o enlace inválido'); //si no existe mensaje de error.\n    }\n\n    // Construir el objeto\n    const resultado: VisualizarRespuestasDto = {\n      id: encuesta.id,\n      nombre: encuesta.nombre,\n      codigoRespuesta: encuesta.codigoRespuesta,\n      codigoResultados: encuesta.codigoResultados,\n      preguntas: [],\n    };\n    //itera sobre las preguntas de la encuesta\n    for (const pregunta of encuesta.preguntas) {\n      const preguntaConRespuestas = new PreguntaConRespuestasDto(); //crea un dto de la pregunta.\n\n      preguntaConRespuestas.id = pregunta.id;\n      preguntaConRespuestas.numero = pregunta.numero;\n      preguntaConRespuestas.texto = pregunta.texto;\n      preguntaConRespuestas.tipo = pregunta.tipo;\n      // Inicializar las listas de opciones y respuestas abiertas\n      preguntaConRespuestas.opciones = [];\n      preguntaConRespuestas.respuestas_abiertas = [];\n      //obtiene las preguntas abiertas\n      if (pregunta.tipo === TiposRespuestaEnum.ABIERTA) {\n        const respuestasAbiertas = await this.respuestaAbiertaRepository.find({\n          where: { id_pregunta: pregunta.id },\n        });\n        preguntaConRespuestas.respuestas_abiertas = respuestasAbiertas.map(\n          (r) => r.texto,\n        );\n      }\n\n      if (pregunta.opciones && pregunta.opciones.length > 0) {\n        for (const opcion of pregunta.opciones) {\n          // cuenta cuantas veces fue seleccionada cada opcion\n          const cantidadRespuestas = await this.respuestaOpcionRepository.count(\n            {\n              where: { id_opcion: opcion.id }, // Ajusta esto a tu esquema si es diferente\n            },\n          );\n\n          //  Añade la opción con la cantidad de respuestas al DTO\n\n          preguntaConRespuestas.opciones.push({\n            id: opcion.id,\n            texto: opcion.texto,\n            numero: opcion.numero,\n            cantidad_respuestas: cantidadRespuestas,\n          });\n        }\n      }\n\n      resultado.preguntas.push(preguntaConRespuestas); //Añade la pregunta con sus respuestas al resultado fina\n    }\n\n    return resultado;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VisualizarRespuestasDto.html":{"url":"classes/VisualizarRespuestasDto.html","title":"class - VisualizarRespuestasDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VisualizarRespuestasDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codigoRespuesta\n                            \n                            \n                                codigoResultados\n                            \n                            \n                                id\n                            \n                            \n                                nombre\n                            \n                            \n                                preguntas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codigoRespuesta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        codigoResultados\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preguntas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PreguntaConRespuestasDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/respuestas/dtos/visualizar-respuestas.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TiposRespuestaEnum } from 'src/modules/encuestas/enums/tipos-respuesta.enum';\n// Representa la encuesta con sus respuestas.\nexport class VisualizarRespuestasDto {\n  id: number;\n  nombre: string;\n  codigoRespuesta: string;\n  codigoResultados: string;\n  preguntas: PreguntaConRespuestasDto[];\n}\n//Representa cada pregunta dentro de la encuesta.\nexport class PreguntaConRespuestasDto {\n  id: number;\n  numero: number;\n  texto: string;\n  tipo: TiposRespuestaEnum;\n  opciones: OpcionConRespuestasDto[];\n  respuestas_abiertas: string[];\n  constructor() {\n    this.opciones = [];\n    this.respuestas_abiertas = [];\n  }\n}\n//Define las opciones de respuesta y cuántas veces fueron elegidas.\nexport class OpcionConRespuestasDto {\n  id: number;\n  texto: string;\n  numero: number;\n  cantidad_respuestas: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/controllers/encuestas.controller.ts\n            \n            controller\n            EncuestasController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/actualizar-pregunta.dto.ts\n            \n            class\n            ActualizarPreguntaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-encuesta.dto.ts\n            \n            class\n            CreateEncuestaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-opcion.dto.ts\n            \n            class\n            CreateOpcionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/create-pregunta.dto.ts\n            \n            class\n            CreatePreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/encuestas/dtos/obtener-encuesta.dto.ts\n            \n            class\n            ObtenerEncuestaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/encuesta.entity.ts\n            \n            entity\n            Encuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/opcion.entity.ts\n            \n            entity\n            Opcion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/entities/pregunta.entity.ts\n            \n            entity\n            Pregunta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/encuestas/services/encuestas.service.ts\n            \n            injectable\n            EncuestasService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/preguntas/controllers/preguntas.controller.ts\n            \n            controller\n            PreguntasController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/preguntas/services/preguntas.service.ts\n            \n            injectable\n            PreguntasService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/controllers/respuestas.controller.ts\n            \n            controller\n            RespuestasController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n            \n            class\n            RegistrarRespuestasDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/registrar-respuestas.dto.ts\n            \n            class\n            RespuestaPreguntaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n            \n            class\n            OpcionConRespuestasDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n            \n            class\n            PreguntaConRespuestasDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/respuestas/dtos/visualizar-respuestas.dto.ts\n            \n            class\n            VisualizarRespuestasDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta-abierta.entity.ts\n            \n            entity\n            RespuestaAbierta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta-opcion.entity.ts\n            \n            entity\n            RespuestaOpcion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/entities/respuesta.entity.ts\n            \n            entity\n            Respuesta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/respuestas/services/respuestas.service.ts\n            \n            injectable\n            RespuestasService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.2\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.1.0\n        \n            pg : ^8.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.22\n        \n            uuid : ^11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CodigoTipoEnum   (src/.../codigo-tipo.enum.ts)\n                        \n                        \n                            TiposRespuestaEnum   (src/.../tipos-respuesta.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/encuestas/enums/codigo-tipo.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CodigoTipoEnum\n                    \n                \n                        \n                            \n                                 RESULTADOS\n                            \n                        \n                        \n                            \n                                Value : RESULTADOS\n                            \n                        \n                        \n                            \n                                 RESPUESTA\n                            \n                        \n                        \n                            \n                                Value : RESPUESTA\n                            \n                        \n            \n        \n\n    src/modules/encuestas/enums/tipos-respuesta.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TiposRespuestaEnum\n                    \n                \n                        \n                            \n                                 ABIERTA\n                            \n                        \n                        \n                            \n                                Value : ABIERTA\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_SIMPLE\n                            \n                        \n                        \n                            \n                                 OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n                        \n                            \n                                Value : OPCION_MULTIPLE_SELECCION_MULTIPLE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncuestasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreguntasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RespuestasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_EncuestasModule\n\n\n\ncluster_EncuestasModule_providers\n\n\n\ncluster_PreguntasModule\n\n\n\ncluster_PreguntasModule_providers\n\n\n\ncluster_RespuestasModule\n\n\n\ncluster_RespuestasModule_exports\n\n\n\ncluster_RespuestasModule_providers\n\n\n\n\nEncuestasModule\n\nEncuestasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEncuestasModule->AppModule\n\n\n\n\n\nPreguntasModule\n\nPreguntasModule\n\nAppModule -->\n\nPreguntasModule->AppModule\n\n\n\n\n\nRespuestasModule\n\nRespuestasModule\n\nAppModule -->\n\nRespuestasModule->AppModule\n\n\n\n\n\nRespuestasService \n\nRespuestasService \n\nRespuestasService  -->\n\nRespuestasModule->RespuestasService \n\n\n\n\n\nEncuestasService\n\nEncuestasService\n\nEncuestasModule -->\n\nEncuestasService->EncuestasModule\n\n\n\n\n\nPreguntasService\n\nPreguntasService\n\nPreguntasModule -->\n\nPreguntasService->PreguntasModule\n\n\n\n\n\nRespuestasService\n\nRespuestasService\n\nRespuestasModule -->\n\nRespuestasService->RespuestasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
